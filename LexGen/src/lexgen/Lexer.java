/* The following code was generated by JFlex 1.7.0 */

package lexgen;
import static lexgen.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/jmoll/Documents/URL/201902/Compis/ProyectoCompiladores/LexGen/src/lexgen/lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\1\4\10\0\1\3\1\2\1\67\1\3\1\1\22\0\1\44\1\47"+
    "\1\0\1\62\1\0\1\46\1\51\1\66\1\56\1\57\1\6\1\45"+
    "\1\46\1\7\1\53\1\5\2\65\1\30\7\65\1\0\1\46\1\47"+
    "\1\50\1\47\1\0\1\46\1\15\1\10\1\20\1\25\1\26\1\31"+
    "\1\12\1\21\1\11\1\43\1\41\1\32\1\27\1\13\1\24\1\42"+
    "\1\36\1\16\1\23\1\14\1\22\1\34\1\35\1\33\1\17\1\40"+
    "\1\54\1\0\1\55\1\0\1\37\1\0\32\63\1\60\1\52\1\61"+
    "\7\0\1\67\44\0\1\63\12\0\1\63\4\0\1\63\5\0\27\63"+
    "\1\0\37\63\1\0\u01ca\63\4\0\14\63\16\0\5\63\7\0\1\63"+
    "\1\0\1\63\201\0\5\63\1\0\2\63\2\0\4\63\1\0\1\63"+
    "\6\0\1\63\1\0\3\63\1\0\1\63\1\0\24\63\1\0\123\63"+
    "\1\0\213\63\10\0\246\63\1\0\46\63\2\0\1\63\7\0\47\63"+
    "\110\0\33\63\5\0\3\63\55\0\53\63\25\0\12\64\4\0\2\63"+
    "\1\0\143\63\1\0\1\63\17\0\2\63\7\0\2\63\12\64\3\63"+
    "\2\0\1\63\20\0\1\63\1\0\36\63\35\0\131\63\13\0\1\63"+
    "\16\0\12\64\41\63\11\0\2\63\4\0\1\63\5\0\26\63\4\0"+
    "\1\63\11\0\1\63\3\0\1\63\27\0\31\63\107\0\25\63\1\0"+
    "\10\63\106\0\66\63\3\0\1\63\22\0\1\63\7\0\12\63\4\0"+
    "\12\64\1\0\20\63\4\0\10\63\2\0\2\63\2\0\26\63\1\0"+
    "\7\63\1\0\1\63\3\0\4\63\3\0\1\63\20\0\1\63\15\0"+
    "\2\63\1\0\3\63\4\0\12\64\2\63\23\0\6\63\4\0\2\63"+
    "\2\0\26\63\1\0\7\63\1\0\2\63\1\0\2\63\1\0\2\63"+
    "\37\0\4\63\1\0\1\63\7\0\12\64\2\0\3\63\20\0\11\63"+
    "\1\0\3\63\1\0\26\63\1\0\7\63\1\0\2\63\1\0\5\63"+
    "\3\0\1\63\22\0\1\63\17\0\2\63\4\0\12\64\11\0\1\63"+
    "\13\0\10\63\2\0\2\63\2\0\26\63\1\0\7\63\1\0\2\63"+
    "\1\0\5\63\3\0\1\63\36\0\2\63\1\0\3\63\4\0\12\64"+
    "\1\0\1\63\21\0\1\63\1\0\6\63\3\0\3\63\1\0\4\63"+
    "\3\0\2\63\1\0\1\63\1\0\2\63\3\0\2\63\3\0\3\63"+
    "\3\0\14\63\26\0\1\63\25\0\12\64\25\0\10\63\1\0\3\63"+
    "\1\0\27\63\1\0\20\63\3\0\1\63\32\0\3\63\5\0\2\63"+
    "\4\0\12\64\20\0\1\63\4\0\10\63\1\0\3\63\1\0\27\63"+
    "\1\0\12\63\1\0\5\63\3\0\1\63\40\0\1\63\1\0\2\63"+
    "\4\0\12\64\1\0\2\63\22\0\10\63\1\0\3\63\1\0\51\63"+
    "\2\0\1\63\20\0\1\63\5\0\3\63\10\0\3\63\4\0\12\64"+
    "\12\0\6\63\5\0\22\63\3\0\30\63\1\0\11\63\1\0\1\63"+
    "\2\0\7\63\37\0\12\64\21\0\60\63\1\0\2\63\14\0\7\63"+
    "\11\0\12\64\47\0\2\63\1\0\1\63\2\0\2\63\1\0\1\63"+
    "\2\0\1\63\6\0\4\63\1\0\7\63\1\0\3\63\1\0\1\63"+
    "\1\0\1\63\2\0\2\63\1\0\4\63\1\0\2\63\11\0\1\63"+
    "\2\0\5\63\1\0\1\63\11\0\12\64\2\0\4\63\40\0\1\63"+
    "\37\0\12\64\26\0\10\63\1\0\44\63\33\0\5\63\163\0\53\63"+
    "\24\0\1\63\12\64\6\0\6\63\4\0\4\63\3\0\1\63\3\0"+
    "\2\63\7\0\3\63\4\0\15\63\14\0\1\63\1\0\12\64\6\0"+
    "\46\63\1\0\1\63\5\0\1\63\2\0\53\63\1\0\u014d\63\1\0"+
    "\4\63\2\0\7\63\1\0\1\63\1\0\4\63\2\0\51\63\1\0"+
    "\4\63\2\0\41\63\1\0\4\63\2\0\7\63\1\0\1\63\1\0"+
    "\4\63\2\0\17\63\1\0\71\63\1\0\4\63\2\0\103\63\45\0"+
    "\20\63\20\0\126\63\2\0\6\63\3\0\u026c\63\2\0\21\63\1\0"+
    "\32\63\5\0\113\63\6\0\10\63\7\0\15\63\1\0\4\63\16\0"+
    "\22\63\16\0\22\63\16\0\15\63\1\0\3\63\17\0\64\63\43\0"+
    "\1\63\4\0\1\63\3\0\12\64\46\0\12\64\6\0\130\63\10\0"+
    "\5\63\2\0\42\63\1\0\1\63\5\0\106\63\12\0\37\63\47\0"+
    "\12\64\36\63\2\0\5\63\13\0\54\63\4\0\32\63\6\0\12\64"+
    "\46\0\27\63\11\0\65\63\53\0\12\64\6\0\12\64\15\0\1\63"+
    "\135\0\57\63\21\0\7\63\4\0\12\64\51\0\36\63\15\0\2\63"+
    "\12\64\54\63\32\0\44\63\34\0\12\64\3\0\3\63\12\64\44\63"+
    "\2\0\11\63\140\0\4\63\1\0\4\63\3\0\2\63\11\0\300\63"+
    "\100\0\u0116\63\2\0\6\63\2\0\46\63\2\0\6\63\2\0\10\63"+
    "\1\0\1\63\1\0\1\63\1\0\1\63\1\0\37\63\2\0\65\63"+
    "\1\0\7\63\1\0\1\63\3\0\3\63\1\0\7\63\3\0\4\63"+
    "\2\0\6\63\4\0\15\63\5\0\3\63\1\0\7\63\53\0\1\67"+
    "\1\67\107\0\1\63\15\0\1\63\20\0\15\63\145\0\1\63\4\0"+
    "\1\63\2\0\12\63\1\0\1\63\3\0\5\63\6\0\1\63\1\0"+
    "\1\63\1\0\1\63\1\0\4\63\1\0\13\63\2\0\4\63\5\0"+
    "\5\63\4\0\1\63\64\0\2\63\u0a7b\0\57\63\1\0\57\63\1\0"+
    "\205\63\6\0\4\63\3\0\2\63\14\0\46\63\1\0\1\63\5\0"+
    "\1\63\2\0\70\63\7\0\1\63\20\0\27\63\11\0\7\63\1\0"+
    "\7\63\1\0\7\63\1\0\7\63\1\0\7\63\1\0\7\63\1\0"+
    "\7\63\1\0\7\63\120\0\1\63\u01d5\0\2\63\52\0\5\63\5\0"+
    "\2\63\4\0\126\63\6\0\3\63\1\0\132\63\1\0\4\63\5\0"+
    "\51\63\3\0\136\63\21\0\33\63\65\0\20\63\u0200\0\u19b6\63\112\0"+
    "\u51d6\63\52\0\u048d\63\103\0\56\63\2\0\u010d\63\3\0\20\63\12\64"+
    "\2\63\24\0\57\63\20\0\37\63\2\0\106\63\61\0\11\63\2\0"+
    "\147\63\2\0\44\63\1\0\10\63\77\0\13\63\1\0\3\63\1\0"+
    "\4\63\1\0\27\63\35\0\64\63\16\0\62\63\34\0\12\64\30\0"+
    "\6\63\3\0\1\63\1\0\1\63\2\0\12\64\34\63\12\0\27\63"+
    "\31\0\35\63\7\0\57\63\34\0\1\63\12\64\6\0\5\63\1\0"+
    "\12\63\12\64\5\63\1\0\51\63\27\0\3\63\1\0\10\63\4\0"+
    "\12\64\6\0\27\63\3\0\1\63\3\0\62\63\1\0\1\63\3\0"+
    "\2\63\2\0\5\63\2\0\1\63\1\0\1\63\30\0\3\63\2\0"+
    "\13\63\7\0\3\63\14\0\6\63\2\0\6\63\2\0\6\63\11\0"+
    "\7\63\1\0\7\63\1\0\53\63\1\0\12\63\12\0\163\63\15\0"+
    "\12\64\6\0\u2ba4\63\14\0\27\63\4\0\61\63\u2104\0\u016e\63\2\0"+
    "\152\63\46\0\7\63\14\0\5\63\5\0\1\63\1\0\12\63\1\0"+
    "\15\63\1\0\5\63\1\0\1\63\1\0\2\63\1\0\2\63\1\0"+
    "\154\63\41\0\u016b\63\22\0\100\63\2\0\66\63\50\0\14\63\164\0"+
    "\5\63\1\0\207\63\23\0\12\64\7\0\32\63\6\0\32\63\13\0"+
    "\131\63\3\0\6\63\2\0\6\63\2\0\6\63\2\0\3\63\43\0"+
    "\14\63\1\0\32\63\1\0\23\63\1\0\2\63\1\0\17\63\2\0"+
    "\16\63\42\0\173\63\u0185\0\35\63\3\0\61\63\57\0\40\63\20\0"+
    "\21\63\1\0\10\63\6\0\46\63\12\0\36\63\2\0\44\63\4\0"+
    "\10\63\60\0\236\63\2\0\12\64\6\0\44\63\4\0\44\63\4\0"+
    "\50\63\10\0\64\63\234\0\u0137\63\11\0\26\63\12\0\10\63\230\0"+
    "\6\63\2\0\1\63\1\0\54\63\1\0\2\63\3\0\1\63\2\0"+
    "\27\63\12\0\27\63\11\0\37\63\101\0\23\63\1\0\2\63\12\0"+
    "\26\63\12\0\32\63\106\0\70\63\6\0\2\63\100\0\1\63\17\0"+
    "\4\63\1\0\3\63\1\0\33\63\54\0\35\63\3\0\35\63\43\0"+
    "\10\63\1\0\34\63\33\0\66\63\12\0\26\63\12\0\23\63\15\0"+
    "\22\63\156\0\111\63\67\0\63\63\15\0\63\63\u0310\0\65\63\56\0"+
    "\12\64\23\0\55\63\40\0\31\63\7\0\12\64\11\0\44\63\17\0"+
    "\12\64\20\0\43\63\3\0\1\63\14\0\60\63\16\0\4\63\13\0"+
    "\12\64\1\63\1\0\1\63\43\0\22\63\1\0\31\63\124\0\7\63"+
    "\1\0\1\63\1\0\4\63\1\0\17\63\1\0\12\63\7\0\57\63"+
    "\21\0\12\64\13\0\10\63\2\0\2\63\2\0\26\63\1\0\7\63"+
    "\1\0\2\63\1\0\5\63\3\0\1\63\22\0\1\63\14\0\5\63"+
    "\236\0\65\63\22\0\4\63\5\0\12\64\46\0\60\63\24\0\2\63"+
    "\1\0\1\63\10\0\12\64\246\0\57\63\51\0\4\63\44\0\60\63"+
    "\24\0\1\63\13\0\12\64\46\0\53\63\25\0\12\64\66\0\32\63"+
    "\26\0\12\64\u0166\0\100\63\12\64\25\0\1\63\u01c0\0\71\63\u0107\0"+
    "\11\63\1\0\45\63\21\0\1\63\17\0\12\64\30\0\36\63\u0370\0"+
    "\u039a\63\346\0\304\63\u0abc\0\u042f\63\u0fd1\0\u0247\63\u21b9\0\u0239\63\7\0"+
    "\37\63\1\0\12\64\146\0\36\63\22\0\60\63\20\0\4\63\14\0"+
    "\12\64\11\0\25\63\5\0\23\63\u0370\0\105\63\13\0\1\63\102\0"+
    "\15\63\100\0\1\63\37\0\u17ed\63\23\0\u02f3\63\u250d\0\2\63\u0bfe\0"+
    "\153\63\5\0\15\63\3\0\11\63\7\0\12\63\u1766\0\125\63\1\0"+
    "\107\63\1\0\2\63\2\0\1\63\2\0\2\63\2\0\4\63\1\0"+
    "\14\63\1\0\1\63\1\0\7\63\1\0\101\63\1\0\4\63\2\0"+
    "\10\63\1\0\7\63\1\0\34\63\1\0\4\63\1\0\5\63\1\0"+
    "\1\63\3\0\7\63\1\0\u0154\63\2\0\31\63\1\0\31\63\1\0"+
    "\37\63\1\0\31\63\1\0\37\63\1\0\31\63\1\0\37\63\1\0"+
    "\31\63\1\0\37\63\1\0\31\63\1\0\10\63\2\0\62\64\u1000\0"+
    "\305\63\73\0\104\63\14\0\12\64\u04a6\0\4\63\1\0\33\63\1\0"+
    "\2\63\1\0\1\63\2\0\1\63\1\0\12\63\1\0\4\63\1\0"+
    "\1\63\1\0\1\63\6\0\1\63\4\0\1\63\1\0\1\63\1\0"+
    "\1\63\1\0\3\63\1\0\2\63\1\0\1\63\2\0\1\63\1\0"+
    "\1\63\1\0\1\63\1\0\1\63\1\0\1\63\1\0\2\63\1\0"+
    "\1\63\2\0\4\63\1\0\7\63\1\0\4\63\1\0\4\63\1\0"+
    "\1\63\1\0\12\63\1\0\21\63\5\0\3\63\1\0\5\63\1\0"+
    "\21\63\u1144\0\ua6d7\63\51\0\u1035\63\13\0\336\63\2\0\u1682\63\u295e\0"+
    "\u021e\63\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05f0\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\3\3\20\4\1\5\12\4\1\3"+
    "\2\1\4\3\1\1\1\0\1\6\3\4\1\7\3\4"+
    "\2\7\3\4\1\7\6\4\1\7\7\4\1\7\6\4"+
    "\1\7\41\4\2\7\2\4\1\7\22\4\1\10\36\4"+
    "\1\0\1\11\1\12\1\0\2\6\2\4\1\13\10\4"+
    "\1\13\44\4\1\7\42\4\1\7\7\4\1\7\5\4"+
    "\1\7\3\4\1\7\12\4\1\7\3\4\1\7\6\4"+
    "\1\7\3\4\1\0\6\4\1\7\10\4\1\13\20\4"+
    "\2\0\1\6\24\4\1\7\3\4\1\13\3\4\1\7"+
    "\4\4\1\13\12\4\1\7\12\4\1\13\44\4\2\7"+
    "\4\4\1\13\3\4\1\7\2\4\1\0\7\4\1\0"+
    "\10\4\1\7\2\4\1\7\3\4\1\7\4\4\1\0"+
    "\1\12\17\4\1\7\23\4\1\7\51\4\1\0\1\10"+
    "\5\4\1\7\43\4\1\7\22\4\1\0\20\4\1\7"+
    "\2\4\2\7\11\4\1\7\10\4\1\0\1\4\1\0"+
    "\1\4\1\7\6\4\1\7\15\4\1\13\1\7\1\0"+
    "\3\4\1\7\13\4\1\0\14\4\1\0\12\4\1\0"+
    "\1\7\27\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[742];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\70\0\250\0\70\0\340\0\u0118"+
    "\0\u0150\0\u0188\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8"+
    "\0\u0310\0\u0348\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498"+
    "\0\u04d0\0\u0508\0\u0540\0\u0578\0\u05b0\0\u05e8\0\u0620\0\u0658"+
    "\0\u0690\0\u06c8\0\u0700\0\u0738\0\u0770\0\u07a8\0\u07e0\0\u0818"+
    "\0\u0850\0\u0888\0\u08c0\0\u08f8\0\u0930\0\u0968\0\u09a0\0\u05e8"+
    "\0\u09d8\0\u0a10\0\u0a48\0\u0a80\0\u0ab8\0\u0af0\0\u0b28\0\u0b60"+
    "\0\u0b98\0\u0bd0\0\u0c08\0\u0c40\0\u0c78\0\u0cb0\0\u0ce8\0\u0d20"+
    "\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38\0\u0e70\0\u0ea8\0\u0ee0"+
    "\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8\0\u1030\0\u1068\0\u10a0"+
    "\0\u10d8\0\u1110\0\u1148\0\u1180\0\u11b8\0\u11f0\0\u1228\0\u1260"+
    "\0\u1298\0\u12d0\0\u1308\0\u1340\0\u1378\0\u13b0\0\u13e8\0\u1420"+
    "\0\u1458\0\u1490\0\u14c8\0\u1500\0\u1538\0\u1570\0\u15a8\0\u15e0"+
    "\0\u1618\0\u1650\0\u1688\0\u16c0\0\u16f8\0\u1730\0\u1768\0\u17a0"+
    "\0\u17d8\0\u1810\0\u1848\0\u1880\0\u18b8\0\u18f0\0\u1928\0\u1960"+
    "\0\u1998\0\u19d0\0\u1a08\0\u1a40\0\u1a78\0\u1ab0\0\u1ae8\0\u1b20"+
    "\0\u1b58\0\u1b90\0\u1bc8\0\u1c00\0\u1c38\0\u1c70\0\u1ca8\0\u1ce0"+
    "\0\u1d18\0\u1d50\0\u1d88\0\u1dc0\0\u1df8\0\u1e30\0\u1e68\0\u1ea0"+
    "\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u1ff0\0\u2028\0\u2060"+
    "\0\u2098\0\u20d0\0\u2108\0\u2140\0\u2178\0\u21b0\0\u21e8\0\u2220"+
    "\0\u2258\0\u2290\0\u22c8\0\u2300\0\u2338\0\u2370\0\u0888\0\70"+
    "\0\u23a8\0\u23e0\0\u2418\0\70\0\u2450\0\u2488\0\u24c0\0\u24f8"+
    "\0\u2530\0\u2568\0\u25a0\0\u25d8\0\u2610\0\u2648\0\u2680\0\u26b8"+
    "\0\u26f0\0\u2728\0\u2760\0\u2798\0\u27d0\0\u2808\0\u2840\0\u2878"+
    "\0\u28b0\0\u28e8\0\u2920\0\u2958\0\u2990\0\u29c8\0\u2a00\0\u2a38"+
    "\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18\0\u2b50\0\u2b88\0\u2bc0\0\u2bf8"+
    "\0\u2c30\0\u2c68\0\u2ca0\0\u2cd8\0\u2d10\0\u2d48\0\u2d80\0\u2db8"+
    "\0\u2df0\0\u2e28\0\u2e60\0\u2e98\0\u2ed0\0\u2f08\0\u2f40\0\u2f78"+
    "\0\u2fb0\0\u2fe8\0\u3020\0\u3058\0\u3090\0\u30c8\0\u3100\0\u3138"+
    "\0\u3170\0\u31a8\0\u31e0\0\u3218\0\u3250\0\u3288\0\u32c0\0\u32f8"+
    "\0\u3330\0\u3368\0\u33a0\0\u33d8\0\u3410\0\u3448\0\u3480\0\u34b8"+
    "\0\u34f0\0\u3528\0\u3560\0\u3598\0\u35d0\0\u3608\0\u3640\0\u31a8"+
    "\0\u3678\0\u36b0\0\u36e8\0\u3720\0\u3758\0\u3790\0\u37c8\0\u3800"+
    "\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918\0\u3950\0\u3988\0\u39c0"+
    "\0\u39f8\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10\0\u3b48\0\u3b80"+
    "\0\u0ee0\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0\0\u3d08"+
    "\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58\0\u3e90\0\u3ec8"+
    "\0\u3f00\0\u3f38\0\u3f70\0\u3fa8\0\u3fe0\0\u4018\0\u4050\0\u4088"+
    "\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0\0\u41d8\0\u4210\0\u4248"+
    "\0\u4280\0\u42b8\0\u42f0\0\u05e8\0\u4328\0\u4360\0\u4398\0\u43d0"+
    "\0\u4408\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590"+
    "\0\u45c8\0\u4600\0\u4638\0\u4670\0\u23a8\0\u46a8\0\u46e0\0\u4718"+
    "\0\u4750\0\u4788\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0\0\u48d8"+
    "\0\u4910\0\u4948\0\u4980\0\u49b8\0\u49f0\0\u4a28\0\u4a60\0\u4a98"+
    "\0\u4ad0\0\u4b08\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20\0\u4c58"+
    "\0\u4c90\0\u4cc8\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0\0\u4e18"+
    "\0\u4e50\0\u4e88\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68\0\u4fa0\0\u4fd8"+
    "\0\u5010\0\u5048\0\u5080\0\u50b8\0\u50f0\0\u5128\0\u5160\0\u5198"+
    "\0\u51d0\0\u5208\0\u5240\0\u5278\0\u52b0\0\u52e8\0\u5320\0\u5358"+
    "\0\u5390\0\u53c8\0\u5400\0\u5438\0\u5470\0\u54a8\0\u54e0\0\u5518"+
    "\0\u5550\0\u3ec8\0\u5588\0\u55c0\0\u55f8\0\u5630\0\u5668\0\u56a0"+
    "\0\u56d8\0\u5710\0\u5748\0\u5780\0\u57b8\0\u57f0\0\u5828\0\u5860"+
    "\0\u5898\0\u58d0\0\u5908\0\u5940\0\u5978\0\u59b0\0\u59e8\0\u5a20"+
    "\0\u5a58\0\u5a90\0\u5ac8\0\u5b00\0\u5b38\0\u5b70\0\u5ba8\0\u5be0"+
    "\0\u5c18\0\u5c50\0\u5c88\0\u5cc0\0\u5cf8\0\u5d30\0\u5d68\0\u5da0"+
    "\0\u5dd8\0\u5e10\0\u5e48\0\u5e80\0\u5eb8\0\u5ef0\0\u5f28\0\u5f60"+
    "\0\u5f98\0\u5fd0\0\u6008\0\u6040\0\u6078\0\u60b0\0\u60e8\0\u6120"+
    "\0\u6158\0\u6190\0\u61c8\0\u6200\0\u6238\0\u6270\0\u62a8\0\u62e0"+
    "\0\u6318\0\u6350\0\u6388\0\u63c0\0\u63f8\0\u46e0\0\70\0\u6430"+
    "\0\u6468\0\u64a0\0\u64d8\0\u6510\0\u6548\0\u6580\0\u65b8\0\u65f0"+
    "\0\u6628\0\u6660\0\u6698\0\u66d0\0\u6708\0\u6740\0\u6778\0\u67b0"+
    "\0\u67e8\0\u6820\0\u6858\0\u6890\0\u68c8\0\u6900\0\u6938\0\u6970"+
    "\0\u69a8\0\u69e0\0\u6a18\0\u6a50\0\u6a88\0\u6ac0\0\u6af8\0\u6b30"+
    "\0\u6b68\0\u6ba0\0\u6bd8\0\u6c10\0\u6c48\0\u6c80\0\u6cb8\0\u6cf0"+
    "\0\u6d28\0\u6d60\0\u6d98\0\u6dd0\0\u6e08\0\u6e40\0\u6e78\0\u6eb0"+
    "\0\u6ee8\0\u6f20\0\u6f58\0\u6f90\0\u6fc8\0\u7000\0\u7038\0\u7070"+
    "\0\u70a8\0\u70e0\0\u7118\0\u24c0\0\u7150\0\u7188\0\u71c0\0\u71f8"+
    "\0\u7230\0\u7268\0\u72a0\0\u72d8\0\u7310\0\u7348\0\u7380\0\u2ed0"+
    "\0\u73b8\0\u73f0\0\u7428\0\u7460\0\u7498\0\u5f98\0\u74d0\0\u7508"+
    "\0\u7540\0\u7578\0\u75b0\0\u4ad0\0\u75e8\0\u7620\0\u7658\0\u7690"+
    "\0\u76c8\0\u7700\0\u7738\0\u7770\0\u77a8\0\u77e0\0\u7818\0\u7850"+
    "\0\u7888\0\u78c0\0\u78f8\0\u7930\0\u7968\0\u79a0\0\u79d8\0\u7a10"+
    "\0\u7a48\0\u7a80\0\u7ab8\0\u7af0\0\u7b28\0\u7b60\0\u7b98\0\u7bd0"+
    "\0\u7c08\0\u7c40\0\u7c78\0\u7cb0\0\u7ce8\0\u7d20\0\u7d58\0\u7d90"+
    "\0\u7dc8\0\u7e00\0\u7e38\0\u7e70\0\u7ea8\0\u7ee0\0\u7f18\0\u7f50"+
    "\0\u7f88\0\u7fc0\0\u7ff8\0\u8030\0\u8068\0\u80a0\0\u80d8\0\u8110"+
    "\0\u8148\0\u8180\0\u81b8\0\u81f0\0\u8228\0\u8260\0\u8298\0\u82d0"+
    "\0\u8308\0\u17d8\0\u8340\0\u8378\0\u83b0\0\u83e8\0\u8420\0\u8458"+
    "\0\u8490\0\u84c8\0\u8500\0\u4248\0\u8538\0\u8570\0\u85a8\0\u2e28"+
    "\0\u85e0\0\u8618\0\u8650\0\u8688\0\u86c0\0\u86f8\0\u8730\0\u3800"+
    "\0\u8768\0\u7e00\0\u87a0\0\u87d8\0\u8810\0\u8848\0\u8880\0\u88b8"+
    "\0\u88f0\0\u8928\0\u8960\0\u8998\0\u89d0\0\u8a08\0\u8a40\0\u8a78"+
    "\0\u8ab0\0\u8ae8\0\u8b20\0\u8b58\0\u8b90\0\u8bc8\0\u8c00\0\u8c38"+
    "\0\u8c70\0\u8ca8\0\u8ce0\0\u8d18\0\u8d50\0\u8d88\0\u8dc0\0\u8df8"+
    "\0\u8e30\0\u8e68\0\u8ea0\0\u8ed8\0\70\0\u8f10\0\u8f48\0\u8f80"+
    "\0\u8fb8\0\u24c0\0\u8ff0\0\u9028\0\u9060\0\u9098\0\u90d0\0\u9108"+
    "\0\u9140\0\u9178\0\u91b0\0\u91e8\0\u9220\0\u9258\0\u9290\0\u92c8"+
    "\0\u9300\0\u9338\0\u9370\0\u93a8\0\u93e0\0\u9418\0\u9450\0\u9488"+
    "\0\u94c0\0\u94f8\0\u9530\0\u9568\0\u95a0\0\u95d8\0\u9610\0\u9648"+
    "\0\u9680\0\u96b8\0\u96f0\0\u9728\0\u9760\0\u9798\0\u97d0\0\u9808"+
    "\0\u9840\0\u9878\0\u98b0\0\u98e8\0\u9920\0\u9958\0\u9990\0\u99c8"+
    "\0\u9a00\0\u9a38\0\u9a70\0\u9aa8\0\u9ae0\0\u9b18\0\u8bc8\0\u9b50"+
    "\0\u9b88\0\u9bc0\0\u9bf8\0\u9c30\0\u9c68\0\u9ca0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[742];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\3\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\2\1\37\1\40"+
    "\1\41\1\42\1\4\2\6\2\43\1\44\1\45\1\6"+
    "\1\46\1\6\1\47\1\6\1\50\1\6\1\51\1\36"+
    "\1\2\1\30\1\52\73\0\1\4\73\0\1\53\70\0"+
    "\1\54\70\0\1\36\1\55\3\36\1\56\1\57\1\60"+
    "\2\36\1\61\1\36\1\62\1\36\1\63\15\36\17\0"+
    "\3\36\12\0\3\36\1\64\7\36\1\65\1\36\1\66"+
    "\1\36\1\67\1\36\1\60\12\36\17\0\3\36\12\0"+
    "\6\36\1\70\5\36\1\71\1\36\1\72\3\36\1\73"+
    "\11\36\17\0\3\36\12\0\4\36\1\74\1\75\2\36"+
    "\1\76\1\36\1\77\1\36\1\100\1\36\1\101\5\36"+
    "\1\102\7\36\17\0\3\36\12\0\1\36\1\103\3\36"+
    "\1\104\1\105\2\36\1\106\1\36\1\107\1\110\1\36"+
    "\1\111\15\36\17\0\3\36\12\0\1\112\2\36\1\113"+
    "\1\60\1\36\1\114\1\36\1\115\1\36\1\116\1\117"+
    "\1\36\1\120\4\36\1\121\1\36\1\122\7\36\17\0"+
    "\3\36\12\0\1\36\1\123\3\36\1\124\4\36\1\125"+
    "\1\36\1\126\1\36\1\127\15\36\17\0\3\36\12\0"+
    "\16\36\1\130\15\36\17\0\3\36\12\0\5\36\1\131"+
    "\1\132\2\36\1\133\1\134\1\36\1\135\5\36\1\136"+
    "\11\36\17\0\3\36\12\0\1\36\1\137\3\36\1\140"+
    "\6\36\1\141\17\36\17\0\3\36\12\0\3\36\1\142"+
    "\7\36\1\143\16\36\1\144\1\36\17\0\3\36\12\0"+
    "\1\36\1\145\2\36\1\146\1\147\1\36\1\150\1\151"+
    "\1\152\1\153\1\36\1\154\1\36\1\155\1\156\6\36"+
    "\1\157\3\36\1\160\1\36\17\0\3\36\12\0\3\36"+
    "\1\161\2\36\1\162\1\36\1\163\1\36\1\164\6\36"+
    "\1\165\2\36\1\166\5\36\1\167\1\36\17\0\3\36"+
    "\12\0\1\170\1\171\3\36\1\172\1\173\3\36\1\174"+
    "\1\36\1\175\1\36\1\176\15\36\17\0\3\36\12\0"+
    "\3\36\1\177\2\36\1\200\4\36\1\201\6\36\1\202"+
    "\1\203\10\36\17\0\3\36\12\0\1\36\1\204\3\36"+
    "\1\205\6\36\1\206\1\36\1\207\15\36\17\0\3\36"+
    "\32\0\1\30\22\0\1\210\11\0\1\30\12\0\1\36"+
    "\1\211\3\36\1\212\1\213\3\36\1\214\1\36\1\215"+
    "\1\36\1\216\3\36\1\217\11\36\17\0\3\36\12\0"+
    "\1\36\1\220\3\36\1\221\6\36\1\222\1\36\1\223"+
    "\15\36\17\0\3\36\12\0\17\36\1\224\14\36\17\0"+
    "\3\36\12\0\1\36\1\225\3\36\1\226\26\36\17\0"+
    "\3\36\12\0\1\36\1\227\3\36\1\230\1\231\2\36"+
    "\1\232\2\36\1\233\17\36\17\0\3\36\12\0\34\36"+
    "\17\0\3\36\12\0\14\36\1\234\17\36\17\0\3\36"+
    "\12\0\1\36\1\235\14\36\1\236\15\36\17\0\3\36"+
    "\12\0\1\36\1\237\3\36\1\240\1\241\3\36\1\242"+
    "\1\36\1\243\1\36\1\244\3\36\1\245\11\36\17\0"+
    "\3\36\12\0\14\36\1\246\17\36\17\0\3\36\52\0"+
    "\1\6\70\0\1\6\70\0\1\6\72\0\1\6\71\0"+
    "\1\6\71\0\1\6\70\0\1\6\5\0\1\247\2\0"+
    "\63\247\1\250\1\247\4\53\1\251\1\53\1\252\61\53"+
    "\1\54\1\253\1\254\65\54\10\0\2\36\1\255\1\256"+
    "\1\257\27\36\17\0\3\36\12\0\10\36\1\260\23\36"+
    "\17\0\3\36\12\0\14\36\1\261\1\36\1\262\15\36"+
    "\17\0\3\36\12\0\22\36\1\263\11\36\17\0\3\36"+
    "\12\0\4\36\1\264\27\36\17\0\3\36\12\0\2\36"+
    "\1\246\1\36\1\265\27\36\17\0\3\36\12\0\1\36"+
    "\1\266\1\36\1\267\1\270\3\36\1\271\2\36\1\272"+
    "\1\36\1\273\14\36\1\274\1\36\17\0\3\36\12\0"+
    "\14\36\1\275\17\36\17\0\3\36\12\0\16\36\1\276"+
    "\15\36\17\0\3\36\12\0\5\36\1\277\11\36\1\300"+
    "\14\36\17\0\3\36\12\0\5\36\1\301\6\36\1\302"+
    "\17\36\17\0\3\36\12\0\4\36\1\303\27\36\17\0"+
    "\3\36\12\0\4\36\1\60\27\36\17\0\3\36\12\0"+
    "\14\36\1\304\17\36\17\0\3\36\12\0\16\36\1\305"+
    "\15\36\17\0\3\36\12\0\4\36\1\306\12\36\1\307"+
    "\14\36\17\0\3\36\12\0\11\36\1\310\22\36\17\0"+
    "\3\36\12\0\17\36\1\311\2\36\1\312\11\36\17\0"+
    "\3\36\12\0\3\36\1\313\1\60\3\36\1\314\23\36"+
    "\17\0\3\36\12\0\23\36\1\72\10\36\17\0\3\36"+
    "\12\0\5\36\1\315\26\36\17\0\3\36\12\0\3\36"+
    "\1\316\13\36\1\317\14\36\17\0\3\36\12\0\1\320"+
    "\33\36\17\0\3\36\12\0\1\36\1\321\3\36\1\322"+
    "\1\36\1\323\2\36\1\324\21\36\17\0\3\36\12\0"+
    "\16\36\1\325\15\36\17\0\3\36\12\0\16\36\1\326"+
    "\15\36\17\0\3\36\12\0\32\36\1\60\1\36\17\0"+
    "\3\36\12\0\17\36\1\327\3\36\1\330\10\36\17\0"+
    "\3\36\12\0\13\36\1\331\20\36\17\0\3\36\12\0"+
    "\7\36\1\60\5\36\1\60\16\36\17\0\3\36\12\0"+
    "\16\36\1\60\15\36\17\0\3\36\12\0\4\36\1\332"+
    "\27\36\17\0\3\36\12\0\4\36\1\333\27\36\17\0"+
    "\3\36\12\0\10\36\1\60\2\36\1\334\20\36\17\0"+
    "\3\36\12\0\5\36\1\60\7\36\1\60\16\36\17\0"+
    "\3\36\12\0\4\36\1\267\15\36\1\335\11\36\17\0"+
    "\3\36\12\0\2\36\1\60\31\36\17\0\3\36\12\0"+
    "\2\36\1\336\31\36\17\0\3\36\12\0\1\36\1\337"+
    "\32\36\17\0\3\36\12\0\22\36\1\114\11\36\17\0"+
    "\3\36\12\0\22\36\1\340\2\36\1\341\6\36\17\0"+
    "\3\36\12\0\4\36\1\342\1\343\2\36\1\344\2\36"+
    "\1\345\5\36\1\346\1\347\1\36\1\350\5\36\1\351"+
    "\1\36\17\0\3\36\12\0\5\36\1\352\26\36\17\0"+
    "\3\36\12\0\4\36\1\353\6\36\1\354\20\36\17\0"+
    "\3\36\12\0\14\36\1\355\1\36\1\356\15\36\17\0"+
    "\3\36\12\0\5\36\1\357\10\36\1\360\15\36\17\0"+
    "\3\36\12\0\6\36\1\361\25\36\17\0\3\36\12\0"+
    "\3\36\1\362\1\36\1\363\1\364\3\36\1\301\4\36"+
    "\1\365\2\36\1\366\11\36\17\0\3\36\12\0\12\36"+
    "\1\367\1\36\1\202\17\36\17\0\3\36\12\0\16\36"+
    "\1\370\15\36\17\0\3\36\12\0\24\36\1\371\7\36"+
    "\17\0\3\36\12\0\12\36\1\352\7\36\1\372\11\36"+
    "\17\0\3\36\12\0\1\36\1\373\27\36\1\374\1\375"+
    "\1\36\17\0\3\36\12\0\1\36\1\376\3\36\1\377"+
    "\10\36\1\u0100\15\36\17\0\3\36\12\0\15\36\1\u0101"+
    "\14\36\1\267\1\36\17\0\3\36\12\0\30\36\1\114"+
    "\3\36\17\0\3\36\12\0\5\36\1\u0102\26\36\17\0"+
    "\3\36\12\0\24\36\1\114\7\36\17\0\3\36\12\0"+
    "\13\36\1\u0103\20\36\17\0\3\36\12\0\6\36\1\u0104"+
    "\2\36\1\u0105\22\36\17\0\3\36\12\0\12\36\1\u0106"+
    "\21\36\17\0\3\36\12\0\1\u0107\16\36\1\60\14\36"+
    "\17\0\3\36\12\0\17\36\1\114\14\36\17\0\3\36"+
    "\12\0\4\36\1\u0108\3\36\1\u0109\2\36\1\u010a\3\36"+
    "\1\u010b\2\36\1\u010c\11\36\17\0\3\36\12\0\5\36"+
    "\1\u010d\26\36\17\0\3\36\12\0\22\36\1\u010e\11\36"+
    "\17\0\3\36\12\0\5\36\1\u010f\26\36\17\0\3\36"+
    "\12\0\22\36\1\236\11\36\17\0\3\36\12\0\15\36"+
    "\1\267\16\36\17\0\3\36\12\0\4\36\1\u0110\27\36"+
    "\17\0\3\36\12\0\4\36\1\u0111\27\36\17\0\3\36"+
    "\12\0\21\36\1\u0112\12\36\17\0\3\36\12\0\16\36"+
    "\1\u0113\15\36\17\0\3\36\12\0\4\36\1\332\11\36"+
    "\1\u0114\15\36\17\0\3\36\12\0\10\36\1\u0115\23\36"+
    "\17\0\3\36\12\0\5\36\1\u0116\5\36\1\u0117\20\36"+
    "\17\0\3\36\12\0\4\36\1\u0118\2\36\1\60\24\36"+
    "\17\0\3\36\12\0\14\36\1\u0119\17\36\17\0\3\36"+
    "\12\0\17\36\1\u0119\14\36\17\0\3\36\12\0\12\36"+
    "\1\u011a\4\36\1\u011b\14\36\17\0\3\36\12\0\3\36"+
    "\1\236\1\36\1\u011c\2\36\1\u011d\2\36\1\u011e\5\36"+
    "\1\u011f\1\u0120\11\36\17\0\3\36\12\0\15\36\1\u0121"+
    "\16\36\17\0\3\36\12\0\6\36\1\u0122\25\36\17\0"+
    "\3\36\12\0\10\36\1\u0123\23\36\17\0\3\36\12\0"+
    "\13\36\1\114\20\36\17\0\3\36\12\0\1\36\1\u0124"+
    "\2\36\1\u0125\3\36\1\u0126\5\36\1\u0127\15\36\17\0"+
    "\3\36\12\0\3\36\1\u0128\30\36\17\0\3\36\12\0"+
    "\4\36\1\u0129\16\36\1\60\10\36\17\0\3\36\12\0"+
    "\3\36\1\u012a\11\36\1\u012b\16\36\17\0\3\36\12\0"+
    "\6\36\1\377\25\36\17\0\3\36\30\0\1\u012c\1\0"+
    "\1\210\34\0\1\210\12\0\6\36\1\u012d\13\36\1\u012e"+
    "\11\36\17\0\3\36\12\0\22\36\1\202\11\36\17\0"+
    "\3\36\12\0\14\36\1\u012f\1\36\1\u0130\15\36\17\0"+
    "\3\36\12\0\3\36\1\u0131\16\36\1\u0132\11\36\17\0"+
    "\3\36\12\0\6\36\1\u0133\3\36\1\u0134\21\36\17\0"+
    "\3\36\12\0\4\36\1\u0129\27\36\17\0\3\36\12\0"+
    "\14\36\1\u0135\17\36\17\0\3\36\12\0\3\36\1\u0136"+
    "\25\36\1\114\2\36\17\0\3\36\12\0\3\36\1\u0137"+
    "\7\36\1\72\20\36\17\0\3\36\12\0\5\36\1\u0138"+
    "\2\36\1\u0139\14\36\1\267\6\36\17\0\3\36\12\0"+
    "\5\36\1\u013a\13\36\1\72\2\36\1\u013b\7\36\17\0"+
    "\3\36\12\0\22\36\1\u013c\11\36\17\0\3\36\12\0"+
    "\16\36\1\u013d\15\36\17\0\3\36\12\0\6\36\1\u013e"+
    "\13\36\1\u013f\11\36\17\0\3\36\12\0\4\36\1\u0140"+
    "\27\36\17\0\3\36\12\0\1\36\1\u0141\32\36\17\0"+
    "\3\36\12\0\1\36\1\u0142\32\36\17\0\3\36\12\0"+
    "\1\36\1\125\14\36\1\u0143\15\36\17\0\3\36\12\0"+
    "\6\36\1\263\25\36\17\0\3\36\12\0\3\36\1\114"+
    "\30\36\17\0\3\36\12\0\22\36\1\u0132\11\36\17\0"+
    "\3\36\12\0\7\36\1\60\24\36\17\0\3\36\12\0"+
    "\24\36\1\u0144\7\36\17\0\3\36\12\0\6\36\1\u0145"+
    "\4\36\1\u0146\1\36\1\60\16\36\17\0\3\36\12\0"+
    "\1\36\1\u0147\12\36\1\u0148\1\36\1\u0149\15\36\17\0"+
    "\3\36\12\0\1\u014a\33\36\17\0\3\36\12\0\13\36"+
    "\1\u014b\20\36\17\0\3\36\12\0\6\36\1\u014c\25\36"+
    "\17\0\3\36\12\0\5\36\1\325\26\36\17\0\3\36"+
    "\12\0\1\36\1\325\32\36\17\0\3\36\2\0\6\u014d"+
    "\1\u014e\61\u014d\4\53\1\251\1\u014f\1\252\61\53\2\0"+
    "\1\254\75\0\1\36\1\u0150\32\36\17\0\3\36\12\0"+
    "\5\36\1\u0151\26\36\17\0\3\36\12\0\27\36\1\u0152"+
    "\4\36\17\0\3\36\12\0\31\36\1\302\2\36\17\0"+
    "\3\36\12\0\25\36\1\202\6\36\17\0\3\36\12\0"+
    "\5\36\1\263\26\36\17\0\3\36\12\0\31\36\1\60"+
    "\2\36\17\0\3\36\12\0\11\36\1\60\22\36\17\0"+
    "\3\36\12\0\25\36\1\u0153\6\36\17\0\3\36\12\0"+
    "\4\36\1\u0154\27\36\17\0\3\36\12\0\16\36\1\352"+
    "\15\36\17\0\3\36\12\0\14\36\1\60\1\36\1\u0155"+
    "\15\36\17\0\3\36\12\0\22\36\1\u0156\11\36\17\0"+
    "\3\36\12\0\16\36\1\u0157\15\36\17\0\3\36\12\0"+
    "\1\36\1\u0158\14\36\1\u0159\15\36\17\0\3\36\12\0"+
    "\12\36\1\72\21\36\17\0\3\36\12\0\22\36\1\u015a"+
    "\11\36\17\0\3\36\12\0\3\36\1\u015b\30\36\17\0"+
    "\3\36\12\0\2\36\1\u015c\31\36\17\0\3\36\12\0"+
    "\16\36\1\u015d\15\36\17\0\3\36\12\0\3\36\1\72"+
    "\30\36\17\0\3\36\12\0\12\36\1\u0119\21\36\17\0"+
    "\3\36\12\0\14\36\1\60\17\36\17\0\3\36\12\0"+
    "\1\u0139\33\36\17\0\3\36\12\0\23\36\1\u015e\10\36"+
    "\17\0\3\36\12\0\1\36\1\u015f\10\36\1\u0160\21\36"+
    "\17\0\3\36\12\0\16\36\1\u0161\15\36\17\0\3\36"+
    "\12\0\5\36\1\u0162\26\36\17\0\3\36\12\0\16\36"+
    "\1\u0163\15\36\17\0\3\36\12\0\22\36\1\u0164\11\36"+
    "\17\0\3\36\12\0\10\36\1\u0165\5\36\1\60\15\36"+
    "\17\0\3\36\12\0\11\36\1\u0166\22\36\17\0\3\36"+
    "\12\0\6\36\1\u0167\25\36\17\0\3\36\12\0\7\36"+
    "\1\255\24\36\17\0\3\36\12\0\16\36\1\u0168\15\36"+
    "\17\0\3\36\12\0\22\36\1\u0169\11\36\17\0\3\36"+
    "\12\0\2\36\1\u016a\14\36\1\60\14\36\17\0\3\36"+
    "\12\0\1\36\1\u016b\1\36\1\u016c\30\36\17\0\3\36"+
    "\12\0\27\36\1\u016d\4\36\17\0\3\36\12\0\3\36"+
    "\1\u016e\12\36\1\60\15\36\17\0\3\36\12\0\3\36"+
    "\1\60\30\36\17\0\3\36\12\0\26\36\1\u016f\5\36"+
    "\17\0\3\36\12\0\32\36\1\u0170\1\36\17\0\3\36"+
    "\12\0\4\36\1\u0171\27\36\17\0\3\36\12\0\14\36"+
    "\1\u0172\17\36\17\0\3\36\12\0\1\36\1\u0173\32\36"+
    "\17\0\3\36\12\0\11\36\1\u0174\22\36\17\0\3\36"+
    "\12\0\16\36\1\u0175\15\36\17\0\3\36\12\0\14\36"+
    "\1\u016e\17\36\17\0\3\36\12\0\11\36\1\72\22\36"+
    "\17\0\3\36\12\0\13\36\1\u0176\20\36\17\0\3\36"+
    "\12\0\22\36\1\u0177\11\36\17\0\3\36\12\0\2\36"+
    "\1\u0178\5\36\1\u0179\2\36\1\60\10\36\1\u017a\7\36"+
    "\17\0\3\36\12\0\12\36\1\u017b\21\36\17\0\3\36"+
    "\12\0\15\36\1\u017c\4\36\1\u013c\11\36\17\0\3\36"+
    "\12\0\14\36\1\u017d\17\36\17\0\3\36\12\0\4\36"+
    "\1\u017e\27\36\17\0\3\36\12\0\16\36\1\u017f\15\36"+
    "\17\0\3\36\12\0\5\36\1\u0180\26\36\17\0\3\36"+
    "\12\0\14\36\1\u0181\1\36\1\u0182\15\36\17\0\3\36"+
    "\12\0\22\36\1\u0183\11\36\17\0\3\36\12\0\6\36"+
    "\1\60\25\36\17\0\3\36\12\0\5\36\1\u0184\26\36"+
    "\17\0\3\36\12\0\4\36\1\60\3\36\1\u0185\5\36"+
    "\1\60\15\36\17\0\3\36\12\0\13\36\1\u0161\20\36"+
    "\17\0\3\36\12\0\5\36\1\u0186\26\36\17\0\3\36"+
    "\12\0\6\36\1\u0187\25\36\17\0\3\36\12\0\10\36"+
    "\1\u0188\23\36\17\0\3\36\12\0\6\36\1\u0189\4\36"+
    "\1\u018a\20\36\17\0\3\36\12\0\3\36\1\u018b\1\u018c"+
    "\6\36\1\u018d\10\36\1\u018e\7\36\17\0\3\36\12\0"+
    "\22\36\1\u018f\11\36\17\0\3\36\12\0\6\36\1\u0190"+
    "\25\36\17\0\3\36\12\0\17\36\1\u0191\12\36\1\u0192"+
    "\1\36\17\0\3\36\12\0\12\36\1\u0193\7\36\1\u0194"+
    "\11\36\17\0\3\36\12\0\13\36\1\u0195\20\36\17\0"+
    "\3\36\12\0\6\36\1\u0196\25\36\17\0\3\36\12\0"+
    "\1\36\1\376\32\36\17\0\3\36\12\0\15\36\1\u0197"+
    "\16\36\17\0\3\36\12\0\14\36\1\325\11\36\1\u0198"+
    "\5\36\17\0\3\36\12\0\3\36\1\u0199\30\36\17\0"+
    "\3\36\12\0\1\36\1\237\32\36\17\0\3\36\12\0"+
    "\3\36\1\122\30\36\17\0\3\36\12\0\2\36\1\114"+
    "\31\36\17\0\3\36\12\0\5\36\1\u0142\26\36\17\0"+
    "\3\36\12\0\4\36\1\u019a\27\36\17\0\3\36\12\0"+
    "\4\36\1\u019b\27\36\17\0\3\36\12\0\14\36\1\235"+
    "\17\36\17\0\3\36\12\0\16\36\1\u019c\15\36\17\0"+
    "\3\36\12\0\4\36\1\u019d\27\36\17\0\3\36\12\0"+
    "\13\36\1\u019e\20\36\17\0\3\36\12\0\12\36\1\u019f"+
    "\21\36\17\0\3\36\12\0\4\36\1\332\5\36\1\u01a0"+
    "\1\36\1\u0134\17\36\17\0\3\36\12\0\13\36\1\u01a1"+
    "\20\36\17\0\3\36\12\0\5\36\1\u01a2\26\36\17\0"+
    "\3\36\12\0\16\36\1\u01a3\15\36\17\0\3\36\12\0"+
    "\22\36\1\u01a4\11\36\17\0\3\36\12\0\10\36\1\u01a5"+
    "\2\36\1\u01a6\2\36\1\u01a7\6\36\1\u01a8\1\36\1\u01a9"+
    "\4\36\17\0\3\36\12\0\10\36\1\114\23\36\17\0"+
    "\3\36\12\0\16\36\1\u01aa\15\36\17\0\3\36\12\0"+
    "\16\36\1\352\13\36\1\274\1\36\17\0\3\36\12\0"+
    "\13\36\1\u01ab\20\36\17\0\3\36\12\0\6\36\1\u01ac"+
    "\25\36\17\0\3\36\12\0\3\36\1\u01ad\30\36\17\0"+
    "\3\36\12\0\10\36\1\60\23\36\17\0\3\36\12\0"+
    "\2\36\1\u01ae\31\36\17\0\3\36\12\0\4\36\1\u01af"+
    "\3\36\1\u01b0\20\36\1\60\2\36\17\0\3\36\12\0"+
    "\5\36\1\u01b1\10\36\1\u01b2\15\36\17\0\3\36\12\0"+
    "\1\125\33\36\17\0\3\36\12\0\5\36\1\246\26\36"+
    "\17\0\3\36\12\0\22\36\1\u01b3\11\36\17\0\3\36"+
    "\12\0\1\36\1\u01b4\20\36\1\u01b5\11\36\17\0\3\36"+
    "\12\0\10\36\1\u01b6\23\36\17\0\3\36\12\0\5\36"+
    "\1\u01b7\10\36\1\u01b8\15\36\17\0\3\36\12\0\16\36"+
    "\1\u0186\15\36\17\0\3\36\11\0\1\u01b9\34\36\17\0"+
    "\3\36\12\0\22\36\1\u01ba\11\36\17\0\3\36\12\0"+
    "\5\36\1\u01bb\26\36\17\0\3\36\12\0\4\36\1\60"+
    "\6\36\1\u01bc\20\36\17\0\3\36\12\0\6\36\1\u01bd"+
    "\7\36\1\u01be\15\36\17\0\3\36\12\0\16\36\1\u01bf"+
    "\15\36\17\0\3\36\12\0\10\36\1\u0128\23\36\17\0"+
    "\3\36\12\0\12\36\1\u0186\21\36\17\0\3\36\12\0"+
    "\10\36\1\264\23\36\17\0\3\36\12\0\4\36\1\264"+
    "\11\36\1\u01c0\15\36\17\0\3\36\12\0\12\36\1\125"+
    "\21\36\17\0\3\36\11\0\1\u01c1\35\0\1\u01c1\32\0"+
    "\13\36\1\72\20\36\17\0\3\36\12\0\16\36\1\60"+
    "\3\36\1\u01c2\11\36\17\0\3\36\12\0\17\36\1\60"+
    "\14\36\17\0\3\36\12\0\16\36\1\u01c3\15\36\17\0"+
    "\3\36\12\0\10\36\1\115\23\36\17\0\3\36\12\0"+
    "\22\36\1\60\11\36\17\0\3\36\12\0\4\36\1\u01c4"+
    "\11\36\1\u01c5\15\36\17\0\3\36\12\0\3\36\1\u0138"+
    "\30\36\17\0\3\36\12\0\5\36\1\u015e\26\36\17\0"+
    "\3\36\12\0\16\36\1\u01c6\15\36\17\0\3\36\12\0"+
    "\2\36\1\u01c7\31\36\17\0\3\36\12\0\15\36\1\60"+
    "\16\36\17\0\3\36\12\0\5\36\1\u0132\26\36\17\0"+
    "\3\36\12\0\15\36\1\371\16\36\17\0\3\36\12\0"+
    "\16\36\1\u0132\15\36\17\0\3\36\12\0\25\36\1\60"+
    "\6\36\17\0\3\36\12\0\1\u01c8\6\36\1\371\1\76"+
    "\23\36\17\0\3\36\12\0\12\36\1\u01c9\21\36\17\0"+
    "\3\36\12\0\11\36\1\u01ca\22\36\17\0\3\36\12\0"+
    "\4\36\1\u01cb\27\36\17\0\3\36\12\0\4\36\1\u01cc"+
    "\27\36\17\0\3\36\12\0\3\36\1\u01cd\2\36\1\114"+
    "\25\36\17\0\3\36\12\0\14\36\1\72\17\36\17\0"+
    "\3\36\12\0\4\36\1\u01ce\27\36\17\0\3\36\12\0"+
    "\10\36\1\u0139\23\36\17\0\3\36\12\0\3\36\1\72"+
    "\10\36\1\352\2\36\1\u01cf\4\36\1\u01d0\7\36\17\0"+
    "\3\36\12\0\10\36\1\u01d1\23\36\17\0\3\36\12\0"+
    "\10\36\1\u01d2\2\36\1\u01d3\16\36\1\u01b5\1\36\17\0"+
    "\3\36\12\0\22\36\1\u01d4\11\36\17\0\3\36\12\0"+
    "\1\36\1\115\32\36\17\0\3\36\12\0\10\36\1\u01d5"+
    "\23\36\17\0\3\36\2\0\5\u014d\1\254\1\u014e\61\u014d"+
    "\4\u01d6\1\u01d7\63\u01d6\10\0\3\36\1\u015e\30\36\17\0"+
    "\3\36\12\0\6\36\1\u01c0\25\36\17\0\3\36\12\0"+
    "\22\36\1\u01d8\11\36\17\0\3\36\12\0\16\36\1\106"+
    "\15\36\17\0\3\36\12\0\1\36\1\u01d9\32\36\17\0"+
    "\3\36\12\0\2\36\1\267\3\36\1\u01da\25\36\17\0"+
    "\3\36\12\0\12\36\1\u01db\21\36\17\0\3\36\12\0"+
    "\3\36\1\u01dc\2\36\1\72\25\36\17\0\3\36\12\0"+
    "\10\36\1\u01dd\23\36\17\0\3\36\12\0\23\36\1\60"+
    "\10\36\17\0\3\36\12\0\5\36\1\115\26\36\17\0"+
    "\3\36\12\0\4\36\1\u01de\27\36\17\0\3\36\12\0"+
    "\16\36\1\u013c\15\36\17\0\3\36\12\0\15\36\1\u01df"+
    "\16\36\17\0\3\36\12\0\4\36\1\u013c\27\36\17\0"+
    "\3\36\12\0\14\36\1\u01e0\17\36\17\0\3\36\12\0"+
    "\6\36\1\u0139\25\36\17\0\3\36\12\0\13\36\1\60"+
    "\20\36\17\0\3\36\12\0\6\36\1\u013c\25\36\17\0"+
    "\3\36\12\0\6\36\1\u01e1\25\36\17\0\3\36\12\0"+
    "\1\36\1\u01e2\32\36\17\0\3\36\12\0\22\36\1\u01e3"+
    "\11\36\17\0\3\36\12\0\16\36\1\u01e4\15\36\17\0"+
    "\3\36\12\0\10\36\1\76\23\36\17\0\3\36\12\0"+
    "\13\36\1\u01e5\14\36\1\u01e6\3\36\17\0\3\36\12\0"+
    "\16\36\1\u01e7\15\36\17\0\3\36\12\0\2\36\1\267"+
    "\31\36\17\0\3\36\12\0\22\36\1\371\11\36\17\0"+
    "\3\36\12\0\13\36\1\u01e8\20\36\17\0\3\36\12\0"+
    "\10\36\1\u01e9\23\36\17\0\3\36\12\0\10\36\1\356"+
    "\23\36\17\0\3\36\12\0\12\36\1\u0139\21\36\17\0"+
    "\3\36\12\0\14\36\1\u01ea\17\36\17\0\3\36\12\0"+
    "\13\36\1\u01eb\20\36\17\0\3\36\12\0\22\36\1\u0192"+
    "\11\36\17\0\3\36\12\0\14\36\1\325\17\36\17\0"+
    "\3\36\12\0\14\36\1\u01ec\17\36\17\0\3\36\12\0"+
    "\6\36\1\115\25\36\17\0\3\36\12\0\16\36\1\u01a7"+
    "\15\36\17\0\3\36\12\0\1\u01ed\33\36\17\0\3\36"+
    "\12\0\12\36\1\u01ee\21\36\17\0\3\36\12\0\14\36"+
    "\1\u01ef\17\36\17\0\3\36\12\0\16\36\1\u01f0\15\36"+
    "\17\0\3\36\12\0\6\36\1\325\25\36\17\0\3\36"+
    "\12\0\4\36\1\u01f1\27\36\17\0\3\36\12\0\3\36"+
    "\1\u01f2\30\36\17\0\3\36\12\0\6\36\1\u01f3\5\36"+
    "\1\u01f4\17\36\17\0\3\36\12\0\6\36\1\u01f5\25\36"+
    "\17\0\3\36\12\0\4\36\1\u01f6\27\36\17\0\3\36"+
    "\12\0\31\36\1\114\2\36\17\0\3\36\12\0\6\36"+
    "\1\72\25\36\17\0\3\36\12\0\1\36\1\u01f7\32\36"+
    "\17\0\3\36\12\0\22\36\1\u01f8\11\36\17\0\3\36"+
    "\12\0\5\36\1\u01f9\26\36\17\0\3\36\12\0\4\36"+
    "\1\114\27\36\17\0\3\36\12\0\5\36\1\u01fa\21\36"+
    "\1\u0152\4\36\17\0\3\36\12\0\31\36\1\u01fb\2\36"+
    "\17\0\3\36\12\0\16\36\1\u01fc\15\36\17\0\3\36"+
    "\12\0\14\36\1\u0162\17\36\17\0\3\36\12\0\16\36"+
    "\1\u01fd\15\36\17\0\3\36\12\0\1\36\1\u01fe\3\36"+
    "\1\u01ff\26\36\17\0\3\36\12\0\4\36\1\u0200\27\36"+
    "\17\0\3\36\12\0\16\36\1\u0182\15\36\17\0\3\36"+
    "\12\0\16\36\1\u0201\15\36\17\0\3\36\12\0\16\36"+
    "\1\u0202\15\36\17\0\3\36\12\0\1\36\1\72\32\36"+
    "\17\0\3\36\12\0\17\36\1\325\14\36\17\0\3\36"+
    "\12\0\5\36\1\u0203\26\36\17\0\3\36\12\0\4\36"+
    "\1\u0204\27\36\17\0\3\36\12\0\5\36\1\u0205\26\36"+
    "\17\0\3\36\12\0\22\36\1\u0206\11\36\17\0\3\36"+
    "\12\0\12\36\1\u0207\21\36\17\0\3\36\12\0\14\36"+
    "\1\u0208\17\36\17\0\3\36\12\0\1\36\1\u0209\32\36"+
    "\17\0\3\36\12\0\16\36\1\u020a\15\36\17\0\3\36"+
    "\12\0\17\36\1\u020b\14\36\17\0\3\36\12\0\15\36"+
    "\1\u0199\16\36\17\0\3\36\12\0\4\36\1\u020c\27\36"+
    "\17\0\3\36\12\0\13\36\1\267\20\36\17\0\3\36"+
    "\12\0\6\36\1\u020d\25\36\17\0\3\36\12\0\1\36"+
    "\1\u020e\32\36\17\0\3\36\12\0\3\36\1\u020f\30\36"+
    "\17\0\3\36\12\0\10\36\1\72\23\36\17\0\3\36"+
    "\12\0\22\36\1\u0210\11\36\17\0\3\36\12\0\5\36"+
    "\1\60\6\36\1\u01db\17\36\17\0\3\36\12\0\4\36"+
    "\1\356\27\36\17\0\3\36\12\0\6\36\1\u0211\25\36"+
    "\17\0\3\36\12\0\5\36\1\u0212\26\36\17\0\3\36"+
    "\12\0\24\36\1\u0213\7\36\17\0\3\36\12\0\4\36"+
    "\1\u0214\27\36\17\0\3\36\12\0\16\36\1\u01bc\15\36"+
    "\17\0\3\36\12\0\22\36\1\u0215\11\36\17\0\3\36"+
    "\12\0\6\36\1\u0216\6\36\1\u0217\5\36\1\u0218\2\36"+
    "\1\u0219\5\36\17\0\3\36\12\0\3\36\1\u021a\30\36"+
    "\17\0\3\36\12\0\1\36\1\u021b\4\36\1\u021c\25\36"+
    "\17\0\3\36\12\0\14\36\1\u021d\17\36\17\0\3\36"+
    "\12\0\1\u021e\33\36\17\0\3\36\12\0\4\36\1\u021f"+
    "\27\36\17\0\3\36\12\0\22\36\1\u0220\11\36\17\0"+
    "\3\36\12\0\17\36\1\u0221\14\36\17\0\3\36\12\0"+
    "\5\36\1\u01f4\26\36\17\0\3\36\12\0\6\36\1\u0222"+
    "\25\36\17\0\3\36\12\0\12\36\1\u0223\21\36\17\0"+
    "\3\36\12\0\6\36\1\u0224\25\36\17\0\3\36\30\0"+
    "\1\u0225\51\0\24\36\1\u0132\7\36\17\0\3\36\12\0"+
    "\32\36\1\114\1\36\17\0\3\36\12\0\4\36\1\u0161"+
    "\27\36\17\0\3\36\12\0\5\36\1\u01a3\26\36\17\0"+
    "\3\36\12\0\6\36\1\u01e0\25\36\17\0\3\36\12\0"+
    "\32\36\1\72\1\36\17\0\3\36\12\0\7\36\1\u013c"+
    "\24\36\17\0\3\36\32\0\1\u0226\34\0\1\u0226\12\0"+
    "\21\36\1\u0227\12\36\17\0\3\36\12\0\4\36\1\u0228"+
    "\27\36\17\0\3\36\12\0\6\36\1\245\25\36\17\0"+
    "\3\36\12\0\1\36\1\u0229\32\36\17\0\3\36\12\0"+
    "\3\36\1\303\30\36\17\0\3\36\12\0\12\36\1\u022a"+
    "\21\36\17\0\3\36\12\0\1\36\1\u022b\32\36\17\0"+
    "\3\36\12\0\16\36\1\u022c\15\36\17\0\3\36\12\0"+
    "\1\36\1\u022d\32\36\17\0\3\36\12\0\21\36\1\u022e"+
    "\12\36\17\0\3\36\12\0\16\36\1\u017c\15\36\17\0"+
    "\3\36\12\0\16\36\1\u022f\15\36\17\0\3\36\12\0"+
    "\1\36\1\u0139\32\36\17\0\3\36\12\0\5\36\1\u0230"+
    "\26\36\17\0\3\36\12\0\1\36\1\u0231\32\36\17\0"+
    "\3\36\12\0\16\36\1\u0232\15\36\17\0\3\36\12\0"+
    "\1\36\1\u0233\32\36\17\0\3\36\12\0\16\36\1\u0234"+
    "\15\36\17\0\3\36\12\0\1\36\1\u0115\32\36\17\0"+
    "\3\36\12\0\16\36\1\301\15\36\17\0\3\36\12\0"+
    "\16\36\1\u0235\15\36\17\0\3\36\12\0\5\36\1\u0236"+
    "\26\36\17\0\3\36\12\0\13\36\1\u010c\10\36\1\u0139"+
    "\7\36\17\0\3\36\12\0\15\36\1\114\16\36\17\0"+
    "\3\36\12\0\13\36\1\u0237\20\36\17\0\3\36\12\0"+
    "\5\36\1\u0238\26\36\17\0\3\36\12\0\1\36\1\u0239"+
    "\32\36\17\0\3\36\12\0\1\36\1\356\32\36\17\0"+
    "\3\36\12\0\3\36\1\u0139\30\36\17\0\3\36\12\0"+
    "\1\36\1\u023a\32\36\17\0\3\36\12\0\21\36\1\60"+
    "\12\36\17\0\3\36\12\0\12\36\1\367\21\36\17\0"+
    "\3\36\12\0\10\36\1\263\23\36\17\0\3\36\12\0"+
    "\4\36\1\u023b\27\36\17\0\3\36\12\0\14\36\1\u023c"+
    "\17\36\17\0\3\36\12\0\13\36\1\u023d\20\36\17\0"+
    "\3\36\12\0\5\36\1\u0131\14\36\1\u0194\11\36\17\0"+
    "\3\36\12\0\14\36\1\u023e\17\36\17\0\3\36\12\0"+
    "\6\36\1\u01cf\25\36\17\0\3\36\12\0\1\36\1\145"+
    "\32\36\17\0\3\36\12\0\6\36\1\u023f\25\36\17\0"+
    "\3\36\12\0\5\36\1\u01e4\26\36\17\0\3\36\12\0"+
    "\1\36\1\u0240\32\36\17\0\3\36\12\0\12\36\1\301"+
    "\21\36\17\0\3\36\12\0\6\36\1\u0241\25\36\17\0"+
    "\3\36\12\0\16\36\1\101\15\36\17\0\3\36\12\0"+
    "\21\36\1\u0242\12\36\17\0\3\36\12\0\1\36\1\u01a3"+
    "\32\36\17\0\3\36\12\0\6\36\1\114\25\36\17\0"+
    "\3\36\12\0\16\36\1\u0243\15\36\17\0\3\36\12\0"+
    "\1\36\1\147\32\36\17\0\3\36\12\0\10\36\1\u015a"+
    "\23\36\17\0\3\36\12\0\14\36\1\122\17\36\17\0"+
    "\3\36\12\0\15\36\1\u0244\16\36\17\0\3\36\12\0"+
    "\10\36\1\u0245\23\36\17\0\3\36\12\0\32\36\1\u0246"+
    "\1\36\17\0\3\36\12\0\3\36\1\u0247\30\36\17\0"+
    "\3\36\12\0\10\36\1\u0248\23\36\17\0\3\36\12\0"+
    "\3\36\1\u0249\30\36\17\0\3\36\12\0\1\36\1\u024a"+
    "\32\36\17\0\3\36\12\0\6\36\1\u024b\25\36\17\0"+
    "\3\36\12\0\13\36\1\u010f\20\36\17\0\3\36\12\0"+
    "\13\36\1\u024c\20\36\17\0\3\36\12\0\4\36\1\u024d"+
    "\27\36\17\0\3\36\12\0\16\36\1\u024e\15\36\17\0"+
    "\3\36\12\0\6\36\1\u024f\25\36\17\0\3\36\12\0"+
    "\14\36\1\u01e4\17\36\17\0\3\36\12\0\16\36\1\u0250"+
    "\15\36\17\0\3\36\12\0\25\36\1\325\6\36\17\0"+
    "\3\36\12\0\13\36\1\u0251\20\36\17\0\3\36\12\0"+
    "\17\36\1\u0252\14\36\17\0\3\36\12\0\5\36\1\60"+
    "\26\36\17\0\3\36\12\0\6\36\1\371\25\36\17\0"+
    "\3\36\12\0\1\36\1\u0253\32\36\17\0\3\36\12\0"+
    "\14\36\1\u0254\17\36\17\0\3\36\12\0\4\36\1\u0255"+
    "\27\36\17\0\3\36\12\0\1\36\1\u0150\13\36\1\u0256"+
    "\1\36\1\u0257\14\36\17\0\3\36\12\0\6\36\1\u022e"+
    "\25\36\17\0\3\36\12\0\6\36\1\u0258\25\36\17\0"+
    "\3\36\12\0\5\36\1\u0259\26\36\17\0\3\36\12\0"+
    "\5\36\1\u025a\26\36\17\0\3\36\12\0\14\36\1\u025b"+
    "\17\36\17\0\3\36\12\0\5\36\1\u025c\26\36\17\0"+
    "\3\36\12\0\17\36\1\u0132\14\36\17\0\3\36\12\0"+
    "\12\36\1\u025d\21\36\17\0\3\36\12\0\14\36\1\u0209"+
    "\17\36\17\0\3\36\12\0\3\36\1\u01a3\30\36\17\0"+
    "\3\36\12\0\1\36\1\u025e\32\36\17\0\3\36\12\0"+
    "\3\36\1\u025f\30\36\17\0\3\36\12\0\5\36\1\202"+
    "\26\36\17\0\3\36\12\0\1\36\1\u0260\32\36\17\0"+
    "\3\36\12\0\5\36\1\224\26\36\17\0\3\36\12\0"+
    "\1\36\1\u0261\32\36\17\0\3\36\12\0\22\36\1\72"+
    "\11\36\17\0\3\36\12\0\6\36\1\u0262\25\36\17\0"+
    "\3\36\35\0\1\u0263\44\0\5\36\1\u0264\26\36\17\0"+
    "\3\36\12\0\16\36\1\u0265\15\36\17\0\3\36\12\0"+
    "\2\36\1\325\31\36\17\0\3\36\12\0\5\36\1\377"+
    "\26\36\17\0\3\36\12\0\3\36\1\256\30\36\17\0"+
    "\3\36\12\0\3\36\1\u0266\30\36\17\0\3\36\12\0"+
    "\14\36\1\352\17\36\17\0\3\36\12\0\24\36\1\267"+
    "\7\36\17\0\3\36\12\0\6\36\1\236\25\36\17\0"+
    "\3\36\12\0\22\36\1\u0267\11\36\17\0\3\36\12\0"+
    "\15\36\1\u0268\16\36\17\0\3\36\12\0\13\36\1\332"+
    "\20\36\17\0\3\36\12\0\6\36\1\147\25\36\17\0"+
    "\3\36\12\0\3\36\1\u0269\30\36\17\0\3\36\12\0"+
    "\22\36\1\u026a\11\36\17\0\3\36\12\0\1\36\1\u0180"+
    "\32\36\17\0\3\36\12\0\4\36\1\u022e\27\36\17\0"+
    "\3\36\12\0\4\36\1\u026b\27\36\17\0\3\36\12\0"+
    "\10\36\1\u013c\23\36\17\0\3\36\12\0\5\36\1\174"+
    "\26\36\17\0\3\36\12\0\3\36\1\u026c\30\36\17\0"+
    "\3\36\12\0\5\36\1\u026d\26\36\17\0\3\36\12\0"+
    "\3\36\1\u026e\30\36\17\0\3\36\12\0\1\36\1\u026f"+
    "\32\36\17\0\3\36\12\0\15\36\1\u0270\16\36\17\0"+
    "\3\36\12\0\13\36\1\u0271\20\36\17\0\3\36\12\0"+
    "\1\36\1\u0272\32\36\17\0\3\36\12\0\3\36\1\u0273"+
    "\30\36\17\0\3\36\12\0\16\36\1\u0274\15\36\17\0"+
    "\3\36\12\0\4\36\1\u0275\27\36\17\0\3\36\12\0"+
    "\14\36\1\u0276\17\36\17\0\3\36\12\0\4\36\1\u0277"+
    "\27\36\17\0\3\36\12\0\4\36\1\u0278\27\36\17\0"+
    "\3\36\12\0\12\36\1\114\21\36\17\0\3\36\12\0"+
    "\3\36\1\u0279\30\36\17\0\3\36\12\0\5\36\1\u027a"+
    "\26\36\17\0\3\36\12\0\32\36\1\u027b\1\36\17\0"+
    "\3\36\12\0\1\36\1\u0173\14\36\1\60\15\36\17\0"+
    "\3\36\12\0\6\36\1\u027c\25\36\17\0\3\36\12\0"+
    "\10\36\1\u027d\23\36\17\0\3\36\12\0\1\36\1\u027e"+
    "\32\36\17\0\3\36\12\0\4\36\1\u027f\27\36\17\0"+
    "\3\36\12\0\27\36\1\u0280\4\36\17\0\3\36\12\0"+
    "\4\36\1\u0281\27\36\17\0\3\36\12\0\3\36\1\u0282"+
    "\30\36\17\0\3\36\12\0\1\36\1\u0283\32\36\17\0"+
    "\3\36\12\0\5\36\1\u0284\26\36\17\0\3\36\12\0"+
    "\14\36\1\u0285\17\36\17\0\3\36\12\0\3\36\1\371"+
    "\30\36\17\0\3\36\12\0\6\36\1\u0286\25\36\17\0"+
    "\3\36\12\0\32\36\1\u0161\1\36\17\0\3\36\12\0"+
    "\25\36\1\u0287\6\36\17\0\3\36\12\0\4\36\1\u0288"+
    "\27\36\17\0\3\36\12\0\16\36\1\u0230\15\36\17\0"+
    "\3\36\12\0\1\u0289\33\36\17\0\3\36\12\0\3\36"+
    "\1\u010c\30\36\17\0\3\36\12\0\17\36\1\u028a\14\36"+
    "\17\0\3\36\12\0\1\114\31\36\1\u0238\1\36\17\0"+
    "\3\36\12\0\5\36\1\u011a\10\36\1\u0138\15\36\17\0"+
    "\3\36\30\0\1\u028b\51\0\10\36\1\u0238\23\36\17\0"+
    "\3\36\12\0\23\36\1\u028c\10\36\17\0\3\36\12\0"+
    "\34\36\1\u028d\16\0\3\36\12\0\16\36\1\u028e\15\36"+
    "\17\0\3\36\12\0\12\36\1\u01f4\21\36\17\0\3\36"+
    "\12\0\2\36\1\62\31\36\17\0\3\36\12\0\7\36"+
    "\1\u028f\24\36\17\0\3\36\12\0\16\36\1\u0290\15\36"+
    "\17\0\3\36\12\0\17\36\1\u0291\14\36\17\0\3\36"+
    "\12\0\24\36\1\u018e\7\36\17\0\3\36\12\0\30\36"+
    "\1\u015a\3\36\17\0\3\36\12\0\10\36\1\u0292\23\36"+
    "\17\0\3\36\12\0\1\36\1\u0293\32\36\17\0\3\36"+
    "\12\0\2\36\1\u0268\31\36\17\0\3\36\12\0\10\36"+
    "\1\307\23\36\17\0\3\36\12\0\16\36\1\u0294\15\36"+
    "\17\0\3\36\12\0\1\36\1\301\32\36\17\0\3\36"+
    "\12\0\27\36\1\u0295\4\36\17\0\3\36\12\0\13\36"+
    "\1\u0296\20\36\17\0\3\36\12\0\1\36\1\u0297\32\36"+
    "\17\0\3\36\12\0\14\36\1\u0298\17\36\17\0\3\36"+
    "\12\0\16\36\1\u0138\15\36\17\0\3\36\12\0\11\36"+
    "\1\u0299\22\36\17\0\3\36\12\0\15\36\1\u029a\16\36"+
    "\17\0\3\36\12\0\1\36\1\u029b\32\36\17\0\3\36"+
    "\12\0\7\36\1\u029c\24\36\17\0\3\36\12\0\10\36"+
    "\1\u029d\23\36\17\0\3\36\12\0\4\36\1\u029e\27\36"+
    "\17\0\3\36\12\0\3\36\1\u029f\30\36\17\0\3\36"+
    "\12\0\1\36\1\u02a0\32\36\17\0\3\36\12\0\13\36"+
    "\1\u02a1\20\36\17\0\3\36\12\0\5\36\1\u02a2\26\36"+
    "\17\0\3\36\12\0\12\36\1\u02a3\21\36\17\0\3\36"+
    "\12\0\16\36\1\u02a4\15\36\17\0\3\36\22\0\1\u02a5"+
    "\57\0\4\36\1\u0296\27\36\17\0\3\36\14\0\1\u02a6"+
    "\65\0\2\36\1\307\31\36\17\0\3\36\12\0\10\36"+
    "\1\u0292\16\36\1\u02a7\4\36\17\0\3\36\12\0\27\36"+
    "\1\u02a8\4\36\17\0\3\36\12\0\32\36\1\125\1\36"+
    "\17\0\3\36\12\0\14\36\1\u0132\17\36\17\0\3\36"+
    "\12\0\14\36\1\u02a9\17\36\17\0\3\36\12\0\6\36"+
    "\1\u02aa\25\36\17\0\3\36\12\0\4\36\1\u02ab\5\36"+
    "\1\u019f\2\36\1\356\16\36\17\0\3\36\12\0\4\36"+
    "\1\u02ac\27\36\17\0\3\36\12\0\3\36\1\u02ad\30\36"+
    "\17\0\3\36\12\0\3\36\1\u013a\30\36\17\0\3\36"+
    "\12\0\7\36\1\u02ae\24\36\17\0\3\36\12\0\16\36"+
    "\1\u02af\15\36\17\0\3\36\12\0\10\36\1\u0161\23\36"+
    "\17\0\3\36\12\0\5\36\1\u02b0\26\36\17\0\3\36"+
    "\12\0\13\36\1\u02b1\15\36\1\u02b2\2\36\17\0\3\36"+
    "\12\0\16\36\1\u02b3\15\36\17\0\3\36\12\0\16\36"+
    "\1\u01c0\15\36\17\0\3\36\12\0\5\36\1\u0150\26\36"+
    "\17\0\3\36\12\0\16\36\1\72\15\36\17\0\3\36"+
    "\12\0\13\36\1\u02b4\20\36\17\0\3\36\12\0\4\36"+
    "\1\u027c\27\36\17\0\3\36\12\0\14\36\1\u02b5\3\36"+
    "\1\u013c\13\36\17\0\3\36\20\0\1\u02b6\61\0\1\36"+
    "\1\u02b7\32\36\17\0\3\36\12\0\11\36\1\u02b8\5\36"+
    "\1\u02b9\14\36\17\0\3\36\12\0\3\36\1\u013c\30\36"+
    "\17\0\3\36\12\0\1\36\1\u02ba\32\36\17\0\3\36"+
    "\12\0\5\36\1\u011a\26\36\17\0\3\36\12\0\4\36"+
    "\1\u022c\27\36\17\0\3\36\12\0\1\36\1\u02bb\32\36"+
    "\17\0\3\36\12\0\3\36\1\u02bc\30\36\17\0\3\36"+
    "\12\0\12\36\1\u02bd\21\36\17\0\3\36\12\0\1\36"+
    "\1\u02be\32\36\17\0\3\36\12\0\16\36\1\u02bf\15\36"+
    "\17\0\3\36\12\0\4\36\1\u02c0\27\36\17\0\3\36"+
    "\12\0\14\36\1\u02c1\17\36\17\0\3\36\12\0\21\36"+
    "\1\u02c2\12\36\17\0\3\36\26\0\1\u02c3\53\0\3\36"+
    "\1\u02c4\30\36\17\0\3\36\12\0\14\36\1\u02c5\17\36"+
    "\17\0\3\36\12\0\1\36\1\u02c6\32\36\17\0\3\36"+
    "\12\0\17\36\1\u02c7\14\36\17\0\3\36\12\0\15\36"+
    "\1\u013c\16\36\17\0\3\36\12\0\4\36\1\u02c8\27\36"+
    "\17\0\3\36\12\0\15\36\1\u0191\16\36\17\0\3\36"+
    "\12\0\17\36\1\u02c9\14\36\17\0\3\36\12\0\7\36"+
    "\1\u02ca\24\36\17\0\3\36\12\0\1\36\1\u02cb\32\36"+
    "\17\0\3\36\12\0\12\36\1\u02cc\21\36\17\0\3\36"+
    "\12\0\21\36\1\u02cd\12\36\17\0\3\36\24\0\1\u02ce"+
    "\55\0\13\36\1\u018e\20\36\17\0\3\36\12\0\12\36"+
    "\1\352\21\36\17\0\3\36\12\0\3\36\1\u0192\30\36"+
    "\17\0\3\36\12\0\16\36\1\u02cf\15\36\17\0\3\36"+
    "\12\0\1\36\1\u02d0\32\36\17\0\3\36\12\0\1\36"+
    "\1\u02d1\32\36\17\0\3\36\12\0\32\36\1\u02d2\1\36"+
    "\17\0\3\36\12\0\17\36\1\u015c\14\36\17\0\3\36"+
    "\12\0\6\36\1\u010f\25\36\17\0\3\36\12\0\13\36"+
    "\1\u02d3\20\36\17\0\3\36\44\0\1\u02a5\35\0\13\36"+
    "\1\u01e5\20\36\17\0\3\36\12\0\21\36\1\u02d4\12\36"+
    "\17\0\3\36\12\0\22\36\1\u02d5\11\36\17\0\3\36"+
    "\12\0\11\36\1\u02d6\22\36\17\0\3\36\12\0\16\36"+
    "\1\u015e\15\36\17\0\3\36\12\0\1\36\1\u02d7\32\36"+
    "\17\0\3\36\12\0\5\36\1\u02d8\26\36\17\0\3\36"+
    "\12\0\6\36\1\u02d9\25\36\17\0\3\36\12\0\16\36"+
    "\1\u0162\15\36\17\0\3\36\12\0\6\36\1\u02da\25\36"+
    "\17\0\3\36\12\0\5\36\1\u02db\26\36\17\0\3\36"+
    "\12\0\1\36\1\u02dc\32\36\17\0\3\36\12\0\13\36"+
    "\1\u02dd\20\36\17\0\3\36\12\0\4\36\1\u02de\27\36"+
    "\17\0\3\36\12\0\16\36\1\u02df\15\36\17\0\3\36"+
    "\12\0\7\36\1\u02e0\24\36\17\0\3\36\12\0\4\36"+
    "\1\u02ac\10\36\1\u02e1\16\36\17\0\3\36\12\0\16\36"+
    "\1\u02e2\15\36\17\0\3\36\12\0\4\36\1\u02e3\27\36"+
    "\17\0\3\36\12\0\5\36\1\u02e4\26\36\17\0\3\36"+
    "\12\0\1\36\1\u02e5\32\36\17\0\3\36\12\0\22\36"+
    "\1\u02e6\11\36\17\0\3\36\12\0\13\36\1\u02df\20\36"+
    "\17\0\3\36\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[40152];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\1\1\1\11\44\1\1\0"+
    "\173\1\1\0\1\11\1\1\1\0\1\1\1\11\177\1"+
    "\1\0\40\1\2\0\152\1\1\0\7\1\1\0\24\1"+
    "\1\0\1\11\115\1\1\0\75\1\1\0\47\1\1\0"+
    "\1\1\1\0\27\1\1\11\1\0\17\1\1\0\14\1"+
    "\1\0\12\1\1\0\30\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[742];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;
    public int lin;
    public int col;
    public int len;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2632) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 12: break;
          case 2: 
            { /*Ignore*/
            } 
            // fall through
          case 13: break;
          case 3: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Operador;
            } 
            // fall through
          case 14: break;
          case 4: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 15: break;
          case 5: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Entero;
            } 
            // fall through
          case 16: break;
          case 6: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Comentario;
            } 
            // fall through
          case 17: break;
          case 7: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Reservada;
            } 
            // fall through
          case 18: break;
          case 8: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Flotante;
            } 
            // fall through
          case 19: break;
          case 9: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Varchar;
            } 
            // fall through
          case 20: break;
          case 10: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return MalComentario;
            } 
            // fall through
          case 21: break;
          case 11: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDato;
            } 
            // fall through
          case 22: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
