/* The following code was generated by JFlex 1.7.0 */

package lexgen;
import static lexgen.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/jmoll/Documents/URL/201902/Compis/ProyectoCompiladores/LexGen/src/lexgen/lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\72\1\3\1\1\22\0\1\43\1\54\1\0"+
    "\1\53\1\0\1\61\1\56\1\71\1\46\1\47\1\5\1\60\1\63"+
    "\1\6\1\62\1\4\2\67\1\36\7\67\1\0\1\64\1\54\1\55"+
    "\1\54\1\0\1\52\1\17\1\34\1\7\1\21\1\16\1\31\1\35"+
    "\1\14\1\15\1\42\1\40\1\26\1\33\1\24\1\13\1\41\1\25"+
    "\1\11\1\12\1\30\1\10\1\23\1\22\1\32\1\20\1\37\1\44"+
    "\1\0\1\45\1\0\1\27\1\0\4\65\1\70\25\65\1\50\1\57"+
    "\1\51\7\0\1\72\44\0\1\65\12\0\1\65\4\0\1\65\5\0"+
    "\27\65\1\0\37\65\1\0\u01ca\65\4\0\14\65\16\0\5\65\7\0"+
    "\1\65\1\0\1\65\201\0\5\65\1\0\2\65\2\0\4\65\1\0"+
    "\1\65\6\0\1\65\1\0\3\65\1\0\1\65\1\0\24\65\1\0"+
    "\123\65\1\0\213\65\10\0\246\65\1\0\46\65\2\0\1\65\7\0"+
    "\47\65\110\0\33\65\5\0\3\65\55\0\53\65\25\0\12\66\4\0"+
    "\2\65\1\0\143\65\1\0\1\65\17\0\2\65\7\0\2\65\12\66"+
    "\3\65\2\0\1\65\20\0\1\65\1\0\36\65\35\0\131\65\13\0"+
    "\1\65\16\0\12\66\41\65\11\0\2\65\4\0\1\65\5\0\26\65"+
    "\4\0\1\65\11\0\1\65\3\0\1\65\27\0\31\65\107\0\25\65"+
    "\1\0\10\65\106\0\66\65\3\0\1\65\22\0\1\65\7\0\12\65"+
    "\4\0\12\66\1\0\20\65\4\0\10\65\2\0\2\65\2\0\26\65"+
    "\1\0\7\65\1\0\1\65\3\0\4\65\3\0\1\65\20\0\1\65"+
    "\15\0\2\65\1\0\3\65\4\0\12\66\2\65\23\0\6\65\4\0"+
    "\2\65\2\0\26\65\1\0\7\65\1\0\2\65\1\0\2\65\1\0"+
    "\2\65\37\0\4\65\1\0\1\65\7\0\12\66\2\0\3\65\20\0"+
    "\11\65\1\0\3\65\1\0\26\65\1\0\7\65\1\0\2\65\1\0"+
    "\5\65\3\0\1\65\22\0\1\65\17\0\2\65\4\0\12\66\11\0"+
    "\1\65\13\0\10\65\2\0\2\65\2\0\26\65\1\0\7\65\1\0"+
    "\2\65\1\0\5\65\3\0\1\65\36\0\2\65\1\0\3\65\4\0"+
    "\12\66\1\0\1\65\21\0\1\65\1\0\6\65\3\0\3\65\1\0"+
    "\4\65\3\0\2\65\1\0\1\65\1\0\2\65\3\0\2\65\3\0"+
    "\3\65\3\0\14\65\26\0\1\65\25\0\12\66\25\0\10\65\1\0"+
    "\3\65\1\0\27\65\1\0\20\65\3\0\1\65\32\0\3\65\5\0"+
    "\2\65\4\0\12\66\20\0\1\65\4\0\10\65\1\0\3\65\1\0"+
    "\27\65\1\0\12\65\1\0\5\65\3\0\1\65\40\0\1\65\1\0"+
    "\2\65\4\0\12\66\1\0\2\65\22\0\10\65\1\0\3\65\1\0"+
    "\51\65\2\0\1\65\20\0\1\65\5\0\3\65\10\0\3\65\4\0"+
    "\12\66\12\0\6\65\5\0\22\65\3\0\30\65\1\0\11\65\1\0"+
    "\1\65\2\0\7\65\37\0\12\66\21\0\60\65\1\0\2\65\14\0"+
    "\7\65\11\0\12\66\47\0\2\65\1\0\1\65\2\0\2\65\1\0"+
    "\1\65\2\0\1\65\6\0\4\65\1\0\7\65\1\0\3\65\1\0"+
    "\1\65\1\0\1\65\2\0\2\65\1\0\4\65\1\0\2\65\11\0"+
    "\1\65\2\0\5\65\1\0\1\65\11\0\12\66\2\0\4\65\40\0"+
    "\1\65\37\0\12\66\26\0\10\65\1\0\44\65\33\0\5\65\163\0"+
    "\53\65\24\0\1\65\12\66\6\0\6\65\4\0\4\65\3\0\1\65"+
    "\3\0\2\65\7\0\3\65\4\0\15\65\14\0\1\65\1\0\12\66"+
    "\6\0\46\65\1\0\1\65\5\0\1\65\2\0\53\65\1\0\u014d\65"+
    "\1\0\4\65\2\0\7\65\1\0\1\65\1\0\4\65\2\0\51\65"+
    "\1\0\4\65\2\0\41\65\1\0\4\65\2\0\7\65\1\0\1\65"+
    "\1\0\4\65\2\0\17\65\1\0\71\65\1\0\4\65\2\0\103\65"+
    "\45\0\20\65\20\0\126\65\2\0\6\65\3\0\u026c\65\2\0\21\65"+
    "\1\0\32\65\5\0\113\65\6\0\10\65\7\0\15\65\1\0\4\65"+
    "\16\0\22\65\16\0\22\65\16\0\15\65\1\0\3\65\17\0\64\65"+
    "\43\0\1\65\4\0\1\65\3\0\12\66\46\0\12\66\6\0\130\65"+
    "\10\0\5\65\2\0\42\65\1\0\1\65\5\0\106\65\12\0\37\65"+
    "\47\0\12\66\36\65\2\0\5\65\13\0\54\65\4\0\32\65\6\0"+
    "\12\66\46\0\27\65\11\0\65\65\53\0\12\66\6\0\12\66\15\0"+
    "\1\65\135\0\57\65\21\0\7\65\4\0\12\66\51\0\36\65\15\0"+
    "\2\65\12\66\54\65\32\0\44\65\34\0\12\66\3\0\3\65\12\66"+
    "\44\65\2\0\11\65\140\0\4\65\1\0\4\65\3\0\2\65\11\0"+
    "\300\65\100\0\u0116\65\2\0\6\65\2\0\46\65\2\0\6\65\2\0"+
    "\10\65\1\0\1\65\1\0\1\65\1\0\1\65\1\0\37\65\2\0"+
    "\65\65\1\0\7\65\1\0\1\65\3\0\3\65\1\0\7\65\3\0"+
    "\4\65\2\0\6\65\4\0\15\65\5\0\3\65\1\0\7\65\53\0"+
    "\1\72\1\72\107\0\1\65\15\0\1\65\20\0\15\65\145\0\1\65"+
    "\4\0\1\65\2\0\12\65\1\0\1\65\3\0\5\65\6\0\1\65"+
    "\1\0\1\65\1\0\1\65\1\0\4\65\1\0\13\65\2\0\4\65"+
    "\5\0\5\65\4\0\1\65\64\0\2\65\u0a7b\0\57\65\1\0\57\65"+
    "\1\0\205\65\6\0\4\65\3\0\2\65\14\0\46\65\1\0\1\65"+
    "\5\0\1\65\2\0\70\65\7\0\1\65\20\0\27\65\11\0\7\65"+
    "\1\0\7\65\1\0\7\65\1\0\7\65\1\0\7\65\1\0\7\65"+
    "\1\0\7\65\1\0\7\65\120\0\1\65\u01d5\0\2\65\52\0\5\65"+
    "\5\0\2\65\4\0\126\65\6\0\3\65\1\0\132\65\1\0\4\65"+
    "\5\0\51\65\3\0\136\65\21\0\33\65\65\0\20\65\u0200\0\u19b6\65"+
    "\112\0\u51d6\65\52\0\u048d\65\103\0\56\65\2\0\u010d\65\3\0\20\65"+
    "\12\66\2\65\24\0\57\65\20\0\37\65\2\0\106\65\61\0\11\65"+
    "\2\0\147\65\2\0\44\65\1\0\10\65\77\0\13\65\1\0\3\65"+
    "\1\0\4\65\1\0\27\65\35\0\64\65\16\0\62\65\34\0\12\66"+
    "\30\0\6\65\3\0\1\65\1\0\1\65\2\0\12\66\34\65\12\0"+
    "\27\65\31\0\35\65\7\0\57\65\34\0\1\65\12\66\6\0\5\65"+
    "\1\0\12\65\12\66\5\65\1\0\51\65\27\0\3\65\1\0\10\65"+
    "\4\0\12\66\6\0\27\65\3\0\1\65\3\0\62\65\1\0\1\65"+
    "\3\0\2\65\2\0\5\65\2\0\1\65\1\0\1\65\30\0\3\65"+
    "\2\0\13\65\7\0\3\65\14\0\6\65\2\0\6\65\2\0\6\65"+
    "\11\0\7\65\1\0\7\65\1\0\53\65\1\0\12\65\12\0\163\65"+
    "\15\0\12\66\6\0\u2ba4\65\14\0\27\65\4\0\61\65\u2104\0\u016e\65"+
    "\2\0\152\65\46\0\7\65\14\0\5\65\5\0\1\65\1\0\12\65"+
    "\1\0\15\65\1\0\5\65\1\0\1\65\1\0\2\65\1\0\2\65"+
    "\1\0\154\65\41\0\u016b\65\22\0\100\65\2\0\66\65\50\0\14\65"+
    "\164\0\5\65\1\0\207\65\23\0\12\66\7\0\32\65\6\0\32\65"+
    "\13\0\131\65\3\0\6\65\2\0\6\65\2\0\6\65\2\0\3\65"+
    "\43\0\14\65\1\0\32\65\1\0\23\65\1\0\2\65\1\0\17\65"+
    "\2\0\16\65\42\0\173\65\u0185\0\35\65\3\0\61\65\57\0\40\65"+
    "\20\0\21\65\1\0\10\65\6\0\46\65\12\0\36\65\2\0\44\65"+
    "\4\0\10\65\60\0\236\65\2\0\12\66\6\0\44\65\4\0\44\65"+
    "\4\0\50\65\10\0\64\65\234\0\u0137\65\11\0\26\65\12\0\10\65"+
    "\230\0\6\65\2\0\1\65\1\0\54\65\1\0\2\65\3\0\1\65"+
    "\2\0\27\65\12\0\27\65\11\0\37\65\101\0\23\65\1\0\2\65"+
    "\12\0\26\65\12\0\32\65\106\0\70\65\6\0\2\65\100\0\1\65"+
    "\17\0\4\65\1\0\3\65\1\0\33\65\54\0\35\65\3\0\35\65"+
    "\43\0\10\65\1\0\34\65\33\0\66\65\12\0\26\65\12\0\23\65"+
    "\15\0\22\65\156\0\111\65\67\0\63\65\15\0\63\65\u0310\0\65\65"+
    "\56\0\12\66\23\0\55\65\40\0\31\65\7\0\12\66\11\0\44\65"+
    "\17\0\12\66\20\0\43\65\3\0\1\65\14\0\60\65\16\0\4\65"+
    "\13\0\12\66\1\65\1\0\1\65\43\0\22\65\1\0\31\65\124\0"+
    "\7\65\1\0\1\65\1\0\4\65\1\0\17\65\1\0\12\65\7\0"+
    "\57\65\21\0\12\66\13\0\10\65\2\0\2\65\2\0\26\65\1\0"+
    "\7\65\1\0\2\65\1\0\5\65\3\0\1\65\22\0\1\65\14\0"+
    "\5\65\236\0\65\65\22\0\4\65\5\0\12\66\46\0\60\65\24\0"+
    "\2\65\1\0\1\65\10\0\12\66\246\0\57\65\51\0\4\65\44\0"+
    "\60\65\24\0\1\65\13\0\12\66\46\0\53\65\25\0\12\66\66\0"+
    "\32\65\26\0\12\66\u0166\0\100\65\12\66\25\0\1\65\u01c0\0\71\65"+
    "\u0107\0\11\65\1\0\45\65\21\0\1\65\17\0\12\66\30\0\36\65"+
    "\u0370\0\u039a\65\346\0\304\65\u0abc\0\u042f\65\u0fd1\0\u0247\65\u21b9\0\u0239\65"+
    "\7\0\37\65\1\0\12\66\146\0\36\65\22\0\60\65\20\0\4\65"+
    "\14\0\12\66\11\0\25\65\5\0\23\65\u0370\0\105\65\13\0\1\65"+
    "\102\0\15\65\100\0\1\65\37\0\u17ed\65\23\0\u02f3\65\u250d\0\2\65"+
    "\u0bfe\0\153\65\5\0\15\65\3\0\11\65\7\0\12\65\u1766\0\125\65"+
    "\1\0\107\65\1\0\2\65\2\0\1\65\2\0\2\65\2\0\4\65"+
    "\1\0\14\65\1\0\1\65\1\0\7\65\1\0\101\65\1\0\4\65"+
    "\2\0\10\65\1\0\7\65\1\0\34\65\1\0\4\65\1\0\5\65"+
    "\1\0\1\65\3\0\7\65\1\0\u0154\65\2\0\31\65\1\0\31\65"+
    "\1\0\37\65\1\0\31\65\1\0\37\65\1\0\31\65\1\0\37\65"+
    "\1\0\31\65\1\0\37\65\1\0\31\65\1\0\10\65\2\0\62\66"+
    "\u1000\0\305\65\73\0\104\65\14\0\12\66\u04a6\0\4\65\1\0\33\65"+
    "\1\0\2\65\1\0\1\65\2\0\1\65\1\0\12\65\1\0\4\65"+
    "\1\0\1\65\1\0\1\65\6\0\1\65\4\0\1\65\1\0\1\65"+
    "\1\0\1\65\1\0\3\65\1\0\2\65\1\0\1\65\2\0\1\65"+
    "\1\0\1\65\1\0\1\65\1\0\1\65\1\0\1\65\1\0\2\65"+
    "\1\0\1\65\2\0\4\65\1\0\7\65\1\0\4\65\1\0\4\65"+
    "\1\0\1\65\1\0\12\65\1\0\21\65\5\0\3\65\1\0\5\65"+
    "\1\0\21\65\u1144\0\ua6d7\65\51\0\u1035\65\13\0\336\65\2\0\u1682\65"+
    "\u295e\0\u021e\65\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05f0\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\3\3\20\4\1\5\6\4\1\6"+
    "\4\4\4\7\2\10\1\11\2\1\1\12\1\13\1\14"+
    "\1\15\1\16\1\2\34\4\1\17\1\4\2\17\4\4"+
    "\1\17\1\4\2\17\11\4\1\17\26\4\1\17\12\4"+
    "\1\17\27\4\1\17\2\4\1\20\13\4\1\11\1\21"+
    "\1\0\1\16\17\4\1\17\31\4\1\17\2\4\1\17"+
    "\6\4\1\17\14\4\1\22\5\4\1\17\6\4\1\17"+
    "\6\4\1\17\55\4\1\17\4\4\1\23\2\4\1\17"+
    "\4\4\1\24\6\4\2\25\1\20\11\4\1\0\1\2"+
    "\17\4\1\26\13\4\1\17\1\27\30\4\1\17\1\4"+
    "\1\17\17\4\1\0\15\4\1\17\3\4\1\30\2\4"+
    "\2\17\5\4\1\17\13\4\1\17\2\4\1\30\1\26"+
    "\14\4\1\0\1\20\1\0\1\4\1\17\6\4\1\16"+
    "\11\4\1\17\52\4\1\31\1\4\1\0\22\4\1\17"+
    "\1\32\13\4\1\17\3\4\1\33\3\4\1\20\20\4"+
    "\1\17\26\4\1\0\21\4\1\22\2\4\1\17\2\4"+
    "\1\17\3\4\1\17\7\4\1\17\13\4\1\0\3\4"+
    "\1\0\1\26\11\4\1\17\15\4\2\17\1\4\1\30"+
    "\1\0\5\4\1\17\13\4\1\30\1\0\14\4\1\0"+
    "\12\4\1\0\2\4\1\17\31\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[767];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\73\0\166\0\73\0\261\0\73\0\354\0\u0127"+
    "\0\u0162\0\u019d\0\u01d8\0\u0213\0\u024e\0\u0289\0\u02c4\0\u02ff"+
    "\0\u033a\0\u0375\0\u03b0\0\u03eb\0\u0426\0\u0461\0\u049c\0\u04d7"+
    "\0\u0512\0\u054d\0\u0588\0\u05c3\0\u05fe\0\u0639\0\u0674\0\u06af"+
    "\0\u06ea\0\u0725\0\u0760\0\u079b\0\73\0\u07d6\0\u0811\0\73"+
    "\0\u084c\0\u0887\0\u08c2\0\u08fd\0\73\0\73\0\73\0\u0938"+
    "\0\u0973\0\u09ae\0\u09e9\0\u0a24\0\u0a5f\0\u0a9a\0\u0ad5\0\u0b10"+
    "\0\u0b4b\0\u0b86\0\u0bc1\0\u0bfc\0\u0c37\0\u0c72\0\u0cad\0\u0ce8"+
    "\0\u0d23\0\u0d5e\0\u0d99\0\u0dd4\0\u0e0f\0\u0e4a\0\u0e85\0\u0ec0"+
    "\0\u0efb\0\u0f36\0\u0f71\0\u0fac\0\u0fe7\0\u1022\0\u105d\0\u1098"+
    "\0\u10d3\0\u110e\0\u1149\0\u1184\0\u11bf\0\u11fa\0\u1235\0\u1270"+
    "\0\u12ab\0\u0461\0\u12e6\0\u1321\0\u135c\0\u1397\0\u13d2\0\u140d"+
    "\0\u1448\0\u1483\0\u14be\0\u14f9\0\u1534\0\u156f\0\u15aa\0\u15e5"+
    "\0\u1620\0\u165b\0\u1696\0\u16d1\0\u170c\0\u1747\0\u1782\0\u17bd"+
    "\0\u17f8\0\u1833\0\u186e\0\u18a9\0\u18e4\0\u191f\0\u195a\0\u1995"+
    "\0\u19d0\0\u1a0b\0\u1a46\0\u1a81\0\u1abc\0\u1af7\0\u1b32\0\u1b6d"+
    "\0\u1ba8\0\u1be3\0\u1c1e\0\u1c59\0\u1c94\0\u1ccf\0\u1d0a\0\u1d45"+
    "\0\u1d80\0\u1dbb\0\u1df6\0\u1e31\0\u1e6c\0\u1ea7\0\u1ee2\0\u1f1d"+
    "\0\u1f58\0\u1f93\0\u1fce\0\u2009\0\u2044\0\u207f\0\u20ba\0\u20f5"+
    "\0\u2130\0\u216b\0\u21a6\0\u21e1\0\u221c\0\u2257\0\u2292\0\u22cd"+
    "\0\u2308\0\u2343\0\u237e\0\u23b9\0\u23f4\0\u242f\0\u246a\0\u24a5"+
    "\0\u24e0\0\u251b\0\u2556\0\u2591\0\73\0\73\0\u25cc\0\u2607"+
    "\0\u2642\0\u267d\0\u26b8\0\u26f3\0\u272e\0\u2769\0\u27a4\0\u27df"+
    "\0\u281a\0\u2855\0\u2890\0\u28cb\0\u2906\0\u2941\0\u297c\0\u29b7"+
    "\0\u29f2\0\u2a2d\0\u2a68\0\u2aa3\0\u2ade\0\u2b19\0\u2b54\0\u2b8f"+
    "\0\u2bca\0\u2c05\0\u2c40\0\u2c7b\0\u2cb6\0\u2cf1\0\u2d2c\0\u2d67"+
    "\0\u2da2\0\u2ddd\0\u2e18\0\u2e53\0\u2e8e\0\u2ec9\0\u2f04\0\u2f3f"+
    "\0\u2f7a\0\u2fb5\0\u2ff0\0\u302b\0\u3066\0\u30a1\0\u30dc\0\u3117"+
    "\0\u3152\0\u318d\0\u31c8\0\u3203\0\u323e\0\u3279\0\u29b7\0\u32b4"+
    "\0\u32ef\0\u332a\0\u3365\0\u33a0\0\u33db\0\u3416\0\u3451\0\u348c"+
    "\0\u34c7\0\u3502\0\u353d\0\u3578\0\u35b3\0\u35ee\0\u3629\0\u3664"+
    "\0\u369f\0\u36da\0\u3715\0\u3750\0\u378b\0\u37c6\0\u3801\0\u1ccf"+
    "\0\u383c\0\u3877\0\u38b2\0\u38ed\0\u3928\0\u3963\0\u399e\0\u39d9"+
    "\0\u3a14\0\u3a4f\0\u3a8a\0\u3ac5\0\u3b00\0\u3b3b\0\u3b76\0\u3bb1"+
    "\0\u3bec\0\u3c27\0\u3c62\0\u3c9d\0\u3cd8\0\u3d13\0\u3d4e\0\u3d89"+
    "\0\u3dc4\0\u3dff\0\u3e3a\0\u3e75\0\u3eb0\0\u3eeb\0\u3f26\0\u3f61"+
    "\0\u3f9c\0\u3fd7\0\u4012\0\u404d\0\u4088\0\u40c3\0\u40fe\0\u4139"+
    "\0\u4174\0\u41af\0\u41ea\0\u4225\0\u4260\0\u429b\0\u42d6\0\u4311"+
    "\0\u434c\0\u4387\0\u43c2\0\u43fd\0\u4438\0\u4473\0\u44ae\0\u0461"+
    "\0\u44e9\0\u4524\0\u455f\0\u459a\0\u45d5\0\u4610\0\u464b\0\u4686"+
    "\0\u46c1\0\u46fc\0\u4737\0\u4772\0\u47ad\0\u47e8\0\u4823\0\u485e"+
    "\0\u4899\0\u48d4\0\u490f\0\u494a\0\u4985\0\u49c0\0\u49fb\0\u4a36"+
    "\0\u4a71\0\u4aac\0\u4ae7\0\u4b22\0\u4b5d\0\u4b98\0\u4bd3\0\u4c0e"+
    "\0\u4c49\0\u4c84\0\u4cbf\0\u4cfa\0\u4d35\0\u4d70\0\u4dab\0\u4de6"+
    "\0\u4e21\0\u455f\0\u4e5c\0\u4e97\0\u4ed2\0\u4f0d\0\u4f48\0\u4f83"+
    "\0\u4fbe\0\u4ff9\0\u5034\0\u506f\0\u50aa\0\u50e5\0\u5120\0\u515b"+
    "\0\u0461\0\u5196\0\u51d1\0\u520c\0\u5247\0\u5282\0\u52bd\0\u52f8"+
    "\0\u5333\0\u536e\0\u53a9\0\u53e4\0\u541f\0\u545a\0\u5495\0\u54d0"+
    "\0\u550b\0\u5546\0\u5581\0\u55bc\0\u55f7\0\u5632\0\u566d\0\u56a8"+
    "\0\u56e3\0\u571e\0\u5759\0\u5794\0\u57cf\0\u580a\0\u5845\0\u5880"+
    "\0\u58bb\0\u58f6\0\u5931\0\u596c\0\u59a7\0\u59e2\0\u5a1d\0\u5a58"+
    "\0\u5a93\0\u5ace\0\u5b09\0\u5b44\0\u5b7f\0\u5bba\0\u5bf5\0\u5c30"+
    "\0\u5c6b\0\u5ca6\0\u5ce1\0\u5d1c\0\u5d57\0\u5d92\0\u5dcd\0\u5e08"+
    "\0\u5e43\0\u5e7e\0\u5eb9\0\u5ef4\0\u5f2f\0\u5f6a\0\u5fa5\0\u5fe0"+
    "\0\u601b\0\u6056\0\u6091\0\u60cc\0\u6107\0\u6142\0\u617d\0\u61b8"+
    "\0\u61f3\0\u622e\0\u6269\0\u62a4\0\u62df\0\u631a\0\u6355\0\u6390"+
    "\0\u63cb\0\u6406\0\u6441\0\u647c\0\u64b7\0\u64f2\0\u652d\0\u6568"+
    "\0\u65a3\0\u65de\0\u6619\0\u6654\0\u668f\0\u66ca\0\u6705\0\u6740"+
    "\0\u677b\0\u67b6\0\u67f1\0\u682c\0\u6867\0\u68a2\0\u68dd\0\u6918"+
    "\0\u6953\0\u698e\0\u69c9\0\u6a04\0\u6a3f\0\u6a7a\0\u6ab5\0\u4b22"+
    "\0\u6af0\0\u6b2b\0\u6b66\0\u6ba1\0\u6bdc\0\u6c17\0\u6c52\0\u6c8d"+
    "\0\u6cc8\0\u6d03\0\u6d3e\0\u6d79\0\u6db4\0\u6def\0\u6e2a\0\u6e65"+
    "\0\u6ea0\0\u6edb\0\u6f16\0\u6f51\0\u6f8c\0\u6fc7\0\u7002\0\u703d"+
    "\0\u7078\0\u70b3\0\u70ee\0\u7129\0\u7164\0\u719f\0\u71da\0\u7215"+
    "\0\u7250\0\u728b\0\u72c6\0\u7301\0\u733c\0\u7377\0\u73b2\0\u4686"+
    "\0\u73ed\0\u7428\0\u7463\0\u749e\0\u74d9\0\u7514\0\u754f\0\u758a"+
    "\0\u75c5\0\u7600\0\u763b\0\u7676\0\u0461\0\u76b1\0\u76ec\0\u7727"+
    "\0\u7762\0\u779d\0\u77d8\0\u7813\0\u784e\0\u7889\0\u78c4\0\u37c6"+
    "\0\u78ff\0\u793a\0\u7975\0\u79b0\0\u79eb\0\u7a26\0\u7a61\0\u7a9c"+
    "\0\u7ad7\0\u4bd3\0\u0461\0\u7b12\0\u7b4d\0\u7b88\0\u7bc3\0\u7bfe"+
    "\0\u7c39\0\u7c74\0\u7caf\0\u7cea\0\u7d25\0\u7d60\0\u7d9b\0\u7dd6"+
    "\0\u7e11\0\u7e4c\0\u0461\0\u7e87\0\u7ec2\0\u7efd\0\u6867\0\u7f38"+
    "\0\u7f73\0\u7fae\0\u7fe9\0\u8024\0\u805f\0\u809a\0\u80d5\0\u8110"+
    "\0\u814b\0\u8186\0\u81c1\0\u81fc\0\u8237\0\u8272\0\u82ad\0\u82e8"+
    "\0\u8323\0\u835e\0\u8399\0\u83d4\0\u840f\0\u844a\0\u8485\0\u84c0"+
    "\0\u84fb\0\u8536\0\u8571\0\u85ac\0\u85e7\0\u8622\0\u865d\0\u8698"+
    "\0\u86d3\0\u870e\0\u8749\0\u8784\0\u87bf\0\u87fa\0\u8835\0\u8870"+
    "\0\u88ab\0\u88e6\0\u8921\0\u895c\0\u8997\0\u89d2\0\u8a0d\0\u8a48"+
    "\0\u8a83\0\u8abe\0\u8af9\0\u8b34\0\u8b6f\0\u8baa\0\u8be5\0\u8c20"+
    "\0\u0461\0\u8c5b\0\u8c96\0\u8cd1\0\u8d0c\0\u8d47\0\u3279\0\u8d82"+
    "\0\u8dbd\0\u8df8\0\u3eeb\0\u8e33\0\u8e6e\0\u8ea9\0\u8ee4\0\u8f1f"+
    "\0\u8f5a\0\u8f95\0\u84c0\0\u8fd0\0\u2fb5\0\u900b\0\u9046\0\u9081"+
    "\0\u90bc\0\u90f7\0\u9132\0\u916d\0\u91a8\0\u10d3\0\u91e3\0\u921e"+
    "\0\u9259\0\u9294\0\u92cf\0\u0461\0\u930a\0\u9345\0\u9380\0\u93bb"+
    "\0\u93f6\0\u9431\0\u946c\0\u94a7\0\u94e2\0\u951d\0\u9558\0\u9593"+
    "\0\u95ce\0\u9609\0\u9644\0\u967f\0\u96ba\0\u96f5\0\u9730\0\u976b"+
    "\0\u97a6\0\u97e1\0\u981c\0\u9857\0\73\0\u9892\0\u98cd\0\u9908"+
    "\0\u9943\0\u997e\0\u99b9\0\u99f4\0\u9a2f\0\u4686\0\u9a6a\0\u9aa5"+
    "\0\u9ae0\0\u9b1b\0\u9b56\0\u9b91\0\u9bcc\0\u9c07\0\u9c42\0\u9c7d"+
    "\0\u9cb8\0\u0461\0\u9cf3\0\u9d2e\0\u9d69\0\u9da4\0\u9ddf\0\u9e1a"+
    "\0\u9e55\0\u9e90\0\u9ecb\0\u9f06\0\u9f41\0\u9f7c\0\u9fb7\0\u9ff2"+
    "\0\ua02d\0\ua068\0\ua0a3\0\ua0de\0\ua119\0\ua154\0\ua18f\0\ua1ca"+
    "\0\ua205\0\ua240\0\ua27b\0\ua2b6\0\ua2f1\0\ua32c\0\ua367\0\ua3a2"+
    "\0\ua3dd\0\ua418\0\ua453\0\ua48e\0\ua4c9\0\ua504\0\ua53f\0\ua57a"+
    "\0\ua5b5\0\ua5f0\0\ua62b\0\ua666\0\ua6a1\0\ua6dc\0\ua717\0\u951d"+
    "\0\ua752\0\ua78d\0\ua7c8\0\ua803\0\ua83e\0\ua879\0\ua8b4";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[767];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\4\1\44\1\45\1\46\1\45\1\47"+
    "\1\45\1\50\1\51\2\52\1\53\1\54\2\6\1\55"+
    "\1\56\1\57\1\26\1\30\1\37\1\26\1\60\76\0"+
    "\1\4\75\0\1\61\73\0\1\62\73\0\1\26\1\63"+
    "\1\64\1\26\1\65\1\66\2\26\1\67\6\26\1\70"+
    "\14\26\22\0\4\26\11\0\3\26\1\71\11\26\1\72"+
    "\14\26\1\73\1\26\22\0\4\26\11\0\1\26\1\74"+
    "\2\26\1\75\1\26\1\76\1\77\1\100\23\26\22\0"+
    "\4\26\11\0\1\101\1\102\2\26\1\103\1\104\1\105"+
    "\1\106\1\107\1\110\4\26\1\111\2\26\1\112\2\26"+
    "\1\113\5\26\1\114\1\26\22\0\4\26\11\0\1\115"+
    "\1\116\1\117\11\26\1\120\1\121\4\26\1\122\7\26"+
    "\1\123\1\26\22\0\4\26\11\0\4\26\1\124\1\26"+
    "\1\125\1\26\1\126\23\26\22\0\4\26\11\0\3\26"+
    "\1\127\6\26\1\130\2\26\1\131\4\26\1\132\1\26"+
    "\1\133\7\26\22\0\4\26\11\0\2\26\1\134\1\135"+
    "\11\26\1\136\1\26\1\137\3\26\1\140\10\26\22\0"+
    "\4\26\11\0\1\141\1\142\1\143\1\144\6\26\1\145"+
    "\1\26\1\146\1\147\1\26\1\150\1\26\1\132\3\26"+
    "\1\151\6\26\22\0\4\26\11\0\7\26\1\152\24\26"+
    "\22\0\4\26\11\0\1\26\1\153\1\154\1\26\1\155"+
    "\1\26\1\156\1\157\1\160\14\26\1\161\6\26\22\0"+
    "\4\26\11\0\2\26\1\162\1\26\1\163\1\164\1\165"+
    "\1\26\1\166\23\26\22\0\4\26\11\0\6\26\1\167"+
    "\1\26\1\170\23\26\22\0\4\26\11\0\1\171\1\172"+
    "\2\26\1\173\2\26\1\174\1\175\3\26\1\176\4\26"+
    "\1\177\12\26\22\0\4\26\11\0\34\26\22\0\4\26"+
    "\11\0\4\26\1\200\1\26\1\201\1\202\1\203\23\26"+
    "\22\0\4\26\11\0\34\30\22\0\4\30\11\0\2\26"+
    "\1\204\1\205\1\206\1\207\1\210\1\211\1\212\23\26"+
    "\22\0\4\26\11\0\1\26\1\213\1\214\1\26\1\215"+
    "\1\26\1\216\1\217\1\220\6\26\1\221\14\26\22\0"+
    "\4\26\11\0\24\26\1\222\7\26\22\0\4\26\11\0"+
    "\4\26\1\223\1\26\1\224\1\225\1\226\23\26\22\0"+
    "\4\26\11\0\1\26\1\227\1\230\1\26\1\231\1\26"+
    "\1\232\1\233\1\234\1\132\22\26\22\0\4\26\11\0"+
    "\2\26\1\235\1\26\1\236\2\26\1\237\7\26\1\240"+
    "\14\26\22\0\4\26\11\0\27\30\1\37\4\30\17\0"+
    "\1\241\2\0\2\30\1\37\1\30\11\0\4\26\1\242"+
    "\27\26\22\0\4\26\11\0\6\26\1\243\1\244\24\26"+
    "\22\0\4\26\11\0\1\26\1\245\1\246\1\26\1\247"+
    "\1\26\1\250\1\251\1\252\6\26\1\253\14\26\22\0"+
    "\4\26\11\0\4\26\1\254\27\26\22\0\4\26\47\0"+
    "\1\50\74\0\1\50\74\0\1\50\74\0\1\50\74\0"+
    "\1\255\73\0\1\255\73\0\1\255\13\0\1\60\2\0"+
    "\66\60\1\256\1\60\1\61\2\257\2\61\1\260\65\61"+
    "\1\62\1\3\1\4\70\62\7\0\2\26\1\261\31\26"+
    "\22\0\4\26\11\0\4\26\1\262\2\26\1\263\24\26"+
    "\22\0\4\26\11\0\1\26\1\264\1\265\5\26\1\266"+
    "\4\26\1\267\1\26\1\270\4\26\1\271\7\26\22\0"+
    "\4\26\11\0\7\26\1\272\1\273\23\26\22\0\4\26"+
    "\11\0\3\26\1\274\15\26\1\275\12\26\22\0\4\26"+
    "\11\0\1\26\1\276\2\26\1\137\27\26\22\0\4\26"+
    "\11\0\6\26\1\277\1\300\1\301\23\26\22\0\4\26"+
    "\11\0\6\26\1\302\22\26\1\303\1\304\1\26\22\0"+
    "\4\26\11\0\12\26\1\305\17\26\1\306\1\26\22\0"+
    "\4\26\11\0\17\26\1\143\14\26\22\0\4\26\11\0"+
    "\13\26\1\307\3\26\1\310\14\26\22\0\4\26\11\0"+
    "\26\26\1\311\5\26\22\0\4\26\11\0\1\312\2\26"+
    "\1\313\4\26\1\314\3\26\1\315\2\26\1\316\1\26"+
    "\1\317\1\320\7\26\1\321\1\26\22\0\4\26\11\0"+
    "\6\26\1\322\25\26\22\0\4\26\11\0\2\26\1\323"+
    "\2\26\1\324\26\26\22\0\4\26\11\0\24\26\1\132"+
    "\1\325\6\26\22\0\4\26\11\0\24\26\1\143\7\26"+
    "\22\0\4\26\11\0\1\26\1\326\32\26\22\0\4\26"+
    "\11\0\30\26\1\143\3\26\22\0\4\26\11\0\1\327"+
    "\2\26\1\330\13\26\1\331\1\26\1\332\2\26\1\333"+
    "\7\26\22\0\4\26\11\0\14\26\1\143\17\26\22\0"+
    "\4\26\11\0\3\26\1\334\30\26\22\0\4\26\11\0"+
    "\17\26\1\335\14\26\22\0\4\26\11\0\10\26\1\336"+
    "\23\26\22\0\4\26\11\0\10\26\1\337\23\26\22\0"+
    "\4\26\11\0\10\26\1\340\23\26\22\0\4\26\11\0"+
    "\21\26\1\341\12\26\22\0\4\26\11\0\21\26\1\342"+
    "\12\26\22\0\4\26\11\0\12\26\1\306\21\26\22\0"+
    "\4\26\11\0\7\26\1\343\24\26\22\0\4\26\11\0"+
    "\17\26\1\244\14\26\22\0\4\26\11\0\22\26\1\344"+
    "\11\26\22\0\4\26\11\0\7\26\1\345\11\26\1\346"+
    "\12\26\22\0\4\26\11\0\1\26\1\347\15\26\1\350"+
    "\14\26\22\0\4\26\11\0\7\26\1\351\24\26\22\0"+
    "\4\26\11\0\14\26\1\352\17\26\22\0\4\26\11\0"+
    "\4\26\1\353\27\26\22\0\4\26\11\0\7\26\1\354"+
    "\24\26\22\0\4\26\11\0\1\355\2\26\1\356\2\26"+
    "\1\357\3\26\1\360\2\26\1\306\3\26\1\361\10\26"+
    "\1\362\1\26\22\0\4\26\11\0\10\26\1\363\13\26"+
    "\1\364\7\26\22\0\4\26\11\0\2\26\1\365\31\26"+
    "\22\0\4\26\11\0\1\366\33\26\22\0\4\26\11\0"+
    "\12\26\1\367\21\26\22\0\4\26\11\0\3\26\1\143"+
    "\30\26\22\0\4\26\11\0\1\370\5\26\1\371\1\372"+
    "\11\26\1\373\12\26\22\0\4\26\11\0\21\26\1\346"+
    "\12\26\22\0\4\26\11\0\21\26\1\374\12\26\22\0"+
    "\4\26\11\0\7\26\1\132\24\26\22\0\4\26\11\0"+
    "\1\132\2\26\1\375\30\26\22\0\4\26\11\0\10\26"+
    "\1\132\1\26\1\132\21\26\22\0\4\26\11\0\26\26"+
    "\1\132\5\26\22\0\4\26\11\0\11\26\2\132\21\26"+
    "\22\0\4\26\11\0\17\26\1\376\1\26\1\306\12\26"+
    "\22\0\4\26\11\0\3\26\1\377\30\26\22\0\4\26"+
    "\11\0\10\26\1\347\23\26\22\0\4\26\11\0\24\26"+
    "\1\u0100\7\26\22\0\4\26\11\0\4\26\1\u0100\27\26"+
    "\22\0\4\26\11\0\1\26\1\u0101\22\26\1\u0102\7\26"+
    "\22\0\4\26\11\0\3\26\1\u0103\4\26\1\u0104\23\26"+
    "\22\0\4\26\11\0\1\u0105\2\26\1\u0106\4\26\1\u0107"+
    "\4\26\1\244\1\26\1\u0108\2\26\1\u0109\11\26\22\0"+
    "\4\26\11\0\11\26\1\132\7\26\1\u010a\12\26\22\0"+
    "\4\26\11\0\1\u010b\33\26\22\0\4\26\11\0\6\26"+
    "\1\u010c\25\26\22\0\4\26\11\0\2\26\1\u010d\31\26"+
    "\22\0\4\26\11\0\6\26\1\74\1\u010e\24\26\22\0"+
    "\4\26\11\0\21\26\1\u010f\12\26\22\0\4\26\11\0"+
    "\6\26\1\u0110\25\26\22\0\4\26\11\0\7\26\1\u0111"+
    "\24\26\22\0\4\26\11\0\2\26\1\u0112\14\26\1\u0113"+
    "\14\26\22\0\4\26\11\0\5\26\1\u0114\26\26\22\0"+
    "\4\26\11\0\17\26\1\u0115\4\26\1\u0116\7\26\22\0"+
    "\4\26\11\0\1\u0117\14\26\1\u0118\3\26\1\132\12\26"+
    "\22\0\4\26\11\0\23\26\1\237\10\26\22\0\4\26"+
    "\11\0\21\26\1\u0119\2\26\1\u011a\7\26\22\0\4\26"+
    "\11\0\10\26\1\u011b\23\26\22\0\4\26\11\0\7\26"+
    "\1\u011c\24\26\22\0\4\26\11\0\1\u011d\7\26\1\u011e"+
    "\2\26\1\306\20\26\22\0\4\26\11\0\15\26\1\u011f"+
    "\13\26\1\143\2\26\22\0\4\26\11\0\10\26\1\u0120"+
    "\3\26\1\u0121\5\26\1\237\11\26\22\0\4\26\11\0"+
    "\3\26\1\237\11\26\1\u0122\16\26\22\0\4\26\11\0"+
    "\1\26\1\u0123\4\26\1\u0124\1\26\1\u0125\1\u0126\22\26"+
    "\22\0\4\26\11\0\7\26\1\u0127\24\26\22\0\4\26"+
    "\11\0\32\26\1\132\1\26\22\0\4\26\11\0\7\26"+
    "\1\u0128\24\26\22\0\4\26\11\0\15\26\1\u0129\6\26"+
    "\1\u012a\7\26\22\0\4\26\11\0\23\26\1\u012b\1\u012c"+
    "\7\26\22\0\4\26\11\0\25\26\1\u012d\6\26\22\0"+
    "\4\26\11\0\15\26\1\u012e\1\26\1\u012f\14\26\22\0"+
    "\4\26\11\0\4\26\1\u0130\2\26\1\u0131\24\26\22\0"+
    "\4\26\11\0\1\26\1\u0132\1\u0133\31\26\22\0\4\26"+
    "\11\0\2\26\1\u0134\14\26\1\u0135\14\26\22\0\4\26"+
    "\11\0\21\26\1\u0136\12\26\22\0\4\26\11\0\17\26"+
    "\1\137\14\26\22\0\4\26\11\0\4\26\1\u0137\27\26"+
    "\22\0\4\26\11\0\17\26\1\u0138\14\26\22\0\4\26"+
    "\11\0\12\26\1\u0139\2\26\1\u013a\16\26\22\0\4\26"+
    "\11\0\15\26\1\u013b\16\26\22\0\4\26\11\0\2\26"+
    "\1\301\31\26\22\0\4\26\11\0\21\26\1\u0136\1\26"+
    "\1\132\10\26\22\0\4\26\11\0\17\26\1\u010d\14\26"+
    "\22\0\4\26\11\0\4\26\1\u013c\2\26\1\u013d\24\26"+
    "\22\0\4\26\11\0\21\26\1\u013e\12\26\22\0\4\26"+
    "\11\0\15\26\1\u013f\3\26\1\u0140\4\26\1\u0141\5\26"+
    "\22\0\4\26\11\0\21\26\1\u0142\4\26\1\254\5\26"+
    "\22\0\4\26\11\0\1\u0143\33\26\22\0\4\26\11\0"+
    "\4\26\1\u0144\3\26\1\264\23\26\22\0\4\26\11\0"+
    "\21\26\1\u0145\12\26\22\0\4\26\11\0\21\26\1\132"+
    "\12\26\22\0\4\26\11\0\4\26\1\u0146\27\26\22\0"+
    "\4\26\11\0\7\u0147\1\u0148\10\u0147\1\0\6\u0147\1\u0149"+
    "\4\u0147\22\0\1\u0147\1\0\1\u0149\1\u0148\11\0\15\26"+
    "\1\143\16\26\22\0\4\26\11\0\17\26\1\u012f\14\26"+
    "\22\0\4\26\11\0\11\26\1\132\22\26\22\0\4\26"+
    "\11\0\25\26\1\u014a\6\26\22\0\4\26\11\0\4\26"+
    "\1\u014b\1\26\1\u014c\1\u014d\24\26\22\0\4\26\11\0"+
    "\3\26\1\u014e\30\26\22\0\4\26\11\0\14\26\1\u014f"+
    "\17\26\22\0\4\26\11\0\2\26\1\u0150\31\26\22\0"+
    "\4\26\11\0\2\26\1\u0151\1\u0152\6\26\1\132\21\26"+
    "\22\0\4\26\11\0\10\26\1\u0128\23\26\22\0\4\26"+
    "\11\0\6\26\1\u0128\25\26\22\0\4\26\2\0\5\257"+
    "\1\u0153\65\257\1\61\2\257\1\61\1\u0154\1\260\65\61"+
    "\7\0\2\26\1\u0155\1\u0156\30\26\22\0\4\26\11\0"+
    "\3\26\1\u0157\30\26\22\0\4\26\11\0\10\26\1\u0158"+
    "\23\26\22\0\4\26\11\0\15\26\1\237\16\26\22\0"+
    "\4\26\11\0\2\26\1\u0159\31\26\22\0\4\26\11\0"+
    "\17\26\1\u015a\14\26\22\0\4\26\11\0\3\26\1\u015b"+
    "\10\26\1\u015c\1\u015d\3\26\1\u015e\12\26\22\0\4\26"+
    "\11\0\1\26\1\u015f\15\26\1\u0160\14\26\22\0\4\26"+
    "\11\0\24\26\1\u0161\5\26\1\u0162\1\26\22\0\4\26"+
    "\11\0\1\u0163\33\26\22\0\4\26\11\0\2\26\1\u0164"+
    "\31\26\22\0\4\26\11\0\1\u0165\6\26\1\132\11\26"+
    "\1\132\12\26\22\0\4\26\11\0\10\26\1\u0166\23\26"+
    "\22\0\4\26\11\0\3\26\1\u0167\30\26\22\0\4\26"+
    "\11\0\15\26\1\146\16\26\22\0\4\26\11\0\2\26"+
    "\1\132\31\26\22\0\4\26\11\0\26\26\1\143\5\26"+
    "\22\0\4\26\11\0\4\26\1\u0128\11\26\1\u0168\15\26"+
    "\22\0\4\26\11\0\15\26\1\u0169\16\26\22\0\4\26"+
    "\11\0\6\26\1\250\25\26\22\0\4\26\11\0\10\26"+
    "\1\u010c\23\26\22\0\4\26\11\0\7\26\1\347\24\26"+
    "\22\0\4\26\11\0\1\u016a\2\26\1\132\10\26\1\u016b"+
    "\11\26\1\u016c\5\26\22\0\4\26\11\0\17\26\1\u016d"+
    "\14\26\22\0\4\26\11\0\5\26\1\237\26\26\22\0"+
    "\4\26\11\0\4\26\1\u016e\27\26\22\0\4\26\11\0"+
    "\21\26\1\u016f\12\26\22\0\4\26\11\0\12\26\1\u0170"+
    "\4\26\1\u0171\14\26\22\0\4\26\11\0\4\26\1\u0172"+
    "\2\26\1\u0173\24\26\22\0\4\26\11\0\10\26\1\u0174"+
    "\23\26\22\0\4\26\11\0\1\26\1\u0175\32\26\22\0"+
    "\4\26\11\0\7\26\1\u0176\24\26\22\0\4\26\11\0"+
    "\17\26\1\u0177\14\26\22\0\4\26\11\0\3\26\1\u0178"+
    "\30\26\22\0\4\26\11\0\4\26\1\243\27\26\22\0"+
    "\4\26\11\0\7\26\1\u0179\24\26\22\0\4\26\11\0"+
    "\3\26\1\u017a\30\26\22\0\4\26\11\0\21\26\1\u017b"+
    "\12\26\22\0\4\26\11\0\1\26\1\u017c\2\26\1\u0132"+
    "\14\26\1\346\12\26\22\0\4\26\11\0\3\26\1\u017d"+
    "\30\26\22\0\4\26\11\0\7\26\1\u017e\24\26\22\0"+
    "\4\26\11\0\1\26\1\u017f\32\26\22\0\4\26\11\0"+
    "\10\26\1\u0180\23\26\22\0\4\26\11\0\21\26\1\u0181"+
    "\12\26\22\0\4\26\11\0\1\u0182\2\26\1\u0183\3\26"+
    "\1\u0184\3\26\1\u0185\4\26\1\u0186\13\26\22\0\4\26"+
    "\11\0\21\26\1\u0187\12\26\22\0\4\26\11\0\17\26"+
    "\1\u0188\14\26\22\0\4\26\11\0\1\143\33\26\22\0"+
    "\4\26\11\0\7\26\1\u0189\24\26\22\0\4\26\11\0"+
    "\7\26\1\347\22\26\1\362\1\26\22\0\4\26\11\0"+
    "\2\26\1\u018a\31\26\22\0\4\26\11\0\3\26\1\u018b"+
    "\30\26\22\0\4\26\11\0\15\26\1\u018c\16\26\22\0"+
    "\4\26\11\0\6\26\1\u018d\25\26\22\0\4\26\11\0"+
    "\12\26\1\u018e\21\26\22\0\4\26\11\0\2\26\1\u018f"+
    "\31\26\22\0\4\26\11\0\6\26\1\277\25\26\22\0"+
    "\4\26\11\0\17\26\1\u0190\14\26\22\0\4\26\11\0"+
    "\15\26\1\u0191\16\26\22\0\4\26\11\0\17\26\1\u0192"+
    "\14\26\22\0\4\26\11\0\7\26\1\u0193\24\26\22\0"+
    "\4\26\11\0\21\26\1\u0194\12\26\22\0\4\26\11\0"+
    "\6\26\1\u0195\1\u0196\24\26\22\0\4\26\11\0\4\26"+
    "\1\132\2\26\1\u0197\24\26\22\0\4\26\11\0\1\26"+
    "\1\237\32\26\22\0\4\26\11\0\26\26\1\u0198\5\26"+
    "\22\0\4\26\11\0\7\26\1\u0199\24\26\22\0\4\26"+
    "\11\0\17\26\1\u019a\14\26\22\0\4\26\11\0\10\26"+
    "\1\u019b\23\26\22\0\4\26\10\0\1\u019c\34\26\22\0"+
    "\4\26\11\0\7\26\1\u019d\24\26\22\0\4\26\11\0"+
    "\3\26\1\u019e\15\26\1\132\12\26\22\0\4\26\11\0"+
    "\1\u013b\33\26\22\0\4\26\11\0\2\26\1\u019f\4\26"+
    "\1\u01a0\24\26\22\0\4\26\11\0\5\26\1\u01a1\26\26"+
    "\22\0\4\26\11\0\7\26\1\u01a2\24\26\22\0\4\26"+
    "\11\0\4\26\1\u01a3\27\26\22\0\4\26\11\0\4\26"+
    "\1\u01a4\27\26\22\0\4\26\11\0\25\26\1\74\6\26"+
    "\22\0\4\26\11\0\10\26\1\254\23\26\22\0\4\26"+
    "\11\0\1\u01a5\20\26\1\u01a6\7\26\1\132\2\26\22\0"+
    "\4\26\11\0\26\26\1\u01a7\5\26\22\0\4\26\11\0"+
    "\6\26\1\u01a8\10\26\1\u01a9\14\26\22\0\4\26\11\0"+
    "\1\u01aa\33\26\22\0\4\26\11\0\17\26\1\u01ab\14\26"+
    "\22\0\4\26\11\0\7\26\1\u0158\24\26\22\0\4\26"+
    "\11\0\7\26\1\u01ac\1\u01ad\23\26\22\0\4\26\11\0"+
    "\7\26\1\u01ae\1\u01af\23\26\22\0\4\26\11\0\1\132"+
    "\33\26\22\0\4\26\11\0\21\26\1\u01b0\12\26\22\0"+
    "\4\26\11\0\31\26\1\132\2\26\22\0\4\26\11\0"+
    "\2\26\1\143\12\26\1\u01b1\16\26\22\0\4\26\11\0"+
    "\5\26\1\u01b2\26\26\22\0\4\26\11\0\21\26\1\u01b3"+
    "\12\26\22\0\4\26\11\0\13\26\1\132\20\26\22\0"+
    "\4\26\11\0\1\u01b4\10\26\1\352\13\26\1\u01b5\6\26"+
    "\22\0\4\26\11\0\1\26\1\u01b6\32\26\22\0\4\26"+
    "\11\0\10\26\1\u01b7\23\26\22\0\4\26\11\0\17\26"+
    "\1\u01b8\14\26\22\0\4\26\11\0\7\26\1\u01b9\24\26"+
    "\22\0\4\26\11\0\5\26\1\u01ba\26\26\22\0\4\26"+
    "\11\0\1\u01bb\6\26\1\132\24\26\22\0\4\26\11\0"+
    "\1\26\1\u01bc\4\26\1\u01bd\25\26\22\0\4\26\11\0"+
    "\7\26\1\u0157\24\26\22\0\4\26\11\0\2\26\1\u01be"+
    "\31\26\22\0\4\26\11\0\23\26\1\u01bf\10\26\22\0"+
    "\4\26\11\0\10\26\1\u012f\23\26\22\0\4\26\11\0"+
    "\12\26\1\132\21\26\22\0\4\26\11\0\7\26\1\u01c0"+
    "\24\26\22\0\4\26\11\0\12\26\1\352\21\26\22\0"+
    "\4\26\11\0\7\26\1\u012f\24\26\22\0\4\26\11\0"+
    "\26\26\1\u01c1\5\26\22\0\4\26\11\0\7\26\1\132"+
    "\5\26\1\u01a3\16\26\22\0\4\26\11\0\24\26\1\132"+
    "\1\26\1\u01c2\5\26\22\0\4\26\11\0\6\26\1\u01c3"+
    "\6\26\1\u01c4\16\26\22\0\4\26\11\0\20\26\1\u01c5"+
    "\13\26\22\0\4\26\11\0\16\26\1\u01c6\15\26\22\0"+
    "\4\26\11\0\15\26\1\132\16\26\22\0\4\26\11\0"+
    "\11\26\1\u0141\22\26\22\0\4\26\11\0\7\26\1\u01c7"+
    "\24\26\22\0\4\26\11\0\21\26\1\u01c8\12\26\22\0"+
    "\4\26\11\0\32\26\1\u01c9\1\26\22\0\4\26\11\0"+
    "\17\26\1\u01ca\14\26\22\0\4\26\11\0\1\141\33\26"+
    "\22\0\4\26\11\0\17\26\1\132\14\26\22\0\4\26"+
    "\11\0\24\26\1\132\7\26\22\0\4\26\11\0\7\26"+
    "\1\u01cb\24\26\22\0\4\26\11\0\15\26\1\u011e\16\26"+
    "\22\0\4\26\11\0\7\26\1\u01cc\11\26\1\u01cd\12\26"+
    "\22\0\4\26\11\0\3\26\1\237\30\26\22\0\4\26"+
    "\11\0\7\26\1\132\7\26\1\u01ce\14\26\22\0\4\26"+
    "\11\0\1\u013e\33\26\22\0\4\26\11\0\10\26\1\u01cf"+
    "\23\26\22\0\4\26\11\0\1\26\1\74\32\26\22\0"+
    "\4\26\11\0\7\26\1\u01d0\11\26\1\u013e\12\26\22\0"+
    "\4\26\11\0\1\26\1\u0158\32\26\22\0\4\26\11\0"+
    "\13\26\1\137\20\26\22\0\4\26\11\0\10\26\1\u010d"+
    "\23\26\22\0\4\26\11\0\5\26\1\132\26\26\22\0"+
    "\4\26\11\0\10\26\1\u01d1\23\26\22\0\4\26\11\0"+
    "\20\26\1\u01d2\13\26\22\0\4\26\11\0\6\26\1\u01d3"+
    "\25\26\22\0\4\26\11\0\13\26\1\u01d4\20\26\22\0"+
    "\4\26\11\0\31\26\1\u0144\2\26\22\0\4\26\11\0"+
    "\1\26\1\u0100\32\26\22\0\4\26\11\0\4\26\1\132"+
    "\27\26\22\0\4\26\11\0\25\26\1\u011d\6\26\22\0"+
    "\4\26\11\0\34\u0147\22\0\4\u0147\10\0\1\u01d5\27\u0147"+
    "\1\u01d6\4\u0147\15\0\1\u01d5\4\0\2\u0147\1\u01d6\1\u0147"+
    "\20\0\1\u01d7\17\0\1\u0149\30\0\1\u0149\1\u01d7\11\0"+
    "\17\26\1\u01d8\14\26\22\0\4\26\11\0\1\u01d9\33\26"+
    "\22\0\4\26\11\0\4\26\1\347\7\26\1\u01da\1\237"+
    "\6\26\1\u01db\7\26\22\0\4\26\11\0\1\u01dc\2\26"+
    "\1\u01dd\26\26\1\u01a9\1\26\22\0\4\26\11\0\6\26"+
    "\1\141\25\26\22\0\4\26\11\0\4\26\1\237\27\26"+
    "\22\0\4\26\11\0\1\u01de\33\26\22\0\4\26\11\0"+
    "\21\26\1\u01df\12\26\22\0\4\26\11\0\1\u011d\33\26"+
    "\22\0\4\26\2\0\4\257\1\4\1\u0153\65\257\1\u01e0"+
    "\2\0\70\u01e0\7\0\7\26\1\u01e1\24\26\22\0\4\26"+
    "\11\0\4\26\1\u01e2\27\26\22\0\4\26\11\0\3\26"+
    "\1\132\30\26\22\0\4\26\11\0\21\26\1\143\12\26"+
    "\22\0\4\26\11\0\7\26\1\u01e3\24\26\22\0\4\26"+
    "\11\0\7\26\1\u01e4\24\26\22\0\4\26\11\0\21\26"+
    "\1\u01e5\12\26\22\0\4\26\11\0\7\26\1\u0173\24\26"+
    "\22\0\4\26\11\0\7\26\1\u01e6\24\26\22\0\4\26"+
    "\11\0\6\26\1\u01e7\1\26\1\u01e8\23\26\22\0\4\26"+
    "\11\0\24\26\1\u0128\7\26\22\0\4\26\11\0\10\26"+
    "\1\u01e9\23\26\22\0\4\26\11\0\6\26\1\237\25\26"+
    "\22\0\4\26\11\0\31\26\1\u01ea\2\26\22\0\4\26"+
    "\11\0\10\26\1\u01eb\7\26\1\u01d2\13\26\22\0\4\26"+
    "\11\0\10\26\1\u01ec\23\26\22\0\4\26\11\0\17\26"+
    "\1\u01ed\14\26\22\0\4\26\11\0\21\26\1\u01ee\12\26"+
    "\22\0\4\26\11\0\1\26\1\u01ef\32\26\22\0\4\26"+
    "\11\0\4\26\1\u01f0\27\26\22\0\4\26\11\0\4\26"+
    "\1\u01f1\27\26\22\0\4\26\11\0\7\26\1\u01f2\24\26"+
    "\22\0\4\26\11\0\1\26\1\u01f3\32\26\22\0\4\26"+
    "\11\0\25\26\1\u01f4\6\26\22\0\4\26\11\0\15\26"+
    "\1\u01f5\16\26\22\0\4\26\11\0\2\26\1\u01f6\1\26"+
    "\1\u01f7\27\26\22\0\4\26\11\0\21\26\1\u01f8\12\26"+
    "\22\0\4\26\11\0\31\26\1\143\2\26\22\0\4\26"+
    "\11\0\2\26\1\237\31\26\22\0\4\26\11\0\21\26"+
    "\1\u01f9\12\26\22\0\4\26\11\0\2\26\1\u0128\31\26"+
    "\22\0\4\26\11\0\2\26\1\u01fa\31\26\22\0\4\26"+
    "\11\0\6\26\1\u01fb\25\26\22\0\4\26\11\0\7\26"+
    "\1\u0184\24\26\22\0\4\26\11\0\24\26\1\u01fc\7\26"+
    "\22\0\4\26\11\0\21\26\1\u01fd\12\26\22\0\4\26"+
    "\11\0\12\26\1\u0169\21\26\22\0\4\26\11\0\2\26"+
    "\1\u01fe\31\26\22\0\4\26\11\0\6\26\1\u01ff\25\26"+
    "\22\0\4\26\11\0\1\237\33\26\22\0\4\26\11\0"+
    "\3\26\1\306\30\26\22\0\4\26\11\0\15\26\1\u0200"+
    "\16\26\22\0\4\26\11\0\7\26\1\u0201\24\26\22\0"+
    "\4\26\11\0\4\26\1\u0202\3\26\1\132\23\26\22\0"+
    "\4\26\11\0\21\26\1\263\12\26\22\0\4\26\11\0"+
    "\2\26\1\u0203\31\26\22\0\4\26\11\0\10\26\1\u0204"+
    "\23\26\22\0\4\26\11\0\14\26\1\u0205\17\26\22\0"+
    "\4\26\11\0\6\26\1\u0206\25\26\22\0\4\26\11\0"+
    "\17\26\1\u0207\14\26\22\0\4\26\11\0\21\26\1\u0208"+
    "\12\26\22\0\4\26\11\0\17\26\1\u0209\14\26\22\0"+
    "\4\26\11\0\7\26\1\u019e\24\26\22\0\4\26\11\0"+
    "\2\26\1\u020a\7\26\1\u020b\3\26\1\u020c\4\26\1\u020d"+
    "\10\26\22\0\4\26\11\0\4\26\1\u0128\27\26\22\0"+
    "\4\26\11\0\17\26\1\u020e\14\26\22\0\4\26\11\0"+
    "\10\26\1\u020f\23\26\22\0\4\26\11\0\10\26\1\141"+
    "\23\26\22\0\4\26\11\0\21\26\1\u0210\12\26\22\0"+
    "\4\26\11\0\1\26\1\u0202\32\26\22\0\4\26\11\0"+
    "\2\26\1\237\12\26\1\u0211\16\26\22\0\4\26\11\0"+
    "\6\26\1\u0212\25\26\22\0\4\26\11\0\1\u0213\33\26"+
    "\22\0\4\26\11\0\23\26\1\132\10\26\22\0\4\26"+
    "\11\0\2\26\1\u0214\23\26\1\306\5\26\22\0\4\26"+
    "\11\0\7\26\1\u0215\24\26\22\0\4\26\11\0\12\26"+
    "\1\u0216\21\26\22\0\4\26\11\0\14\26\1\u012f\17\26"+
    "\22\0\4\26\11\0\32\26\1\143\1\26\22\0\4\26"+
    "\20\0\1\u0217\63\0\32\26\1\237\1\26\22\0\4\26"+
    "\11\0\21\26\1\u0157\12\26\22\0\4\26\11\0\10\26"+
    "\1\u017e\23\26\22\0\4\26\11\0\2\26\1\u0218\31\26"+
    "\22\0\4\26\11\0\4\26\1\u0219\27\26\22\0\4\26"+
    "\11\0\2\26\1\141\31\26\22\0\4\26\11\0\1\263"+
    "\33\26\22\0\4\26\11\0\17\26\1\u0162\14\26\22\0"+
    "\4\26\11\0\4\26\1\u021a\27\26\22\0\4\26\11\0"+
    "\2\26\1\u021b\3\26\1\u021c\25\26\22\0\4\26\11\0"+
    "\15\26\1\u021d\16\26\22\0\4\26\11\0\24\26\1\u021e"+
    "\7\26\22\0\4\26\11\0\10\26\1\u01f7\23\26\22\0"+
    "\4\26\11\0\2\26\1\u021f\31\26\22\0\4\26\11\0"+
    "\17\26\1\u0220\14\26\22\0\4\26\11\0\2\26\1\u0221"+
    "\31\26\22\0\4\26\11\0\1\26\1\u0222\32\26\22\0"+
    "\4\26\11\0\21\26\1\u0223\12\26\22\0\4\26\11\0"+
    "\25\26\1\u0224\6\26\22\0\4\26\11\0\7\26\1\u0170"+
    "\24\26\22\0\4\26\11\0\7\26\1\u0225\24\26\22\0"+
    "\4\26\11\0\6\26\1\u0226\25\26\22\0\4\26\11\0"+
    "\22\26\1\u0227\11\26\22\0\4\26\11\0\5\26\1\u0228"+
    "\26\26\22\0\4\26\11\0\6\26\1\u0229\25\26\22\0"+
    "\4\26\11\0\7\26\1\u022a\24\26\22\0\4\26\11\0"+
    "\2\26\1\u022b\31\26\22\0\4\26\11\0\6\26\1\u022c"+
    "\25\26\22\0\4\26\11\0\2\26\1\u022d\31\26\22\0"+
    "\4\26\11\0\7\26\1\u022e\24\26\22\0\4\26\11\0"+
    "\17\26\1\u022f\14\26\22\0\4\26\11\0\2\26\1\u011d"+
    "\31\26\22\0\4\26\11\0\4\26\1\u0218\27\26\22\0"+
    "\4\26\11\0\1\171\33\26\22\0\4\26\11\0\21\26"+
    "\1\u022b\12\26\22\0\4\26\11\0\15\26\1\u0145\16\26"+
    "\22\0\4\26\11\0\1\26\1\u0230\32\26\22\0\4\26"+
    "\11\0\26\26\1\306\5\26\22\0\4\26\11\0\17\26"+
    "\1\352\14\26\22\0\4\26\11\0\3\26\1\u0231\30\26"+
    "\22\0\4\26\11\0\1\u0232\33\26\22\0\4\26\11\0"+
    "\1\26\1\u011d\32\26\22\0\4\26\11\0\3\26\1\u0233"+
    "\24\26\1\u0234\3\26\22\0\4\26\11\0\3\26\1\u0235"+
    "\30\26\22\0\4\26\11\0\4\26\1\u0236\27\26\22\0"+
    "\4\26\11\0\7\26\1\u0237\24\26\22\0\4\26\11\0"+
    "\21\26\1\u0238\12\26\22\0\4\26\11\0\6\26\1\u0239"+
    "\25\26\22\0\4\26\11\0\2\26\1\253\31\26\22\0"+
    "\4\26\11\0\22\26\1\u023a\11\26\22\0\4\26\11\0"+
    "\21\26\1\u0171\12\26\22\0\4\26\11\0\11\26\1\u023b"+
    "\22\26\22\0\4\26\11\0\2\26\1\u023c\31\26\22\0"+
    "\4\26\11\0\17\26\1\u023d\14\26\22\0\4\26\11\0"+
    "\15\26\1\u023e\16\26\22\0\4\26\11\0\7\26\1\207"+
    "\24\26\22\0\4\26\40\0\1\u023f\30\0\1\u023f\12\0"+
    "\27\u0147\1\u01d6\4\u0147\22\0\2\u0147\1\u01d6\1\u0147\10\0"+
    "\1\u01d5\27\0\1\u023f\21\0\1\u01d5\6\0\1\u023f\12\0"+
    "\6\26\1\u010b\25\26\22\0\4\26\11\0\7\26\1\u0240"+
    "\24\26\22\0\4\26\11\0\6\26\1\u0241\25\26\22\0"+
    "\4\26\11\0\10\26\1\u0242\23\26\22\0\4\26\11\0"+
    "\6\26\1\u0243\25\26\22\0\4\26\11\0\7\26\1\u0244"+
    "\24\26\22\0\4\26\11\0\7\26\1\264\24\26\22\0"+
    "\4\26\11\0\6\26\1\u011d\25\26\22\0\4\26\11\0"+
    "\15\26\1\u0245\16\26\22\0\4\26\11\0\2\26\1\u0138"+
    "\31\26\22\0\4\26\11\0\3\26\1\u0246\30\26\22\0"+
    "\4\26\11\0\3\26\1\340\30\26\22\0\4\26\11\0"+
    "\2\26\1\u0247\31\26\22\0\4\26\11\0\1\u0248\33\26"+
    "\22\0\4\26\11\0\15\26\1\u0249\16\26\22\0\4\26"+
    "\11\0\6\26\1\u024a\25\26\22\0\4\26\11\0\21\26"+
    "\1\u024b\12\26\22\0\4\26\11\0\32\26\1\u024c\1\26"+
    "\22\0\4\26\11\0\1\u024d\33\26\22\0\4\26\11\0"+
    "\12\26\1\u024e\21\26\22\0\4\26\11\0\4\26\1\146"+
    "\27\26\22\0\4\26\11\0\7\26\1\u024f\24\26\22\0"+
    "\4\26\11\0\7\26\1\u0250\24\26\22\0\4\26\11\0"+
    "\13\26\1\u0128\20\26\22\0\4\26\11\0\1\26\1\264"+
    "\32\26\22\0\4\26\11\0\2\26\1\u0251\31\26\22\0"+
    "\4\26\11\0\6\26\1\u0252\25\26\22\0\4\26\11\0"+
    "\10\26\1\u022e\23\26\22\0\4\26\11\0\22\26\1\u0253"+
    "\11\26\22\0\4\26\11\0\6\26\1\u017e\25\26\22\0"+
    "\4\26\11\0\2\26\1\143\31\26\22\0\4\26\11\0"+
    "\7\26\1\174\24\26\22\0\4\26\11\0\6\26\1\107"+
    "\25\26\22\0\4\26\11\0\7\26\1\u0254\24\26\22\0"+
    "\4\26\11\0\1\u0190\33\26\22\0\4\26\11\0\10\26"+
    "\1\132\23\26\22\0\4\26\11\0\2\26\1\352\31\26"+
    "\22\0\4\26\11\0\6\26\1\u0255\25\26\22\0\4\26"+
    "\11\0\4\26\1\u0256\27\26\22\0\4\26\11\0\21\26"+
    "\1\u0257\12\26\22\0\4\26\11\0\24\26\1\u0258\7\26"+
    "\22\0\4\26\11\0\12\26\1\143\21\26\22\0\4\26"+
    "\11\0\2\26\1\u0227\31\26\22\0\4\26\11\0\2\26"+
    "\1\u0259\31\26\22\0\4\26\11\0\10\26\1\u025a\23\26"+
    "\22\0\4\26\11\0\3\26\1\u025b\30\26\22\0\4\26"+
    "\11\0\6\26\1\u01d3\3\26\1\u025c\11\26\1\u025d\7\26"+
    "\22\0\4\26\11\0\10\26\1\u025e\23\26\22\0\4\26"+
    "\11\0\4\26\1\u025f\27\26\22\0\4\26\11\0\10\26"+
    "\1\u0260\23\26\22\0\4\26\11\0\1\26\1\u0261\32\26"+
    "\22\0\4\26\11\0\24\26\1\u012f\7\26\22\0\4\26"+
    "\11\0\4\26\1\u022e\27\26\22\0\4\26\11\0\2\26"+
    "\1\u0262\31\26\22\0\4\26\11\0\6\26\1\u0263\25\26"+
    "\22\0\4\26\11\0\3\26\1\u0264\30\26\22\0\4\26"+
    "\11\0\10\26\1\u0265\23\26\22\0\4\26\11\0\10\26"+
    "\1\u0266\23\26\22\0\4\26\11\0\3\26\1\331\10\26"+
    "\1\u011d\17\26\22\0\4\26\11\0\6\26\1\263\25\26"+
    "\22\0\4\26\34\0\1\u0267\47\0\15\26\1\u011d\16\26"+
    "\22\0\4\26\11\0\2\26\1\u0268\31\26\22\0\4\26"+
    "\11\0\15\26\1\u0269\16\26\22\0\4\26\11\0\6\26"+
    "\1\u026a\25\26\22\0\4\26\11\0\15\26\1\u017e\16\26"+
    "\22\0\4\26\11\0\4\26\1\u0206\27\26\22\0\4\26"+
    "\11\0\10\26\1\u026b\23\26\22\0\4\26\11\0\6\26"+
    "\1\u026c\25\26\22\0\4\26\11\0\2\26\1\u026d\31\26"+
    "\22\0\4\26\11\0\17\26\1\237\14\26\22\0\4\26"+
    "\11\0\6\26\1\u026e\25\26\22\0\4\26\11\0\10\26"+
    "\1\137\23\26\22\0\4\26\11\0\14\26\1\306\17\26"+
    "\22\0\4\26\11\0\15\26\1\u026f\16\26\22\0\4\26"+
    "\11\0\4\26\1\347\27\26\22\0\4\26\11\0\10\26"+
    "\1\u0270\23\26\22\0\4\26\11\0\15\26\1\u013f\16\26"+
    "\22\0\4\26\11\0\22\26\1\132\11\26\22\0\4\26"+
    "\11\0\6\26\1\u0271\25\26\22\0\4\26\11\0\1\u010d"+
    "\33\26\22\0\4\26\11\0\1\26\1\276\32\26\22\0"+
    "\4\26\11\0\10\26\1\301\23\26\22\0\4\26\11\0"+
    "\10\26\1\u012e\6\26\1\u0160\14\26\22\0\4\26\11\0"+
    "\4\26\1\u0272\27\26\22\0\4\26\11\0\21\26\1\u0273"+
    "\12\26\22\0\4\26\11\0\4\26\1\u0274\27\26\22\0"+
    "\4\26\11\0\6\26\1\105\25\26\22\0\4\26\11\0"+
    "\2\26\1\u01db\31\26\22\0\4\26\11\0\3\26\1\u0275"+
    "\30\26\22\0\4\26\11\0\7\26\1\u0276\24\26\22\0"+
    "\4\26\11\0\26\26\1\u0128\5\26\22\0\4\26\11\0"+
    "\10\26\1\u0277\23\26\22\0\4\26\11\0\11\26\1\u0215"+
    "\22\26\22\0\4\26\11\0\7\26\1\u0278\24\26\22\0"+
    "\4\26\11\0\21\26\1\u0279\12\26\22\0\4\26\11\0"+
    "\12\26\1\u027a\21\26\22\0\4\26\11\0\17\26\1\u027b"+
    "\14\26\22\0\4\26\11\0\2\26\1\244\31\26\22\0"+
    "\4\26\11\0\3\26\1\346\30\26\22\0\4\26\11\0"+
    "\2\26\1\107\31\26\22\0\4\26\11\0\21\26\1\u027c"+
    "\12\26\22\0\4\26\11\0\32\26\1\u027d\1\26\22\0"+
    "\4\26\11\0\10\26\1\u027e\23\26\22\0\4\26\11\0"+
    "\21\26\1\u027f\12\26\22\0\4\26\11\0\1\26\1\143"+
    "\32\26\22\0\4\26\11\0\15\26\1\u0280\16\26\22\0"+
    "\4\26\11\0\6\26\1\u018d\1\132\24\26\22\0\4\26"+
    "\11\0\4\26\1\u0281\27\26\22\0\4\26\11\0\21\26"+
    "\1\u0282\12\26\22\0\4\26\11\0\7\26\1\u0283\24\26"+
    "\22\0\4\26\11\0\2\26\1\u0284\31\26\22\0\4\26"+
    "\11\0\6\26\1\u0285\25\26\22\0\4\26\11\0\3\26"+
    "\1\u0286\30\26\22\0\4\26\11\0\12\26\1\u0287\21\26"+
    "\22\0\4\26\11\0\6\26\1\u0288\25\26\22\0\4\26"+
    "\11\0\15\26\1\u0289\16\26\22\0\4\26\11\0\21\26"+
    "\1\u028a\12\26\22\0\4\26\11\0\15\26\1\u028b\16\26"+
    "\22\0\4\26\11\0\6\26\1\u028c\25\26\22\0\4\26"+
    "\11\0\20\26\1\u028d\13\26\22\0\4\26\11\0\15\26"+
    "\1\352\16\26\22\0\4\26\11\0\2\26\1\u028e\31\26"+
    "\22\0\4\26\11\0\21\26\1\u028f\12\26\22\0\4\26"+
    "\11\0\10\26\1\u0290\23\26\22\0\4\26\11\0\4\26"+
    "\1\u0291\27\26\22\0\4\26\11\0\32\26\1\u0157\1\26"+
    "\22\0\4\26\11\0\13\26\1\u0292\20\26\22\0\4\26"+
    "\11\0\21\26\1\u0293\12\26\22\0\4\26\11\0\7\26"+
    "\1\u0242\24\26\22\0\4\26\11\0\1\u0294\33\26\22\0"+
    "\4\26\11\0\21\26\1\u0295\12\26\22\0\4\26\11\0"+
    "\6\26\1\u0174\25\26\22\0\4\26\11\0\17\26\1\u0296"+
    "\14\26\22\0\4\26\11\0\21\26\1\u0227\12\26\22\0"+
    "\4\26\20\0\1\u0297\63\0\6\26\1\u0298\25\26\22\0"+
    "\4\26\11\0\15\26\1\331\16\26\22\0\4\26\11\0"+
    "\25\26\1\u0299\6\26\22\0\4\26\11\0\17\26\1\u023b"+
    "\14\26\22\0\4\26\11\0\25\26\1\143\4\26\1\u0266"+
    "\1\26\22\0\4\26\11\0\7\26\1\u011e\1\u0101\23\26"+
    "\22\0\4\26\11\0\24\26\1\u029a\7\26\22\0\4\26"+
    "\11\0\34\26\1\u029b\21\0\4\26\11\0\2\26\1\u029c"+
    "\31\26\22\0\4\26\11\0\1\u023b\33\26\22\0\4\26"+
    "\11\0\15\26\1\u029d\16\26\22\0\4\26\11\0\10\26"+
    "\1\153\23\26\22\0\4\26\11\0\15\26\1\u029e\16\26"+
    "\22\0\4\26\11\0\10\26\1\u029f\23\26\22\0\4\26"+
    "\11\0\23\26\1\u02a0\10\26\22\0\4\26\11\0\1\u0266"+
    "\33\26\22\0\4\26\11\0\15\26\1\u02a1\16\26\22\0"+
    "\4\26\11\0\1\26\1\u01f7\32\26\22\0\4\26\11\0"+
    "\7\26\1\u02a2\24\26\22\0\4\26\11\0\20\26\1\u02a3"+
    "\13\26\22\0\4\26\11\0\4\26\1\u02a4\27\26\22\0"+
    "\4\26\11\0\6\26\1\u02a5\25\26\22\0\4\26\11\0"+
    "\3\26\1\u02a6\30\26\22\0\4\26\11\0\6\26\1\264"+
    "\25\26\22\0\4\26\11\0\7\26\1\u02a7\24\26\22\0"+
    "\4\26\11\0\7\26\1\u011e\24\26\22\0\4\26\11\0"+
    "\12\26\1\u02a8\21\26\22\0\4\26\11\0\6\26\1\u02a9"+
    "\25\26\22\0\4\26\11\0\1\u02aa\33\26\22\0\4\26"+
    "\11\0\26\26\1\u027a\5\26\22\0\4\26\11\0\1\u011a"+
    "\33\26\22\0\4\26\11\0\11\26\1\u02ab\22\26\22\0"+
    "\4\26\11\0\1\u02ac\33\26\22\0\4\26\11\0\6\26"+
    "\1\u02ad\25\26\22\0\4\26\11\0\6\26\1\u02ae\25\26"+
    "\22\0\4\26\11\0\21\26\1\u02af\12\26\22\0\4\26"+
    "\11\0\15\26\1\u02b0\16\26\22\0\4\26\11\0\3\26"+
    "\1\u02b1\30\26\22\0\4\26\11\0\10\26\1\u02b2\23\26"+
    "\22\0\4\26\11\0\5\26\1\u02b3\26\26\22\0\4\26"+
    "\11\0\11\26\1\u02b4\22\26\22\0\4\26\11\0\1\u02b5"+
    "\72\0\30\26\1\u0190\3\26\22\0\4\26\11\0\1\26"+
    "\1\u02b6\32\26\22\0\4\26\11\0\7\26\1\u02b7\24\26"+
    "\22\0\4\26\37\0\1\u02b8\44\0\14\26\1\u015c\17\26"+
    "\22\0\4\26\11\0\7\26\1\u02b9\24\26\22\0\4\26"+
    "\11\0\24\26\1\u02ba\7\26\22\0\4\26\11\0\21\26"+
    "\1\u02a6\12\26\22\0\4\26\11\0\26\26\1\231\5\26"+
    "\22\0\4\26\11\0\26\26\1\u011a\5\26\22\0\4\26"+
    "\11\0\1\26\1\u017f\10\26\1\263\6\26\1\u02bb\12\26"+
    "\22\0\4\26\11\0\15\26\1\u0120\16\26\22\0\4\26"+
    "\11\0\15\26\1\u02bc\16\26\22\0\4\26\11\0\21\26"+
    "\1\u02bd\12\26\22\0\4\26\11\0\2\26\1\u02be\31\26"+
    "\22\0\4\26\11\0\7\26\1\u02bf\24\26\22\0\4\26"+
    "\11\0\4\26\1\u02c0\27\26\22\0\4\26\11\0\4\26"+
    "\1\u012f\27\26\22\0\4\26\11\0\10\26\1\u02c1\23\26"+
    "\22\0\4\26\11\0\3\26\1\u02c2\25\26\1\u02c3\2\26"+
    "\22\0\4\26\11\0\10\26\1\u02c4\23\26\22\0\4\26"+
    "\11\0\1\u0157\33\26\22\0\4\26\11\0\7\26\1\u02c5"+
    "\24\26\22\0\4\26\11\0\7\26\1\u01d0\24\26\22\0"+
    "\4\26\11\0\7\26\1\237\24\26\22\0\4\26\11\0"+
    "\3\26\1\u02c6\30\26\22\0\4\26\11\0\11\26\1\u02c7"+
    "\22\26\22\0\4\26\11\0\1\u02aa\17\26\1\u02c8\13\26"+
    "\22\0\4\26\11\0\21\26\1\u0284\12\26\22\0\4\26"+
    "\11\0\4\26\1\u02c9\22\26\1\u02ca\4\26\22\0\4\26"+
    "\13\0\1\u02cb\70\0\20\26\1\u02cc\13\26\22\0\4\26"+
    "\11\0\32\26\1\74\1\26\22\0\4\26\11\0\6\26"+
    "\1\u02cd\25\26\22\0\4\26\11\0\21\26\1\u022a\12\26"+
    "\22\0\4\26\11\0\10\26\1\u0101\23\26\22\0\4\26"+
    "\11\0\15\26\1\u02ce\16\26\22\0\4\26\11\0\15\26"+
    "\1\u0138\16\26\22\0\4\26\11\0\1\26\1\u02cf\32\26"+
    "\22\0\4\26\11\0\6\26\1\u02d0\25\26\22\0\4\26"+
    "\11\0\7\26\1\u02d1\24\26\22\0\4\26\11\0\15\26"+
    "\1\u02d2\16\26\22\0\4\26\11\0\21\26\1\u02d3\12\26"+
    "\22\0\4\26\11\0\4\26\1\u02d4\27\26\22\0\4\26"+
    "\11\0\6\26\1\u02d5\25\26\22\0\4\26\11\0\6\26"+
    "\1\u02d6\25\26\22\0\4\26\11\0\22\26\1\u02d7\11\26"+
    "\22\0\4\26\15\0\1\u02d8\66\0\5\26\1\u02d9\16\26"+
    "\1\u02da\7\26\22\0\4\26\11\0\24\26\1\u02db\7\26"+
    "\22\0\4\26\11\0\21\26\1\u02dc\12\26\22\0\4\26"+
    "\11\0\12\26\1\u0161\21\26\22\0\4\26\11\0\24\26"+
    "\1\u02dd\7\26\22\0\4\26\11\0\11\26\1\u02de\22\26"+
    "\22\0\4\26\11\0\21\26\1\u0138\12\26\22\0\4\26"+
    "\11\0\6\26\1\u02df\25\26\22\0\4\26\11\0\1\26"+
    "\1\u02e0\32\26\22\0\4\26\11\0\12\26\1\u0138\21\26"+
    "\22\0\4\26\11\0\15\26\1\u02e1\16\26\22\0\4\26"+
    "\11\0\22\26\1\u02e2\11\26\22\0\4\26\12\0\1\u02e3"+
    "\71\0\4\26\1\u02e4\27\26\22\0\4\26\11\0\6\26"+
    "\1\u02e5\25\26\22\0\4\26\11\0\7\26\1\u02e6\24\26"+
    "\22\0\4\26\11\0\6\26\1\u02e7\25\26\22\0\4\26"+
    "\11\0\6\26\1\u02e8\25\26\22\0\4\26\11\0\32\26"+
    "\1\u02e9\1\26\22\0\4\26\11\0\24\26\1\u02ea\7\26"+
    "\22\0\4\26\11\0\2\26\1\340\31\26\22\0\4\26"+
    "\11\0\3\26\1\u015c\30\26\22\0\4\26\11\0\3\26"+
    "\1\u02eb\30\26\22\0\4\26\43\0\1\u02b5\40\0\1\26"+
    "\1\347\32\26\22\0\4\26\11\0\15\26\1\u0162\16\26"+
    "\22\0\4\26\11\0\3\26\1\u0233\30\26\22\0\4\26"+
    "\11\0\22\26\1\u02ec\11\26\22\0\4\26\11\0\17\26"+
    "\1\u02ed\14\26\22\0\4\26\11\0\5\26\1\u02ee\26\26"+
    "\22\0\4\26\11\0\7\26\1\u02ca\24\26\22\0\4\26"+
    "\11\0\7\26\1\u02ef\24\26\22\0\4\26\11\0\6\26"+
    "\1\u02f0\25\26\22\0\4\26\11\0\10\26\1\u02f1\23\26"+
    "\22\0\4\26\11\0\2\26\1\u02f2\31\26\22\0\4\26"+
    "\11\0\21\26\1\u02ca\12\26\22\0\4\26\11\0\7\26"+
    "\1\u01e2\24\26\22\0\4\26\11\0\2\26\1\u02f3\31\26"+
    "\22\0\4\26\11\0\10\26\1\u02f4\23\26\22\0\4\26"+
    "\11\0\6\26\1\u02f5\25\26\22\0\4\26\11\0\3\26"+
    "\1\u02f6\30\26\22\0\4\26\11\0\21\26\1\u02f7\12\26"+
    "\22\0\4\26\11\0\7\26\1\u02f8\24\26\22\0\4\26"+
    "\11\0\11\26\1\u02f9\22\26\22\0\4\26\11\0\12\26"+
    "\1\u02fa\6\26\1\u02bd\12\26\22\0\4\26\11\0\7\26"+
    "\1\u02fb\24\26\22\0\4\26\11\0\21\26\1\u02fc\12\26"+
    "\22\0\4\26\11\0\10\26\1\u02fd\23\26\22\0\4\26"+
    "\11\0\6\26\1\u02fe\25\26\22\0\4\26\11\0\17\26"+
    "\1\u02ff\14\26\22\0\4\26\11\0\3\26\1\u02f8\30\26"+
    "\22\0\4\26\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[43247];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\1\1\1\11\36\1\1\11"+
    "\2\1\1\11\4\1\3\11\175\1\2\11\1\0\243\1"+
    "\1\0\110\1\1\0\70\1\1\0\1\1\1\0\77\1"+
    "\1\0\117\1\1\0\57\1\1\0\3\1\1\0\31\1"+
    "\1\11\2\1\1\0\22\1\1\0\14\1\1\0\12\1"+
    "\1\0\34\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[767];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;
    public int lin;
    public int col;
    public int len;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2634) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 28: break;
          case 2: 
            { /*Ignore*/
            } 
            // fall through
          case 29: break;
          case 3: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return OperadorAritmetico;
            } 
            // fall through
          case 30: break;
          case 4: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 31: break;
          case 5: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return IdentificadorError;
            } 
            // fall through
          case 32: break;
          case 6: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Entero;
            } 
            // fall through
          case 33: break;
          case 7: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return OperadorAgrupador;
            } 
            // fall through
          case 34: break;
          case 8: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return OperadorOtro;
            } 
            // fall through
          case 35: break;
          case 9: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return OperadorLogico;
            } 
            // fall through
          case 36: break;
          case 10: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Punto;
            } 
            // fall through
          case 37: break;
          case 11: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Coma;
            } 
            // fall through
          case 38: break;
          case 12: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return PYC;
            } 
            // fall through
          case 39: break;
          case 13: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return VarcharError;
            } 
            // fall through
          case 40: break;
          case 14: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return MalComentario;
            } 
            // fall through
          case 41: break;
          case 15: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Reservada;
            } 
            // fall through
          case 42: break;
          case 16: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Flotante;
            } 
            // fall through
          case 43: break;
          case 17: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Varchar;
            } 
            // fall through
          case 44: break;
          case 18: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoEntero;
            } 
            // fall through
          case 45: break;
          case 19: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoOtro;
            } 
            // fall through
          case 46: break;
          case 20: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoBit;
            } 
            // fall through
          case 47: break;
          case 21: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return FlotanteError;
            } 
            // fall through
          case 48: break;
          case 22: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoChars;
            } 
            // fall through
          case 49: break;
          case 23: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoDecimalAprox;
            } 
            // fall through
          case 50: break;
          case 24: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoFechaHora;
            } 
            // fall through
          case 51: break;
          case 25: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoBin;
            } 
            // fall through
          case 52: break;
          case 26: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoUnicode;
            } 
            // fall through
          case 53: break;
          case 27: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDatoDecimalExacto;
            } 
            // fall through
          case 54: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
