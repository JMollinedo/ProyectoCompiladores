/* The following code was generated by JFlex 1.7.0 */

package lexgen;
import static lexgen.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/jmoll/Documents/URL/201902/Compis/ProyectoCompiladores/LexGen/src/lexgen/lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\66\1\3\1\1\22\0\1\43\1\46\1\0"+
    "\1\61\1\0\1\45\1\50\1\65\1\55\1\56\1\5\1\44\1\45"+
    "\1\6\1\52\1\4\2\64\1\27\7\64\1\0\1\45\1\46\1\47"+
    "\1\46\1\0\1\45\1\14\1\7\1\17\1\24\1\25\1\30\1\11"+
    "\1\20\1\10\1\42\1\40\1\31\1\26\1\12\1\23\1\41\1\35"+
    "\1\15\1\22\1\13\1\21\1\33\1\34\1\32\1\16\1\37\1\53"+
    "\1\0\1\54\1\0\1\36\1\0\32\62\1\57\1\51\1\60\7\0"+
    "\1\66\44\0\1\62\12\0\1\62\4\0\1\62\5\0\27\62\1\0"+
    "\37\62\1\0\u01ca\62\4\0\14\62\16\0\5\62\7\0\1\62\1\0"+
    "\1\62\201\0\5\62\1\0\2\62\2\0\4\62\1\0\1\62\6\0"+
    "\1\62\1\0\3\62\1\0\1\62\1\0\24\62\1\0\123\62\1\0"+
    "\213\62\10\0\246\62\1\0\46\62\2\0\1\62\7\0\47\62\110\0"+
    "\33\62\5\0\3\62\55\0\53\62\25\0\12\63\4\0\2\62\1\0"+
    "\143\62\1\0\1\62\17\0\2\62\7\0\2\62\12\63\3\62\2\0"+
    "\1\62\20\0\1\62\1\0\36\62\35\0\131\62\13\0\1\62\16\0"+
    "\12\63\41\62\11\0\2\62\4\0\1\62\5\0\26\62\4\0\1\62"+
    "\11\0\1\62\3\0\1\62\27\0\31\62\107\0\25\62\1\0\10\62"+
    "\106\0\66\62\3\0\1\62\22\0\1\62\7\0\12\62\4\0\12\63"+
    "\1\0\20\62\4\0\10\62\2\0\2\62\2\0\26\62\1\0\7\62"+
    "\1\0\1\62\3\0\4\62\3\0\1\62\20\0\1\62\15\0\2\62"+
    "\1\0\3\62\4\0\12\63\2\62\23\0\6\62\4\0\2\62\2\0"+
    "\26\62\1\0\7\62\1\0\2\62\1\0\2\62\1\0\2\62\37\0"+
    "\4\62\1\0\1\62\7\0\12\63\2\0\3\62\20\0\11\62\1\0"+
    "\3\62\1\0\26\62\1\0\7\62\1\0\2\62\1\0\5\62\3\0"+
    "\1\62\22\0\1\62\17\0\2\62\4\0\12\63\11\0\1\62\13\0"+
    "\10\62\2\0\2\62\2\0\26\62\1\0\7\62\1\0\2\62\1\0"+
    "\5\62\3\0\1\62\36\0\2\62\1\0\3\62\4\0\12\63\1\0"+
    "\1\62\21\0\1\62\1\0\6\62\3\0\3\62\1\0\4\62\3\0"+
    "\2\62\1\0\1\62\1\0\2\62\3\0\2\62\3\0\3\62\3\0"+
    "\14\62\26\0\1\62\25\0\12\63\25\0\10\62\1\0\3\62\1\0"+
    "\27\62\1\0\20\62\3\0\1\62\32\0\3\62\5\0\2\62\4\0"+
    "\12\63\20\0\1\62\4\0\10\62\1\0\3\62\1\0\27\62\1\0"+
    "\12\62\1\0\5\62\3\0\1\62\40\0\1\62\1\0\2\62\4\0"+
    "\12\63\1\0\2\62\22\0\10\62\1\0\3\62\1\0\51\62\2\0"+
    "\1\62\20\0\1\62\5\0\3\62\10\0\3\62\4\0\12\63\12\0"+
    "\6\62\5\0\22\62\3\0\30\62\1\0\11\62\1\0\1\62\2\0"+
    "\7\62\37\0\12\63\21\0\60\62\1\0\2\62\14\0\7\62\11\0"+
    "\12\63\47\0\2\62\1\0\1\62\2\0\2\62\1\0\1\62\2\0"+
    "\1\62\6\0\4\62\1\0\7\62\1\0\3\62\1\0\1\62\1\0"+
    "\1\62\2\0\2\62\1\0\4\62\1\0\2\62\11\0\1\62\2\0"+
    "\5\62\1\0\1\62\11\0\12\63\2\0\4\62\40\0\1\62\37\0"+
    "\12\63\26\0\10\62\1\0\44\62\33\0\5\62\163\0\53\62\24\0"+
    "\1\62\12\63\6\0\6\62\4\0\4\62\3\0\1\62\3\0\2\62"+
    "\7\0\3\62\4\0\15\62\14\0\1\62\1\0\12\63\6\0\46\62"+
    "\1\0\1\62\5\0\1\62\2\0\53\62\1\0\u014d\62\1\0\4\62"+
    "\2\0\7\62\1\0\1\62\1\0\4\62\2\0\51\62\1\0\4\62"+
    "\2\0\41\62\1\0\4\62\2\0\7\62\1\0\1\62\1\0\4\62"+
    "\2\0\17\62\1\0\71\62\1\0\4\62\2\0\103\62\45\0\20\62"+
    "\20\0\126\62\2\0\6\62\3\0\u026c\62\2\0\21\62\1\0\32\62"+
    "\5\0\113\62\6\0\10\62\7\0\15\62\1\0\4\62\16\0\22\62"+
    "\16\0\22\62\16\0\15\62\1\0\3\62\17\0\64\62\43\0\1\62"+
    "\4\0\1\62\3\0\12\63\46\0\12\63\6\0\130\62\10\0\5\62"+
    "\2\0\42\62\1\0\1\62\5\0\106\62\12\0\37\62\47\0\12\63"+
    "\36\62\2\0\5\62\13\0\54\62\4\0\32\62\6\0\12\63\46\0"+
    "\27\62\11\0\65\62\53\0\12\63\6\0\12\63\15\0\1\62\135\0"+
    "\57\62\21\0\7\62\4\0\12\63\51\0\36\62\15\0\2\62\12\63"+
    "\54\62\32\0\44\62\34\0\12\63\3\0\3\62\12\63\44\62\2\0"+
    "\11\62\140\0\4\62\1\0\4\62\3\0\2\62\11\0\300\62\100\0"+
    "\u0116\62\2\0\6\62\2\0\46\62\2\0\6\62\2\0\10\62\1\0"+
    "\1\62\1\0\1\62\1\0\1\62\1\0\37\62\2\0\65\62\1\0"+
    "\7\62\1\0\1\62\3\0\3\62\1\0\7\62\3\0\4\62\2\0"+
    "\6\62\4\0\15\62\5\0\3\62\1\0\7\62\53\0\1\66\1\66"+
    "\107\0\1\62\15\0\1\62\20\0\15\62\145\0\1\62\4\0\1\62"+
    "\2\0\12\62\1\0\1\62\3\0\5\62\6\0\1\62\1\0\1\62"+
    "\1\0\1\62\1\0\4\62\1\0\13\62\2\0\4\62\5\0\5\62"+
    "\4\0\1\62\64\0\2\62\u0a7b\0\57\62\1\0\57\62\1\0\205\62"+
    "\6\0\4\62\3\0\2\62\14\0\46\62\1\0\1\62\5\0\1\62"+
    "\2\0\70\62\7\0\1\62\20\0\27\62\11\0\7\62\1\0\7\62"+
    "\1\0\7\62\1\0\7\62\1\0\7\62\1\0\7\62\1\0\7\62"+
    "\1\0\7\62\120\0\1\62\u01d5\0\2\62\52\0\5\62\5\0\2\62"+
    "\4\0\126\62\6\0\3\62\1\0\132\62\1\0\4\62\5\0\51\62"+
    "\3\0\136\62\21\0\33\62\65\0\20\62\u0200\0\u19b6\62\112\0\u51d6\62"+
    "\52\0\u048d\62\103\0\56\62\2\0\u010d\62\3\0\20\62\12\63\2\62"+
    "\24\0\57\62\20\0\37\62\2\0\106\62\61\0\11\62\2\0\147\62"+
    "\2\0\44\62\1\0\10\62\77\0\13\62\1\0\3\62\1\0\4\62"+
    "\1\0\27\62\35\0\64\62\16\0\62\62\34\0\12\63\30\0\6\62"+
    "\3\0\1\62\1\0\1\62\2\0\12\63\34\62\12\0\27\62\31\0"+
    "\35\62\7\0\57\62\34\0\1\62\12\63\6\0\5\62\1\0\12\62"+
    "\12\63\5\62\1\0\51\62\27\0\3\62\1\0\10\62\4\0\12\63"+
    "\6\0\27\62\3\0\1\62\3\0\62\62\1\0\1\62\3\0\2\62"+
    "\2\0\5\62\2\0\1\62\1\0\1\62\30\0\3\62\2\0\13\62"+
    "\7\0\3\62\14\0\6\62\2\0\6\62\2\0\6\62\11\0\7\62"+
    "\1\0\7\62\1\0\53\62\1\0\12\62\12\0\163\62\15\0\12\63"+
    "\6\0\u2ba4\62\14\0\27\62\4\0\61\62\u2104\0\u016e\62\2\0\152\62"+
    "\46\0\7\62\14\0\5\62\5\0\1\62\1\0\12\62\1\0\15\62"+
    "\1\0\5\62\1\0\1\62\1\0\2\62\1\0\2\62\1\0\154\62"+
    "\41\0\u016b\62\22\0\100\62\2\0\66\62\50\0\14\62\164\0\5\62"+
    "\1\0\207\62\23\0\12\63\7\0\32\62\6\0\32\62\13\0\131\62"+
    "\3\0\6\62\2\0\6\62\2\0\6\62\2\0\3\62\43\0\14\62"+
    "\1\0\32\62\1\0\23\62\1\0\2\62\1\0\17\62\2\0\16\62"+
    "\42\0\173\62\u0185\0\35\62\3\0\61\62\57\0\40\62\20\0\21\62"+
    "\1\0\10\62\6\0\46\62\12\0\36\62\2\0\44\62\4\0\10\62"+
    "\60\0\236\62\2\0\12\63\6\0\44\62\4\0\44\62\4\0\50\62"+
    "\10\0\64\62\234\0\u0137\62\11\0\26\62\12\0\10\62\230\0\6\62"+
    "\2\0\1\62\1\0\54\62\1\0\2\62\3\0\1\62\2\0\27\62"+
    "\12\0\27\62\11\0\37\62\101\0\23\62\1\0\2\62\12\0\26\62"+
    "\12\0\32\62\106\0\70\62\6\0\2\62\100\0\1\62\17\0\4\62"+
    "\1\0\3\62\1\0\33\62\54\0\35\62\3\0\35\62\43\0\10\62"+
    "\1\0\34\62\33\0\66\62\12\0\26\62\12\0\23\62\15\0\22\62"+
    "\156\0\111\62\67\0\63\62\15\0\63\62\u0310\0\65\62\56\0\12\63"+
    "\23\0\55\62\40\0\31\62\7\0\12\63\11\0\44\62\17\0\12\63"+
    "\20\0\43\62\3\0\1\62\14\0\60\62\16\0\4\62\13\0\12\63"+
    "\1\62\1\0\1\62\43\0\22\62\1\0\31\62\124\0\7\62\1\0"+
    "\1\62\1\0\4\62\1\0\17\62\1\0\12\62\7\0\57\62\21\0"+
    "\12\63\13\0\10\62\2\0\2\62\2\0\26\62\1\0\7\62\1\0"+
    "\2\62\1\0\5\62\3\0\1\62\22\0\1\62\14\0\5\62\236\0"+
    "\65\62\22\0\4\62\5\0\12\63\46\0\60\62\24\0\2\62\1\0"+
    "\1\62\10\0\12\63\246\0\57\62\51\0\4\62\44\0\60\62\24\0"+
    "\1\62\13\0\12\63\46\0\53\62\25\0\12\63\66\0\32\62\26\0"+
    "\12\63\u0166\0\100\62\12\63\25\0\1\62\u01c0\0\71\62\u0107\0\11\62"+
    "\1\0\45\62\21\0\1\62\17\0\12\63\30\0\36\62\u0370\0\u039a\62"+
    "\346\0\304\62\u0abc\0\u042f\62\u0fd1\0\u0247\62\u21b9\0\u0239\62\7\0\37\62"+
    "\1\0\12\63\146\0\36\62\22\0\60\62\20\0\4\62\14\0\12\63"+
    "\11\0\25\62\5\0\23\62\u0370\0\105\62\13\0\1\62\102\0\15\62"+
    "\100\0\1\62\37\0\u17ed\62\23\0\u02f3\62\u250d\0\2\62\u0bfe\0\153\62"+
    "\5\0\15\62\3\0\11\62\7\0\12\62\u1766\0\125\62\1\0\107\62"+
    "\1\0\2\62\2\0\1\62\2\0\2\62\2\0\4\62\1\0\14\62"+
    "\1\0\1\62\1\0\7\62\1\0\101\62\1\0\4\62\2\0\10\62"+
    "\1\0\7\62\1\0\34\62\1\0\4\62\1\0\5\62\1\0\1\62"+
    "\3\0\7\62\1\0\u0154\62\2\0\31\62\1\0\31\62\1\0\37\62"+
    "\1\0\31\62\1\0\37\62\1\0\31\62\1\0\37\62\1\0\31\62"+
    "\1\0\37\62\1\0\31\62\1\0\10\62\2\0\62\63\u1000\0\305\62"+
    "\73\0\104\62\14\0\12\63\u04a6\0\4\62\1\0\33\62\1\0\2\62"+
    "\1\0\1\62\2\0\1\62\1\0\12\62\1\0\4\62\1\0\1\62"+
    "\1\0\1\62\6\0\1\62\4\0\1\62\1\0\1\62\1\0\1\62"+
    "\1\0\3\62\1\0\2\62\1\0\1\62\2\0\1\62\1\0\1\62"+
    "\1\0\1\62\1\0\1\62\1\0\1\62\1\0\2\62\1\0\1\62"+
    "\2\0\4\62\1\0\7\62\1\0\4\62\1\0\4\62\1\0\1\62"+
    "\1\0\12\62\1\0\21\62\5\0\3\62\1\0\5\62\1\0\21\62"+
    "\u1144\0\ua6d7\62\51\0\u1035\62\13\0\336\62\2\0\u1682\62\u295e\0\u021e\62"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05f0\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\3\3\20\4\1\5\6\4\1\6"+
    "\4\4\1\3\2\1\4\3\1\1\1\7\1\2\3\4"+
    "\1\10\3\4\2\10\3\4\1\10\6\4\1\10\7\4"+
    "\1\10\6\4\1\10\41\4\2\10\2\4\1\10\22\4"+
    "\1\11\36\4\1\0\1\12\1\0\1\7\2\4\1\13"+
    "\10\4\1\13\44\4\1\10\42\4\1\10\7\4\1\10"+
    "\5\4\1\10\3\4\1\10\12\4\1\10\3\4\1\10"+
    "\6\4\1\10\3\4\2\14\1\11\6\4\1\10\10\4"+
    "\1\13\20\4\1\0\1\2\24\4\1\10\3\4\1\13"+
    "\3\4\1\10\4\4\1\13\12\4\1\10\12\4\1\13"+
    "\44\4\2\10\4\4\1\13\3\4\1\10\2\4\1\0"+
    "\7\4\1\0\1\11\1\0\10\4\1\10\2\4\1\10"+
    "\3\4\1\10\4\4\1\7\17\4\1\10\23\4\1\10"+
    "\51\4\1\0\1\11\5\4\1\10\43\4\1\10\22\4"+
    "\1\0\20\4\1\10\2\4\2\10\11\4\1\10\10\4"+
    "\1\0\1\4\1\0\1\4\1\10\6\4\1\10\15\4"+
    "\1\13\1\10\1\0\3\4\1\10\13\4\1\0\14\4"+
    "\1\0\12\4\1\0\1\10\27\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[743];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\67\0\156\0\67\0\245\0\67\0\334\0\u0113"+
    "\0\u014a\0\u0181\0\u01b8\0\u01ef\0\u0226\0\u025d\0\u0294\0\u02cb"+
    "\0\u0302\0\u0339\0\u0370\0\u03a7\0\u03de\0\u0415\0\u044c\0\u0483"+
    "\0\u04ba\0\u04f1\0\u0528\0\u055f\0\u0596\0\u05cd\0\u0604\0\u063b"+
    "\0\u0672\0\u06a9\0\u06e0\0\u0717\0\u074e\0\u0785\0\u07bc\0\u07f3"+
    "\0\u082a\0\u0861\0\u0898\0\u08cf\0\u0906\0\u093d\0\u0974\0\u09ab"+
    "\0\u05cd\0\u09e2\0\u0a19\0\u0a50\0\u0a87\0\u0abe\0\u0af5\0\u0b2c"+
    "\0\u0b63\0\u0b9a\0\u0bd1\0\u0c08\0\u0c3f\0\u0c76\0\u0cad\0\u0ce4"+
    "\0\u0d1b\0\u0d52\0\u0d89\0\u0dc0\0\u0df7\0\u0e2e\0\u0e65\0\u0e9c"+
    "\0\u0ed3\0\u0f0a\0\u0f41\0\u0f78\0\u0faf\0\u0fe6\0\u101d\0\u1054"+
    "\0\u108b\0\u10c2\0\u10f9\0\u1130\0\u1167\0\u119e\0\u11d5\0\u120c"+
    "\0\u1243\0\u127a\0\u12b1\0\u12e8\0\u131f\0\u1356\0\u138d\0\u13c4"+
    "\0\u13fb\0\u1432\0\u1469\0\u14a0\0\u14d7\0\u150e\0\u1545\0\u157c"+
    "\0\u15b3\0\u15ea\0\u1621\0\u1658\0\u168f\0\u16c6\0\u16fd\0\u1734"+
    "\0\u176b\0\u17a2\0\u17d9\0\u1810\0\u1847\0\u187e\0\u18b5\0\u18ec"+
    "\0\u1923\0\u195a\0\u1991\0\u19c8\0\u19ff\0\u1a36\0\u1a6d\0\u1aa4"+
    "\0\u1adb\0\u1b12\0\u1b49\0\u1b80\0\u1bb7\0\u1bee\0\u1c25\0\u1c5c"+
    "\0\u1c93\0\u1cca\0\u1d01\0\u1d38\0\u1d6f\0\u1da6\0\u1ddd\0\u1e14"+
    "\0\u1e4b\0\u1e82\0\u1eb9\0\u1ef0\0\u1f27\0\u1f5e\0\u1f95\0\u1fcc"+
    "\0\u2003\0\u203a\0\u2071\0\u20a8\0\u20df\0\u2116\0\u214d\0\u2184"+
    "\0\u21bb\0\u21f2\0\u2229\0\u2260\0\u2297\0\u22ce\0\u2305\0\u0898"+
    "\0\67\0\u233c\0\u2373\0\u23aa\0\u23e1\0\u2418\0\u244f\0\u2486"+
    "\0\u24bd\0\u24f4\0\u252b\0\u2562\0\u2599\0\u25d0\0\u2607\0\u263e"+
    "\0\u2675\0\u26ac\0\u26e3\0\u271a\0\u2751\0\u2788\0\u27bf\0\u27f6"+
    "\0\u282d\0\u2864\0\u289b\0\u28d2\0\u2909\0\u2940\0\u2977\0\u29ae"+
    "\0\u29e5\0\u2a1c\0\u2a53\0\u2a8a\0\u2ac1\0\u2af8\0\u2b2f\0\u2b66"+
    "\0\u2b9d\0\u2bd4\0\u2c0b\0\u2c42\0\u2c79\0\u2cb0\0\u2ce7\0\u2d1e"+
    "\0\u2d55\0\u2d8c\0\u2dc3\0\u2dfa\0\u2e31\0\u2e68\0\u2e9f\0\u2ed6"+
    "\0\u2f0d\0\u2f44\0\u2f7b\0\u2fb2\0\u2fe9\0\u3020\0\u3057\0\u308e"+
    "\0\u30c5\0\u30fc\0\u3133\0\u316a\0\u31a1\0\u31d8\0\u320f\0\u3246"+
    "\0\u327d\0\u32b4\0\u32eb\0\u3322\0\u3359\0\u3390\0\u33c7\0\u33fe"+
    "\0\u3435\0\u346c\0\u34a3\0\u34da\0\u3511\0\u3548\0\u30c5\0\u357f"+
    "\0\u35b6\0\u35ed\0\u3624\0\u365b\0\u3692\0\u36c9\0\u3700\0\u3737"+
    "\0\u376e\0\u37a5\0\u37dc\0\u3813\0\u384a\0\u3881\0\u38b8\0\u38ef"+
    "\0\u3926\0\u395d\0\u3994\0\u39cb\0\u3a02\0\u3a39\0\u3a70\0\u0ed3"+
    "\0\u3aa7\0\u3ade\0\u3b15\0\u3b4c\0\u3b83\0\u3bba\0\u3bf1\0\u3c28"+
    "\0\u3c5f\0\u3c96\0\u3ccd\0\u3d04\0\u3d3b\0\u3d72\0\u3da9\0\u3de0"+
    "\0\u3e17\0\u3e4e\0\u3e85\0\u3ebc\0\u3ef3\0\u3f2a\0\u3f61\0\u3f98"+
    "\0\u3fcf\0\u4006\0\u403d\0\u4074\0\u40ab\0\u40e2\0\u4119\0\u4150"+
    "\0\u4187\0\u41be\0\u41f5\0\u422c\0\u05cd\0\u4263\0\u429a\0\u42d1"+
    "\0\u4308\0\u433f\0\u4376\0\u43ad\0\u43e4\0\u441b\0\u4452\0\u4489"+
    "\0\u44c0\0\u44f7\0\u452e\0\u4565\0\u459c\0\u45d3\0\u460a\0\u4641"+
    "\0\u4678\0\u46af\0\u46e6\0\u471d\0\u4754\0\u478b\0\u47c2\0\u47f9"+
    "\0\u4830\0\u4867\0\u489e\0\u48d5\0\u490c\0\u4943\0\u497a\0\u49b1"+
    "\0\u49e8\0\u4a1f\0\u4a56\0\u4a8d\0\u4ac4\0\u4afb\0\u4b32\0\u4b69"+
    "\0\u4ba0\0\u4bd7\0\u4c0e\0\u4c45\0\u4c7c\0\u4cb3\0\u4cea\0\u4d21"+
    "\0\u4d58\0\u4d8f\0\u4dc6\0\u4dfd\0\u4e34\0\u4e6b\0\u4ea2\0\u4ed9"+
    "\0\u4f10\0\u4f47\0\u4f7e\0\u4fb5\0\u4fec\0\u5023\0\u505a\0\u5091"+
    "\0\u50c8\0\u50ff\0\u5136\0\u516d\0\u51a4\0\u51db\0\u5212\0\u5249"+
    "\0\u5280\0\u52b7\0\u52ee\0\u5325\0\u535c\0\u5393\0\u53ca\0\u5401"+
    "\0\u5438\0\u3da9\0\u546f\0\u54a6\0\u54dd\0\u5514\0\u554b\0\u5582"+
    "\0\u55b9\0\u55f0\0\u5627\0\u565e\0\u5695\0\u56cc\0\u5703\0\u573a"+
    "\0\u5771\0\u57a8\0\u57df\0\u5816\0\u584d\0\u5884\0\u58bb\0\u58f2"+
    "\0\u5929\0\u5960\0\u5997\0\u59ce\0\u5a05\0\u5a3c\0\u5a73\0\u5aaa"+
    "\0\u5ae1\0\u5b18\0\u5b4f\0\u5b86\0\u5bbd\0\u5bf4\0\u5c2b\0\u5c62"+
    "\0\u5c99\0\u5cd0\0\u5d07\0\u5d3e\0\u5d75\0\u5dac\0\u5de3\0\u5e1a"+
    "\0\u5e51\0\u5e88\0\u5ebf\0\u5ef6\0\u5f2d\0\u5f64\0\u5f9b\0\u5fd2"+
    "\0\u6009\0\u6040\0\u6077\0\u60ae\0\u60e5\0\u611c\0\u6153\0\u618a"+
    "\0\u61c1\0\u61f8\0\u622f\0\u6266\0\u629d\0\u62d4\0\u630b\0\u460a"+
    "\0\u6342\0\u6379\0\u63b0\0\u63e7\0\u641e\0\u6455\0\u648c\0\u64c3"+
    "\0\u64fa\0\u6531\0\u6568\0\u659f\0\u65d6\0\u660d\0\u6644\0\u667b"+
    "\0\u66b2\0\u66e9\0\u6720\0\u6757\0\u678e\0\u67c5\0\u67fc\0\u6833"+
    "\0\u686a\0\u68a1\0\u68d8\0\u690f\0\u6946\0\u697d\0\u69b4\0\u69eb"+
    "\0\u6a22\0\u6a59\0\u6a90\0\u6ac7\0\u6afe\0\u6b35\0\u6b6c\0\u6ba3"+
    "\0\u6bda\0\u6c11\0\u6c48\0\u6c7f\0\u6cb6\0\u6ced\0\u6d24\0\u6d5b"+
    "\0\u6d92\0\u6dc9\0\u6e00\0\u6e37\0\u6e6e\0\u6ea5\0\u6edc\0\u6f13"+
    "\0\u6f4a\0\u6f81\0\u6fb8\0\u6fef\0\u2418\0\u7026\0\u705d\0\u7094"+
    "\0\u70cb\0\u7102\0\u7139\0\u7170\0\u71a7\0\u71de\0\u7215\0\u724c"+
    "\0\u2dfa\0\u7283\0\u72ba\0\u72f1\0\u7328\0\u735f\0\u5e51\0\u7396"+
    "\0\u73cd\0\u7404\0\u743b\0\u7472\0\u49e8\0\u74a9\0\u74e0\0\u7517"+
    "\0\u754e\0\u7585\0\u75bc\0\u75f3\0\u762a\0\u7661\0\u7698\0\u76cf"+
    "\0\u7706\0\u773d\0\u7774\0\u77ab\0\u77e2\0\u7819\0\u7850\0\u7887"+
    "\0\u78be\0\u78f5\0\u792c\0\u7963\0\u799a\0\u79d1\0\u7a08\0\u7a3f"+
    "\0\u7a76\0\u7aad\0\u7ae4\0\u7b1b\0\u7b52\0\u7b89\0\u7bc0\0\u7bf7"+
    "\0\u7c2e\0\u7c65\0\u7c9c\0\u7cd3\0\u7d0a\0\u7d41\0\u7d78\0\u7daf"+
    "\0\u7de6\0\u7e1d\0\u7e54\0\u7e8b\0\u7ec2\0\u7ef9\0\u7f30\0\u7f67"+
    "\0\u7f9e\0\u7fd5\0\u800c\0\u8043\0\u807a\0\u80b1\0\u80e8\0\u811f"+
    "\0\u8156\0\u818d\0\u17a2\0\u81c4\0\u81fb\0\u8232\0\u8269\0\u82a0"+
    "\0\u82d7\0\u830e\0\u8345\0\u837c\0\u4187\0\u83b3\0\u83ea\0\u8421"+
    "\0\u2d55\0\u8458\0\u848f\0\u84c6\0\u84fd\0\u8534\0\u856b\0\u85a2"+
    "\0\u3700\0\u85d9\0\u7c9c\0\u8610\0\u8647\0\u867e\0\u86b5\0\u86ec"+
    "\0\u8723\0\u875a\0\u8791\0\u87c8\0\u87ff\0\u8836\0\u886d\0\u88a4"+
    "\0\u88db\0\u8912\0\u8949\0\u8980\0\u89b7\0\u89ee\0\u8a25\0\u8a5c"+
    "\0\u8a93\0\u8aca\0\u8b01\0\u8b38\0\u8b6f\0\u8ba6\0\u8bdd\0\u8c14"+
    "\0\u8c4b\0\u8c82\0\u8cb9\0\u8cf0\0\u8d27\0\67\0\u8d5e\0\u8d95"+
    "\0\u8dcc\0\u8e03\0\u2418\0\u8e3a\0\u8e71\0\u8ea8\0\u8edf\0\u8f16"+
    "\0\u8f4d\0\u8f84\0\u8fbb\0\u8ff2\0\u9029\0\u9060\0\u9097\0\u90ce"+
    "\0\u9105\0\u913c\0\u9173\0\u91aa\0\u91e1\0\u9218\0\u924f\0\u9286"+
    "\0\u92bd\0\u92f4\0\u932b\0\u9362\0\u9399\0\u93d0\0\u9407\0\u943e"+
    "\0\u9475\0\u94ac\0\u94e3\0\u951a\0\u9551\0\u9588\0\u95bf\0\u95f6"+
    "\0\u962d\0\u9664\0\u969b\0\u96d2\0\u9709\0\u9740\0\u9777\0\u97ae"+
    "\0\u97e5\0\u981c\0\u9853\0\u988a\0\u98c1\0\u98f8\0\u992f\0\u8a25"+
    "\0\u9966\0\u999d\0\u99d4\0\u9a0b\0\u9a42\0\u9a79\0\u9ab0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[743];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\4\2\6\2\44\1\45\1\46\1\6"+
    "\1\47\1\6\1\50\1\6\1\51\1\6\1\52\1\36"+
    "\1\37\1\30\1\53\72\0\1\4\71\0\1\54\67\0"+
    "\1\55\67\0\1\36\1\56\3\36\1\57\1\60\1\61"+
    "\2\36\1\62\1\36\1\63\1\36\1\64\15\36\17\0"+
    "\3\36\11\0\3\36\1\65\7\36\1\66\1\36\1\67"+
    "\1\36\1\70\1\36\1\61\12\36\17\0\3\36\11\0"+
    "\6\36\1\71\5\36\1\72\1\36\1\73\3\36\1\74"+
    "\11\36\17\0\3\36\11\0\4\36\1\75\1\76\2\36"+
    "\1\77\1\36\1\100\1\36\1\101\1\36\1\102\5\36"+
    "\1\103\7\36\17\0\3\36\11\0\1\36\1\104\3\36"+
    "\1\105\1\106\2\36\1\107\1\36\1\110\1\111\1\36"+
    "\1\112\15\36\17\0\3\36\11\0\1\113\2\36\1\114"+
    "\1\61\1\36\1\115\1\36\1\116\1\36\1\117\1\120"+
    "\1\36\1\121\4\36\1\122\1\36\1\123\7\36\17\0"+
    "\3\36\11\0\1\36\1\124\3\36\1\125\4\36\1\126"+
    "\1\36\1\127\1\36\1\130\15\36\17\0\3\36\11\0"+
    "\16\36\1\131\15\36\17\0\3\36\11\0\5\36\1\132"+
    "\1\133\2\36\1\134\1\135\1\36\1\136\5\36\1\137"+
    "\11\36\17\0\3\36\11\0\1\36\1\140\3\36\1\141"+
    "\6\36\1\142\17\36\17\0\3\36\11\0\3\36\1\143"+
    "\7\36\1\144\16\36\1\145\1\36\17\0\3\36\11\0"+
    "\1\36\1\146\2\36\1\147\1\150\1\36\1\151\1\152"+
    "\1\153\1\154\1\36\1\155\1\36\1\156\1\157\6\36"+
    "\1\160\3\36\1\161\1\36\17\0\3\36\11\0\3\36"+
    "\1\162\2\36\1\163\1\36\1\164\1\36\1\165\6\36"+
    "\1\166\2\36\1\167\5\36\1\170\1\36\17\0\3\36"+
    "\11\0\1\171\1\172\3\36\1\173\1\174\3\36\1\175"+
    "\1\36\1\176\1\36\1\177\15\36\17\0\3\36\11\0"+
    "\3\36\1\200\2\36\1\201\4\36\1\202\6\36\1\203"+
    "\1\204\10\36\17\0\3\36\11\0\1\36\1\205\3\36"+
    "\1\206\6\36\1\207\1\36\1\210\15\36\17\0\3\36"+
    "\11\0\20\37\1\30\13\37\7\0\1\211\7\0\2\37"+
    "\1\30\11\0\1\36\1\212\3\36\1\213\1\214\3\36"+
    "\1\215\1\36\1\216\1\36\1\217\3\36\1\220\11\36"+
    "\17\0\3\36\11\0\1\36\1\221\3\36\1\222\6\36"+
    "\1\223\1\36\1\224\15\36\17\0\3\36\11\0\17\36"+
    "\1\225\14\36\17\0\3\36\11\0\1\36\1\226\3\36"+
    "\1\227\26\36\17\0\3\36\11\0\1\36\1\230\3\36"+
    "\1\231\1\232\2\36\1\233\2\36\1\234\17\36\17\0"+
    "\3\36\11\0\34\36\17\0\3\36\11\0\34\37\17\0"+
    "\3\37\11\0\14\36\1\235\17\36\17\0\3\36\11\0"+
    "\1\36\1\236\14\36\1\237\15\36\17\0\3\36\11\0"+
    "\1\36\1\240\3\36\1\241\1\242\3\36\1\243\1\36"+
    "\1\244\1\36\1\245\3\36\1\246\11\36\17\0\3\36"+
    "\11\0\14\36\1\247\17\36\17\0\3\36\51\0\1\6"+
    "\67\0\1\6\67\0\1\6\71\0\1\6\70\0\1\6"+
    "\70\0\1\6\67\0\1\6\5\0\1\250\2\0\62\250"+
    "\1\251\1\250\1\54\2\252\2\54\1\253\61\54\1\55"+
    "\1\3\1\4\64\55\7\0\2\36\1\254\1\255\1\256"+
    "\27\36\17\0\3\36\11\0\10\36\1\257\23\36\17\0"+
    "\3\36\11\0\14\36\1\260\1\36\1\261\15\36\17\0"+
    "\3\36\11\0\22\36\1\262\11\36\17\0\3\36\11\0"+
    "\4\36\1\263\27\36\17\0\3\36\11\0\2\36\1\247"+
    "\1\36\1\264\27\36\17\0\3\36\11\0\1\36\1\265"+
    "\1\36\1\266\1\267\3\36\1\270\2\36\1\271\1\36"+
    "\1\272\14\36\1\273\1\36\17\0\3\36\11\0\14\36"+
    "\1\274\17\36\17\0\3\36\11\0\16\36\1\275\15\36"+
    "\17\0\3\36\11\0\5\36\1\276\11\36\1\277\14\36"+
    "\17\0\3\36\11\0\5\36\1\300\6\36\1\301\17\36"+
    "\17\0\3\36\11\0\4\36\1\302\27\36\17\0\3\36"+
    "\11\0\4\36\1\61\27\36\17\0\3\36\11\0\14\36"+
    "\1\303\17\36\17\0\3\36\11\0\16\36\1\304\15\36"+
    "\17\0\3\36\11\0\4\36\1\305\12\36\1\306\14\36"+
    "\17\0\3\36\11\0\11\36\1\307\22\36\17\0\3\36"+
    "\11\0\17\36\1\310\2\36\1\311\11\36\17\0\3\36"+
    "\11\0\3\36\1\312\1\61\3\36\1\313\23\36\17\0"+
    "\3\36\11\0\23\36\1\73\10\36\17\0\3\36\11\0"+
    "\5\36\1\314\26\36\17\0\3\36\11\0\3\36\1\315"+
    "\13\36\1\316\14\36\17\0\3\36\11\0\1\317\33\36"+
    "\17\0\3\36\11\0\1\36\1\320\3\36\1\321\1\36"+
    "\1\322\2\36\1\323\21\36\17\0\3\36\11\0\16\36"+
    "\1\324\15\36\17\0\3\36\11\0\16\36\1\325\15\36"+
    "\17\0\3\36\11\0\32\36\1\61\1\36\17\0\3\36"+
    "\11\0\17\36\1\326\3\36\1\327\10\36\17\0\3\36"+
    "\11\0\13\36\1\330\20\36\17\0\3\36\11\0\7\36"+
    "\1\61\5\36\1\61\16\36\17\0\3\36\11\0\16\36"+
    "\1\61\15\36\17\0\3\36\11\0\4\36\1\331\27\36"+
    "\17\0\3\36\11\0\4\36\1\332\27\36\17\0\3\36"+
    "\11\0\10\36\1\61\2\36\1\333\20\36\17\0\3\36"+
    "\11\0\5\36\1\61\7\36\1\61\16\36\17\0\3\36"+
    "\11\0\4\36\1\266\15\36\1\334\11\36\17\0\3\36"+
    "\11\0\2\36\1\61\31\36\17\0\3\36\11\0\2\36"+
    "\1\335\31\36\17\0\3\36\11\0\1\36\1\336\32\36"+
    "\17\0\3\36\11\0\22\36\1\115\11\36\17\0\3\36"+
    "\11\0\22\36\1\337\2\36\1\340\6\36\17\0\3\36"+
    "\11\0\4\36\1\341\1\342\2\36\1\343\2\36\1\344"+
    "\5\36\1\345\1\346\1\36\1\347\5\36\1\350\1\36"+
    "\17\0\3\36\11\0\5\36\1\351\26\36\17\0\3\36"+
    "\11\0\4\36\1\352\6\36\1\353\20\36\17\0\3\36"+
    "\11\0\14\36\1\354\1\36\1\355\15\36\17\0\3\36"+
    "\11\0\5\36\1\356\10\36\1\357\15\36\17\0\3\36"+
    "\11\0\6\36\1\360\25\36\17\0\3\36\11\0\3\36"+
    "\1\361\1\36\1\362\1\363\3\36\1\300\4\36\1\364"+
    "\2\36\1\365\11\36\17\0\3\36\11\0\12\36\1\366"+
    "\1\36\1\203\17\36\17\0\3\36\11\0\16\36\1\367"+
    "\15\36\17\0\3\36\11\0\24\36\1\370\7\36\17\0"+
    "\3\36\11\0\12\36\1\351\7\36\1\371\11\36\17\0"+
    "\3\36\11\0\1\36\1\372\27\36\1\373\1\374\1\36"+
    "\17\0\3\36\11\0\1\36\1\375\3\36\1\376\10\36"+
    "\1\377\15\36\17\0\3\36\11\0\15\36\1\u0100\14\36"+
    "\1\266\1\36\17\0\3\36\11\0\30\36\1\115\3\36"+
    "\17\0\3\36\11\0\5\36\1\u0101\26\36\17\0\3\36"+
    "\11\0\24\36\1\115\7\36\17\0\3\36\11\0\13\36"+
    "\1\u0102\20\36\17\0\3\36\11\0\6\36\1\u0103\2\36"+
    "\1\u0104\22\36\17\0\3\36\11\0\12\36\1\u0105\21\36"+
    "\17\0\3\36\11\0\1\u0106\16\36\1\61\14\36\17\0"+
    "\3\36\11\0\17\36\1\115\14\36\17\0\3\36\11\0"+
    "\4\36\1\u0107\3\36\1\u0108\2\36\1\u0109\3\36\1\u010a"+
    "\2\36\1\u010b\11\36\17\0\3\36\11\0\5\36\1\u010c"+
    "\26\36\17\0\3\36\11\0\22\36\1\u010d\11\36\17\0"+
    "\3\36\11\0\5\36\1\u010e\26\36\17\0\3\36\11\0"+
    "\22\36\1\237\11\36\17\0\3\36\11\0\15\36\1\266"+
    "\16\36\17\0\3\36\11\0\4\36\1\u010f\27\36\17\0"+
    "\3\36\11\0\4\36\1\u0110\27\36\17\0\3\36\11\0"+
    "\21\36\1\u0111\12\36\17\0\3\36\11\0\16\36\1\u0112"+
    "\15\36\17\0\3\36\11\0\4\36\1\331\11\36\1\u0113"+
    "\15\36\17\0\3\36\11\0\10\36\1\u0114\23\36\17\0"+
    "\3\36\11\0\5\36\1\u0115\5\36\1\u0116\20\36\17\0"+
    "\3\36\11\0\4\36\1\u0117\2\36\1\61\24\36\17\0"+
    "\3\36\11\0\14\36\1\u0118\17\36\17\0\3\36\11\0"+
    "\17\36\1\u0118\14\36\17\0\3\36\11\0\12\36\1\u0119"+
    "\4\36\1\u011a\14\36\17\0\3\36\11\0\3\36\1\237"+
    "\1\36\1\u011b\2\36\1\u011c\2\36\1\u011d\5\36\1\u011e"+
    "\1\u011f\11\36\17\0\3\36\11\0\15\36\1\u0120\16\36"+
    "\17\0\3\36\11\0\6\36\1\u0121\25\36\17\0\3\36"+
    "\11\0\10\36\1\u0122\23\36\17\0\3\36\11\0\13\36"+
    "\1\115\20\36\17\0\3\36\11\0\1\36\1\u0123\2\36"+
    "\1\u0124\3\36\1\u0125\5\36\1\u0126\15\36\17\0\3\36"+
    "\11\0\3\36\1\u0127\30\36\17\0\3\36\11\0\4\36"+
    "\1\u0128\16\36\1\61\10\36\17\0\3\36\11\0\3\36"+
    "\1\u0129\11\36\1\u012a\16\36\17\0\3\36\11\0\6\36"+
    "\1\376\25\36\17\0\3\36\11\0\16\u012b\1\u012c\1\u012b"+
    "\1\u012d\6\u012b\1\0\4\u012b\17\0\1\u012b\1\0\1\u012d"+
    "\11\0\6\36\1\u012e\13\36\1\u012f\11\36\17\0\3\36"+
    "\11\0\22\36\1\203\11\36\17\0\3\36\11\0\14\36"+
    "\1\u0130\1\36\1\u0131\15\36\17\0\3\36\11\0\3\36"+
    "\1\u0132\16\36\1\u0133\11\36\17\0\3\36\11\0\6\36"+
    "\1\u0134\3\36\1\u0135\21\36\17\0\3\36\11\0\4\36"+
    "\1\u0128\27\36\17\0\3\36\11\0\14\36\1\u0136\17\36"+
    "\17\0\3\36\11\0\3\36\1\u0137\25\36\1\115\2\36"+
    "\17\0\3\36\11\0\3\36\1\u0138\7\36\1\73\20\36"+
    "\17\0\3\36\11\0\5\36\1\u0139\2\36\1\u013a\14\36"+
    "\1\266\6\36\17\0\3\36\11\0\5\36\1\u013b\13\36"+
    "\1\73\2\36\1\u013c\7\36\17\0\3\36\11\0\22\36"+
    "\1\u013d\11\36\17\0\3\36\11\0\16\36\1\u013e\15\36"+
    "\17\0\3\36\11\0\6\36\1\u013f\13\36\1\u0140\11\36"+
    "\17\0\3\36\11\0\4\36\1\u0141\27\36\17\0\3\36"+
    "\11\0\1\36\1\u0142\32\36\17\0\3\36\11\0\1\36"+
    "\1\u0143\32\36\17\0\3\36\11\0\1\36\1\126\14\36"+
    "\1\u0144\15\36\17\0\3\36\11\0\6\36\1\262\25\36"+
    "\17\0\3\36\11\0\3\36\1\115\30\36\17\0\3\36"+
    "\11\0\22\36\1\u0133\11\36\17\0\3\36\11\0\7\36"+
    "\1\61\24\36\17\0\3\36\11\0\24\36\1\u0145\7\36"+
    "\17\0\3\36\11\0\6\36\1\u0146\4\36\1\u0147\1\36"+
    "\1\61\16\36\17\0\3\36\11\0\1\36\1\u0148\12\36"+
    "\1\u0149\1\36\1\u014a\15\36\17\0\3\36\11\0\1\u014b"+
    "\33\36\17\0\3\36\11\0\13\36\1\u014c\20\36\17\0"+
    "\3\36\11\0\6\36\1\u014d\25\36\17\0\3\36\11\0"+
    "\5\36\1\324\26\36\17\0\3\36\11\0\1\36\1\324"+
    "\32\36\17\0\3\36\2\0\5\252\1\u014e\61\252\1\54"+
    "\2\252\1\54\1\u014f\1\253\61\54\7\0\1\36\1\u0150"+
    "\32\36\17\0\3\36\11\0\5\36\1\u0151\26\36\17\0"+
    "\3\36\11\0\27\36\1\u0152\4\36\17\0\3\36\11\0"+
    "\31\36\1\301\2\36\17\0\3\36\11\0\25\36\1\203"+
    "\6\36\17\0\3\36\11\0\5\36\1\262\26\36\17\0"+
    "\3\36\11\0\31\36\1\61\2\36\17\0\3\36\11\0"+
    "\11\36\1\61\22\36\17\0\3\36\11\0\25\36\1\u0153"+
    "\6\36\17\0\3\36\11\0\4\36\1\u0154\27\36\17\0"+
    "\3\36\11\0\16\36\1\351\15\36\17\0\3\36\11\0"+
    "\14\36\1\61\1\36\1\u0155\15\36\17\0\3\36\11\0"+
    "\22\36\1\u0156\11\36\17\0\3\36\11\0\16\36\1\u0157"+
    "\15\36\17\0\3\36\11\0\1\36\1\u0158\14\36\1\u0159"+
    "\15\36\17\0\3\36\11\0\12\36\1\73\21\36\17\0"+
    "\3\36\11\0\22\36\1\u015a\11\36\17\0\3\36\11\0"+
    "\3\36\1\u015b\30\36\17\0\3\36\11\0\2\36\1\u015c"+
    "\31\36\17\0\3\36\11\0\16\36\1\u015d\15\36\17\0"+
    "\3\36\11\0\3\36\1\73\30\36\17\0\3\36\11\0"+
    "\12\36\1\u0118\21\36\17\0\3\36\11\0\14\36\1\61"+
    "\17\36\17\0\3\36\11\0\1\u013a\33\36\17\0\3\36"+
    "\11\0\23\36\1\u015e\10\36\17\0\3\36\11\0\1\36"+
    "\1\u015f\10\36\1\u0160\21\36\17\0\3\36\11\0\16\36"+
    "\1\u0161\15\36\17\0\3\36\11\0\5\36\1\u0162\26\36"+
    "\17\0\3\36\11\0\16\36\1\u0163\15\36\17\0\3\36"+
    "\11\0\22\36\1\u0164\11\36\17\0\3\36\11\0\10\36"+
    "\1\u0165\5\36\1\61\15\36\17\0\3\36\11\0\11\36"+
    "\1\u0166\22\36\17\0\3\36\11\0\6\36\1\u0167\25\36"+
    "\17\0\3\36\11\0\7\36\1\254\24\36\17\0\3\36"+
    "\11\0\16\36\1\u0168\15\36\17\0\3\36\11\0\22\36"+
    "\1\u0169\11\36\17\0\3\36\11\0\2\36\1\u016a\14\36"+
    "\1\61\14\36\17\0\3\36\11\0\1\36\1\u016b\1\36"+
    "\1\u016c\30\36\17\0\3\36\11\0\27\36\1\u016d\4\36"+
    "\17\0\3\36\11\0\3\36\1\u016e\12\36\1\61\15\36"+
    "\17\0\3\36\11\0\3\36\1\61\30\36\17\0\3\36"+
    "\11\0\26\36\1\u016f\5\36\17\0\3\36\11\0\32\36"+
    "\1\u0170\1\36\17\0\3\36\11\0\4\36\1\u0171\27\36"+
    "\17\0\3\36\11\0\14\36\1\u0172\17\36\17\0\3\36"+
    "\11\0\1\36\1\u0173\32\36\17\0\3\36\11\0\11\36"+
    "\1\u0174\22\36\17\0\3\36\11\0\16\36\1\u0175\15\36"+
    "\17\0\3\36\11\0\14\36\1\u016e\17\36\17\0\3\36"+
    "\11\0\11\36\1\73\22\36\17\0\3\36\11\0\13\36"+
    "\1\u0176\20\36\17\0\3\36\11\0\22\36\1\u0177\11\36"+
    "\17\0\3\36\11\0\2\36\1\u0178\5\36\1\u0179\2\36"+
    "\1\61\10\36\1\u017a\7\36\17\0\3\36\11\0\12\36"+
    "\1\u017b\21\36\17\0\3\36\11\0\15\36\1\u017c\4\36"+
    "\1\u013d\11\36\17\0\3\36\11\0\14\36\1\u017d\17\36"+
    "\17\0\3\36\11\0\4\36\1\u017e\27\36\17\0\3\36"+
    "\11\0\16\36\1\u017f\15\36\17\0\3\36\11\0\5\36"+
    "\1\u0180\26\36\17\0\3\36\11\0\14\36\1\u0181\1\36"+
    "\1\u0182\15\36\17\0\3\36\11\0\22\36\1\u0183\11\36"+
    "\17\0\3\36\11\0\6\36\1\61\25\36\17\0\3\36"+
    "\11\0\5\36\1\u0184\26\36\17\0\3\36\11\0\4\36"+
    "\1\61\3\36\1\u0185\5\36\1\61\15\36\17\0\3\36"+
    "\11\0\13\36\1\u0161\20\36\17\0\3\36\11\0\5\36"+
    "\1\u0186\26\36\17\0\3\36\11\0\6\36\1\u0187\25\36"+
    "\17\0\3\36\11\0\10\36\1\u0188\23\36\17\0\3\36"+
    "\11\0\6\36\1\u0189\4\36\1\u018a\20\36\17\0\3\36"+
    "\11\0\3\36\1\u018b\1\u018c\6\36\1\u018d\10\36\1\u018e"+
    "\7\36\17\0\3\36\11\0\22\36\1\u018f\11\36\17\0"+
    "\3\36\11\0\6\36\1\u0190\25\36\17\0\3\36\11\0"+
    "\17\36\1\u0191\12\36\1\u0192\1\36\17\0\3\36\11\0"+
    "\12\36\1\u0193\7\36\1\u0194\11\36\17\0\3\36\11\0"+
    "\13\36\1\u0195\20\36\17\0\3\36\11\0\6\36\1\u0196"+
    "\25\36\17\0\3\36\11\0\1\36\1\375\32\36\17\0"+
    "\3\36\11\0\15\36\1\u0197\16\36\17\0\3\36\11\0"+
    "\14\36\1\324\11\36\1\u0198\5\36\17\0\3\36\11\0"+
    "\3\36\1\u0199\30\36\17\0\3\36\11\0\1\36\1\240"+
    "\32\36\17\0\3\36\11\0\3\36\1\123\30\36\17\0"+
    "\3\36\11\0\2\36\1\115\31\36\17\0\3\36\11\0"+
    "\5\36\1\u0143\26\36\17\0\3\36\11\0\4\36\1\u019a"+
    "\27\36\17\0\3\36\11\0\4\36\1\u019b\27\36\17\0"+
    "\3\36\11\0\14\36\1\236\17\36\17\0\3\36\11\0"+
    "\16\36\1\u019c\15\36\17\0\3\36\11\0\4\36\1\u019d"+
    "\27\36\17\0\3\36\11\0\13\36\1\u019e\20\36\17\0"+
    "\3\36\11\0\12\36\1\u019f\21\36\17\0\3\36\11\0"+
    "\4\36\1\331\5\36\1\u01a0\1\36\1\u0135\17\36\17\0"+
    "\3\36\11\0\13\36\1\u01a1\20\36\17\0\3\36\11\0"+
    "\5\36\1\u01a2\26\36\17\0\3\36\11\0\16\36\1\u01a3"+
    "\15\36\17\0\3\36\11\0\22\36\1\u01a4\11\36\17\0"+
    "\3\36\11\0\10\36\1\u01a5\2\36\1\u01a6\2\36\1\u01a7"+
    "\6\36\1\u01a8\1\36\1\u01a9\4\36\17\0\3\36\11\0"+
    "\10\36\1\115\23\36\17\0\3\36\11\0\16\36\1\u01aa"+
    "\15\36\17\0\3\36\11\0\16\36\1\351\13\36\1\273"+
    "\1\36\17\0\3\36\11\0\13\36\1\u01ab\20\36\17\0"+
    "\3\36\11\0\6\36\1\u01ac\25\36\17\0\3\36\11\0"+
    "\3\36\1\u01ad\30\36\17\0\3\36\11\0\10\36\1\61"+
    "\23\36\17\0\3\36\11\0\2\36\1\u01ae\31\36\17\0"+
    "\3\36\11\0\4\36\1\u01af\3\36\1\u01b0\20\36\1\61"+
    "\2\36\17\0\3\36\11\0\5\36\1\u01b1\10\36\1\u01b2"+
    "\15\36\17\0\3\36\11\0\1\126\33\36\17\0\3\36"+
    "\11\0\5\36\1\247\26\36\17\0\3\36\11\0\22\36"+
    "\1\u01b3\11\36\17\0\3\36\11\0\1\36\1\u01b4\20\36"+
    "\1\u01b5\11\36\17\0\3\36\11\0\10\36\1\u01b6\23\36"+
    "\17\0\3\36\11\0\5\36\1\u01b7\10\36\1\u01b8\15\36"+
    "\17\0\3\36\11\0\16\36\1\u0186\15\36\17\0\3\36"+
    "\10\0\1\u01b9\34\36\17\0\3\36\11\0\22\36\1\u01ba"+
    "\11\36\17\0\3\36\11\0\5\36\1\u01bb\26\36\17\0"+
    "\3\36\11\0\4\36\1\61\6\36\1\u01bc\20\36\17\0"+
    "\3\36\11\0\6\36\1\u01bd\7\36\1\u01be\15\36\17\0"+
    "\3\36\11\0\16\36\1\u01bf\15\36\17\0\3\36\11\0"+
    "\10\36\1\u0127\23\36\17\0\3\36\11\0\12\36\1\u0186"+
    "\21\36\17\0\3\36\11\0\10\36\1\263\23\36\17\0"+
    "\3\36\11\0\4\36\1\263\11\36\1\u01c0\15\36\17\0"+
    "\3\36\11\0\12\36\1\126\21\36\17\0\3\36\11\0"+
    "\34\u012b\17\0\3\u012b\10\0\1\u01c1\20\u012b\1\u01c2\13\u012b"+
    "\1\0\1\u01c1\15\0\2\u012b\1\u01c2\27\0\1\u01c3\1\0"+
    "\1\u012d\34\0\1\u012d\11\0\13\36\1\73\20\36\17\0"+
    "\3\36\11\0\16\36\1\61\3\36\1\u01c4\11\36\17\0"+
    "\3\36\11\0\17\36\1\61\14\36\17\0\3\36\11\0"+
    "\16\36\1\u01c5\15\36\17\0\3\36\11\0\10\36\1\116"+
    "\23\36\17\0\3\36\11\0\22\36\1\61\11\36\17\0"+
    "\3\36\11\0\4\36\1\u01c6\11\36\1\u01c7\15\36\17\0"+
    "\3\36\11\0\3\36\1\u0139\30\36\17\0\3\36\11\0"+
    "\5\36\1\u015e\26\36\17\0\3\36\11\0\16\36\1\u01c8"+
    "\15\36\17\0\3\36\11\0\2\36\1\u01c9\31\36\17\0"+
    "\3\36\11\0\15\36\1\61\16\36\17\0\3\36\11\0"+
    "\5\36\1\u0133\26\36\17\0\3\36\11\0\15\36\1\370"+
    "\16\36\17\0\3\36\11\0\16\36\1\u0133\15\36\17\0"+
    "\3\36\11\0\25\36\1\61\6\36\17\0\3\36\11\0"+
    "\1\u01ca\6\36\1\370\1\77\23\36\17\0\3\36\11\0"+
    "\12\36\1\u01cb\21\36\17\0\3\36\11\0\11\36\1\u01cc"+
    "\22\36\17\0\3\36\11\0\4\36\1\u01cd\27\36\17\0"+
    "\3\36\11\0\4\36\1\u01ce\27\36\17\0\3\36\11\0"+
    "\3\36\1\u01cf\2\36\1\115\25\36\17\0\3\36\11\0"+
    "\14\36\1\73\17\36\17\0\3\36\11\0\4\36\1\u01d0"+
    "\27\36\17\0\3\36\11\0\10\36\1\u013a\23\36\17\0"+
    "\3\36\11\0\3\36\1\73\10\36\1\351\2\36\1\u01d1"+
    "\4\36\1\u01d2\7\36\17\0\3\36\11\0\10\36\1\u01d3"+
    "\23\36\17\0\3\36\11\0\10\36\1\u01d4\2\36\1\u01d5"+
    "\16\36\1\u01b5\1\36\17\0\3\36\11\0\22\36\1\u01d6"+
    "\11\36\17\0\3\36\11\0\1\36\1\116\32\36\17\0"+
    "\3\36\11\0\10\36\1\u01d7\23\36\17\0\3\36\2\0"+
    "\4\252\1\4\1\u014e\61\252\1\u01d8\2\0\64\u01d8\7\0"+
    "\3\36\1\u015e\30\36\17\0\3\36\11\0\6\36\1\u01c0"+
    "\25\36\17\0\3\36\11\0\22\36\1\u01d9\11\36\17\0"+
    "\3\36\11\0\16\36\1\107\15\36\17\0\3\36\11\0"+
    "\1\36\1\u01da\32\36\17\0\3\36\11\0\2\36\1\266"+
    "\3\36\1\u01db\25\36\17\0\3\36\11\0\12\36\1\u01dc"+
    "\21\36\17\0\3\36\11\0\3\36\1\u01dd\2\36\1\73"+
    "\25\36\17\0\3\36\11\0\10\36\1\u01de\23\36\17\0"+
    "\3\36\11\0\23\36\1\61\10\36\17\0\3\36\11\0"+
    "\5\36\1\116\26\36\17\0\3\36\11\0\4\36\1\u01df"+
    "\27\36\17\0\3\36\11\0\16\36\1\u013d\15\36\17\0"+
    "\3\36\11\0\15\36\1\u01e0\16\36\17\0\3\36\11\0"+
    "\4\36\1\u013d\27\36\17\0\3\36\11\0\14\36\1\u01e1"+
    "\17\36\17\0\3\36\11\0\6\36\1\u013a\25\36\17\0"+
    "\3\36\11\0\13\36\1\61\20\36\17\0\3\36\11\0"+
    "\6\36\1\u013d\25\36\17\0\3\36\11\0\6\36\1\u01e2"+
    "\25\36\17\0\3\36\11\0\1\36\1\u01e3\32\36\17\0"+
    "\3\36\11\0\22\36\1\u01e4\11\36\17\0\3\36\11\0"+
    "\16\36\1\u01e5\15\36\17\0\3\36\11\0\10\36\1\77"+
    "\23\36\17\0\3\36\11\0\13\36\1\u01e6\14\36\1\u01e7"+
    "\3\36\17\0\3\36\11\0\16\36\1\u01e8\15\36\17\0"+
    "\3\36\11\0\2\36\1\266\31\36\17\0\3\36\11\0"+
    "\22\36\1\370\11\36\17\0\3\36\11\0\13\36\1\u01e9"+
    "\20\36\17\0\3\36\11\0\10\36\1\u01ea\23\36\17\0"+
    "\3\36\11\0\10\36\1\355\23\36\17\0\3\36\11\0"+
    "\12\36\1\u013a\21\36\17\0\3\36\11\0\14\36\1\u01eb"+
    "\17\36\17\0\3\36\11\0\13\36\1\u01ec\20\36\17\0"+
    "\3\36\11\0\22\36\1\u0192\11\36\17\0\3\36\11\0"+
    "\14\36\1\324\17\36\17\0\3\36\11\0\14\36\1\u01ed"+
    "\17\36\17\0\3\36\11\0\6\36\1\116\25\36\17\0"+
    "\3\36\11\0\16\36\1\u01a7\15\36\17\0\3\36\11\0"+
    "\1\u01ee\33\36\17\0\3\36\11\0\12\36\1\u01ef\21\36"+
    "\17\0\3\36\11\0\14\36\1\u01f0\17\36\17\0\3\36"+
    "\11\0\16\36\1\u01f1\15\36\17\0\3\36\11\0\6\36"+
    "\1\324\25\36\17\0\3\36\11\0\4\36\1\u01f2\27\36"+
    "\17\0\3\36\11\0\3\36\1\u01f3\30\36\17\0\3\36"+
    "\11\0\6\36\1\u01f4\5\36\1\u01f5\17\36\17\0\3\36"+
    "\11\0\6\36\1\u01f6\25\36\17\0\3\36\11\0\4\36"+
    "\1\u01f7\27\36\17\0\3\36\11\0\31\36\1\115\2\36"+
    "\17\0\3\36\11\0\6\36\1\73\25\36\17\0\3\36"+
    "\11\0\1\36\1\u01f8\32\36\17\0\3\36\11\0\22\36"+
    "\1\u01f9\11\36\17\0\3\36\11\0\5\36\1\u01fa\26\36"+
    "\17\0\3\36\11\0\4\36\1\115\27\36\17\0\3\36"+
    "\11\0\5\36\1\u01fb\21\36\1\u0152\4\36\17\0\3\36"+
    "\11\0\31\36\1\u01fc\2\36\17\0\3\36\11\0\16\36"+
    "\1\u01fd\15\36\17\0\3\36\11\0\14\36\1\u0162\17\36"+
    "\17\0\3\36\11\0\16\36\1\u01fe\15\36\17\0\3\36"+
    "\11\0\1\36\1\u01ff\3\36\1\u0200\26\36\17\0\3\36"+
    "\11\0\4\36\1\u0201\27\36\17\0\3\36\11\0\16\36"+
    "\1\u0182\15\36\17\0\3\36\11\0\16\36\1\u0202\15\36"+
    "\17\0\3\36\11\0\16\36\1\u0203\15\36\17\0\3\36"+
    "\11\0\1\36\1\73\32\36\17\0\3\36\11\0\17\36"+
    "\1\324\14\36\17\0\3\36\11\0\5\36\1\u0204\26\36"+
    "\17\0\3\36\11\0\4\36\1\u0205\27\36\17\0\3\36"+
    "\11\0\5\36\1\u0206\26\36\17\0\3\36\11\0\22\36"+
    "\1\u0207\11\36\17\0\3\36\11\0\12\36\1\u0208\21\36"+
    "\17\0\3\36\11\0\14\36\1\u0209\17\36\17\0\3\36"+
    "\11\0\1\36\1\u020a\32\36\17\0\3\36\11\0\16\36"+
    "\1\u020b\15\36\17\0\3\36\11\0\17\36\1\u020c\14\36"+
    "\17\0\3\36\11\0\15\36\1\u0199\16\36\17\0\3\36"+
    "\11\0\4\36\1\u020d\27\36\17\0\3\36\11\0\13\36"+
    "\1\266\20\36\17\0\3\36\11\0\6\36\1\u020e\25\36"+
    "\17\0\3\36\11\0\1\36\1\u020f\32\36\17\0\3\36"+
    "\11\0\3\36\1\u0210\30\36\17\0\3\36\11\0\10\36"+
    "\1\73\23\36\17\0\3\36\11\0\22\36\1\u0211\11\36"+
    "\17\0\3\36\11\0\5\36\1\61\6\36\1\u01dc\17\36"+
    "\17\0\3\36\11\0\4\36\1\355\27\36\17\0\3\36"+
    "\11\0\6\36\1\u0212\25\36\17\0\3\36\11\0\5\36"+
    "\1\u0213\26\36\17\0\3\36\11\0\24\36\1\u0214\7\36"+
    "\17\0\3\36\11\0\4\36\1\u0215\27\36\17\0\3\36"+
    "\11\0\16\36\1\u01bc\15\36\17\0\3\36\11\0\22\36"+
    "\1\u0216\11\36\17\0\3\36\11\0\6\36\1\u0217\6\36"+
    "\1\u0218\5\36\1\u0219\2\36\1\u021a\5\36\17\0\3\36"+
    "\11\0\3\36\1\u021b\30\36\17\0\3\36\11\0\1\36"+
    "\1\u021c\4\36\1\u021d\25\36\17\0\3\36\11\0\14\36"+
    "\1\u021e\17\36\17\0\3\36\11\0\1\u021f\33\36\17\0"+
    "\3\36\11\0\4\36\1\u0220\27\36\17\0\3\36\11\0"+
    "\22\36\1\u0221\11\36\17\0\3\36\11\0\17\36\1\u0222"+
    "\14\36\17\0\3\36\11\0\5\36\1\u01f5\26\36\17\0"+
    "\3\36\11\0\6\36\1\u0223\25\36\17\0\3\36\11\0"+
    "\12\36\1\u0224\21\36\17\0\3\36\11\0\6\36\1\u0225"+
    "\25\36\17\0\3\36\27\0\1\u0226\50\0\24\36\1\u0133"+
    "\7\36\17\0\3\36\11\0\32\36\1\115\1\36\17\0"+
    "\3\36\11\0\4\36\1\u0161\27\36\17\0\3\36\11\0"+
    "\5\36\1\u01a3\26\36\17\0\3\36\11\0\6\36\1\u01e1"+
    "\25\36\17\0\3\36\11\0\32\36\1\73\1\36\17\0"+
    "\3\36\11\0\7\36\1\u013d\24\36\17\0\3\36\31\0"+
    "\1\u0227\34\0\1\u0227\11\0\20\u012b\1\u01c2\13\u012b\17\0"+
    "\2\u012b\1\u01c2\10\0\1\u01c1\20\0\1\u0227\14\0\1\u01c1"+
    "\17\0\1\u0227\11\0\21\36\1\u0228\12\36\17\0\3\36"+
    "\11\0\4\36\1\u0229\27\36\17\0\3\36\11\0\6\36"+
    "\1\246\25\36\17\0\3\36\11\0\1\36\1\u022a\32\36"+
    "\17\0\3\36\11\0\3\36\1\302\30\36\17\0\3\36"+
    "\11\0\12\36\1\u022b\21\36\17\0\3\36\11\0\1\36"+
    "\1\u022c\32\36\17\0\3\36\11\0\16\36\1\u022d\15\36"+
    "\17\0\3\36\11\0\1\36\1\u022e\32\36\17\0\3\36"+
    "\11\0\21\36\1\u022f\12\36\17\0\3\36\11\0\16\36"+
    "\1\u017c\15\36\17\0\3\36\11\0\16\36\1\u0230\15\36"+
    "\17\0\3\36\11\0\1\36\1\u013a\32\36\17\0\3\36"+
    "\11\0\5\36\1\u0231\26\36\17\0\3\36\11\0\1\36"+
    "\1\u0232\32\36\17\0\3\36\11\0\16\36\1\u0233\15\36"+
    "\17\0\3\36\11\0\1\36\1\u0234\32\36\17\0\3\36"+
    "\11\0\16\36\1\u0235\15\36\17\0\3\36\11\0\1\36"+
    "\1\u0114\32\36\17\0\3\36\11\0\16\36\1\300\15\36"+
    "\17\0\3\36\11\0\16\36\1\u0236\15\36\17\0\3\36"+
    "\11\0\5\36\1\u0237\26\36\17\0\3\36\11\0\13\36"+
    "\1\u010b\10\36\1\u013a\7\36\17\0\3\36\11\0\15\36"+
    "\1\115\16\36\17\0\3\36\11\0\13\36\1\u0238\20\36"+
    "\17\0\3\36\11\0\5\36\1\u0239\26\36\17\0\3\36"+
    "\11\0\1\36\1\u023a\32\36\17\0\3\36\11\0\1\36"+
    "\1\355\32\36\17\0\3\36\11\0\3\36\1\u013a\30\36"+
    "\17\0\3\36\11\0\1\36\1\u023b\32\36\17\0\3\36"+
    "\11\0\21\36\1\61\12\36\17\0\3\36\11\0\12\36"+
    "\1\366\21\36\17\0\3\36\11\0\10\36\1\262\23\36"+
    "\17\0\3\36\11\0\4\36\1\u023c\27\36\17\0\3\36"+
    "\11\0\14\36\1\u023d\17\36\17\0\3\36\11\0\13\36"+
    "\1\u023e\20\36\17\0\3\36\11\0\5\36\1\u0132\14\36"+
    "\1\u0194\11\36\17\0\3\36\11\0\14\36\1\u023f\17\36"+
    "\17\0\3\36\11\0\6\36\1\u01d1\25\36\17\0\3\36"+
    "\11\0\1\36\1\146\32\36\17\0\3\36\11\0\6\36"+
    "\1\u0240\25\36\17\0\3\36\11\0\5\36\1\u01e5\26\36"+
    "\17\0\3\36\11\0\1\36\1\u0241\32\36\17\0\3\36"+
    "\11\0\12\36\1\300\21\36\17\0\3\36\11\0\6\36"+
    "\1\u0242\25\36\17\0\3\36\11\0\16\36\1\102\15\36"+
    "\17\0\3\36\11\0\21\36\1\u0243\12\36\17\0\3\36"+
    "\11\0\1\36\1\u01a3\32\36\17\0\3\36\11\0\6\36"+
    "\1\115\25\36\17\0\3\36\11\0\16\36\1\u0244\15\36"+
    "\17\0\3\36\11\0\1\36\1\150\32\36\17\0\3\36"+
    "\11\0\10\36\1\u015a\23\36\17\0\3\36\11\0\14\36"+
    "\1\123\17\36\17\0\3\36\11\0\15\36\1\u0245\16\36"+
    "\17\0\3\36\11\0\10\36\1\u0246\23\36\17\0\3\36"+
    "\11\0\32\36\1\u0247\1\36\17\0\3\36\11\0\3\36"+
    "\1\u0248\30\36\17\0\3\36\11\0\10\36\1\u0249\23\36"+
    "\17\0\3\36\11\0\3\36\1\u024a\30\36\17\0\3\36"+
    "\11\0\1\36\1\u024b\32\36\17\0\3\36\11\0\6\36"+
    "\1\u024c\25\36\17\0\3\36\11\0\13\36\1\u010e\20\36"+
    "\17\0\3\36\11\0\13\36\1\u024d\20\36\17\0\3\36"+
    "\11\0\4\36\1\u024e\27\36\17\0\3\36\11\0\16\36"+
    "\1\u024f\15\36\17\0\3\36\11\0\6\36\1\u0250\25\36"+
    "\17\0\3\36\11\0\14\36\1\u01e5\17\36\17\0\3\36"+
    "\11\0\16\36\1\u0251\15\36\17\0\3\36\11\0\25\36"+
    "\1\324\6\36\17\0\3\36\11\0\13\36\1\u0252\20\36"+
    "\17\0\3\36\11\0\17\36\1\u0253\14\36\17\0\3\36"+
    "\11\0\5\36\1\61\26\36\17\0\3\36\11\0\6\36"+
    "\1\370\25\36\17\0\3\36\11\0\1\36\1\u0254\32\36"+
    "\17\0\3\36\11\0\14\36\1\u0255\17\36\17\0\3\36"+
    "\11\0\4\36\1\u0256\27\36\17\0\3\36\11\0\1\36"+
    "\1\u0150\13\36\1\u0257\1\36\1\u0258\14\36\17\0\3\36"+
    "\11\0\6\36\1\u022f\25\36\17\0\3\36\11\0\6\36"+
    "\1\u0259\25\36\17\0\3\36\11\0\5\36\1\u025a\26\36"+
    "\17\0\3\36\11\0\5\36\1\u025b\26\36\17\0\3\36"+
    "\11\0\14\36\1\u025c\17\36\17\0\3\36\11\0\5\36"+
    "\1\u025d\26\36\17\0\3\36\11\0\17\36\1\u0133\14\36"+
    "\17\0\3\36\11\0\12\36\1\u025e\21\36\17\0\3\36"+
    "\11\0\14\36\1\u020a\17\36\17\0\3\36\11\0\3\36"+
    "\1\u01a3\30\36\17\0\3\36\11\0\1\36\1\u025f\32\36"+
    "\17\0\3\36\11\0\3\36\1\u0260\30\36\17\0\3\36"+
    "\11\0\5\36\1\203\26\36\17\0\3\36\11\0\1\36"+
    "\1\u0261\32\36\17\0\3\36\11\0\5\36\1\225\26\36"+
    "\17\0\3\36\11\0\1\36\1\u0262\32\36\17\0\3\36"+
    "\11\0\22\36\1\73\11\36\17\0\3\36\11\0\6\36"+
    "\1\u0263\25\36\17\0\3\36\34\0\1\u0264\43\0\5\36"+
    "\1\u0265\26\36\17\0\3\36\11\0\16\36\1\u0266\15\36"+
    "\17\0\3\36\11\0\2\36\1\324\31\36\17\0\3\36"+
    "\11\0\5\36\1\376\26\36\17\0\3\36\11\0\3\36"+
    "\1\255\30\36\17\0\3\36\11\0\3\36\1\u0267\30\36"+
    "\17\0\3\36\11\0\14\36\1\351\17\36\17\0\3\36"+
    "\11\0\24\36\1\266\7\36\17\0\3\36\11\0\6\36"+
    "\1\237\25\36\17\0\3\36\11\0\22\36\1\u0268\11\36"+
    "\17\0\3\36\11\0\15\36\1\u0269\16\36\17\0\3\36"+
    "\11\0\13\36\1\331\20\36\17\0\3\36\11\0\6\36"+
    "\1\150\25\36\17\0\3\36\11\0\3\36\1\u026a\30\36"+
    "\17\0\3\36\11\0\22\36\1\u026b\11\36\17\0\3\36"+
    "\11\0\1\36\1\u0180\32\36\17\0\3\36\11\0\4\36"+
    "\1\u022f\27\36\17\0\3\36\11\0\4\36\1\u026c\27\36"+
    "\17\0\3\36\11\0\10\36\1\u013d\23\36\17\0\3\36"+
    "\11\0\5\36\1\175\26\36\17\0\3\36\11\0\3\36"+
    "\1\u026d\30\36\17\0\3\36\11\0\5\36\1\u026e\26\36"+
    "\17\0\3\36\11\0\3\36\1\u026f\30\36\17\0\3\36"+
    "\11\0\1\36\1\u0270\32\36\17\0\3\36\11\0\15\36"+
    "\1\u0271\16\36\17\0\3\36\11\0\13\36\1\u0272\20\36"+
    "\17\0\3\36\11\0\1\36\1\u0273\32\36\17\0\3\36"+
    "\11\0\3\36\1\u0274\30\36\17\0\3\36\11\0\16\36"+
    "\1\u0275\15\36\17\0\3\36\11\0\4\36\1\u0276\27\36"+
    "\17\0\3\36\11\0\14\36\1\u0277\17\36\17\0\3\36"+
    "\11\0\4\36\1\u0278\27\36\17\0\3\36\11\0\4\36"+
    "\1\u0279\27\36\17\0\3\36\11\0\12\36\1\115\21\36"+
    "\17\0\3\36\11\0\3\36\1\u027a\30\36\17\0\3\36"+
    "\11\0\5\36\1\u027b\26\36\17\0\3\36\11\0\32\36"+
    "\1\u027c\1\36\17\0\3\36\11\0\1\36\1\u0173\14\36"+
    "\1\61\15\36\17\0\3\36\11\0\6\36\1\u027d\25\36"+
    "\17\0\3\36\11\0\10\36\1\u027e\23\36\17\0\3\36"+
    "\11\0\1\36\1\u027f\32\36\17\0\3\36\11\0\4\36"+
    "\1\u0280\27\36\17\0\3\36\11\0\27\36\1\u0281\4\36"+
    "\17\0\3\36\11\0\4\36\1\u0282\27\36\17\0\3\36"+
    "\11\0\3\36\1\u0283\30\36\17\0\3\36\11\0\1\36"+
    "\1\u0284\32\36\17\0\3\36\11\0\5\36\1\u0285\26\36"+
    "\17\0\3\36\11\0\14\36\1\u0286\17\36\17\0\3\36"+
    "\11\0\3\36\1\370\30\36\17\0\3\36\11\0\6\36"+
    "\1\u0287\25\36\17\0\3\36\11\0\32\36\1\u0161\1\36"+
    "\17\0\3\36\11\0\25\36\1\u0288\6\36\17\0\3\36"+
    "\11\0\4\36\1\u0289\27\36\17\0\3\36\11\0\16\36"+
    "\1\u0231\15\36\17\0\3\36\11\0\1\u028a\33\36\17\0"+
    "\3\36\11\0\3\36\1\u010b\30\36\17\0\3\36\11\0"+
    "\17\36\1\u028b\14\36\17\0\3\36\11\0\1\115\31\36"+
    "\1\u0239\1\36\17\0\3\36\11\0\5\36\1\u0119\10\36"+
    "\1\u0139\15\36\17\0\3\36\27\0\1\u028c\50\0\10\36"+
    "\1\u0239\23\36\17\0\3\36\11\0\23\36\1\u028d\10\36"+
    "\17\0\3\36\11\0\34\36\1\u028e\16\0\3\36\11\0"+
    "\16\36\1\u028f\15\36\17\0\3\36\11\0\12\36\1\u01f5"+
    "\21\36\17\0\3\36\11\0\2\36\1\63\31\36\17\0"+
    "\3\36\11\0\7\36\1\u0290\24\36\17\0\3\36\11\0"+
    "\16\36\1\u0291\15\36\17\0\3\36\11\0\17\36\1\u0292"+
    "\14\36\17\0\3\36\11\0\24\36\1\u018e\7\36\17\0"+
    "\3\36\11\0\30\36\1\u015a\3\36\17\0\3\36\11\0"+
    "\10\36\1\u0293\23\36\17\0\3\36\11\0\1\36\1\u0294"+
    "\32\36\17\0\3\36\11\0\2\36\1\u0269\31\36\17\0"+
    "\3\36\11\0\10\36\1\306\23\36\17\0\3\36\11\0"+
    "\16\36\1\u0295\15\36\17\0\3\36\11\0\1\36\1\300"+
    "\32\36\17\0\3\36\11\0\27\36\1\u0296\4\36\17\0"+
    "\3\36\11\0\13\36\1\u0297\20\36\17\0\3\36\11\0"+
    "\1\36\1\u0298\32\36\17\0\3\36\11\0\14\36\1\u0299"+
    "\17\36\17\0\3\36\11\0\16\36\1\u0139\15\36\17\0"+
    "\3\36\11\0\11\36\1\u029a\22\36\17\0\3\36\11\0"+
    "\15\36\1\u029b\16\36\17\0\3\36\11\0\1\36\1\u029c"+
    "\32\36\17\0\3\36\11\0\7\36\1\u029d\24\36\17\0"+
    "\3\36\11\0\10\36\1\u029e\23\36\17\0\3\36\11\0"+
    "\4\36\1\u029f\27\36\17\0\3\36\11\0\3\36\1\u02a0"+
    "\30\36\17\0\3\36\11\0\1\36\1\u02a1\32\36\17\0"+
    "\3\36\11\0\13\36\1\u02a2\20\36\17\0\3\36\11\0"+
    "\5\36\1\u02a3\26\36\17\0\3\36\11\0\12\36\1\u02a4"+
    "\21\36\17\0\3\36\11\0\16\36\1\u02a5\15\36\17\0"+
    "\3\36\21\0\1\u02a6\56\0\4\36\1\u0297\27\36\17\0"+
    "\3\36\13\0\1\u02a7\64\0\2\36\1\306\31\36\17\0"+
    "\3\36\11\0\10\36\1\u0293\16\36\1\u02a8\4\36\17\0"+
    "\3\36\11\0\27\36\1\u02a9\4\36\17\0\3\36\11\0"+
    "\32\36\1\126\1\36\17\0\3\36\11\0\14\36\1\u0133"+
    "\17\36\17\0\3\36\11\0\14\36\1\u02aa\17\36\17\0"+
    "\3\36\11\0\6\36\1\u02ab\25\36\17\0\3\36\11\0"+
    "\4\36\1\u02ac\5\36\1\u019f\2\36\1\355\16\36\17\0"+
    "\3\36\11\0\4\36\1\u02ad\27\36\17\0\3\36\11\0"+
    "\3\36\1\u02ae\30\36\17\0\3\36\11\0\3\36\1\u013b"+
    "\30\36\17\0\3\36\11\0\7\36\1\u02af\24\36\17\0"+
    "\3\36\11\0\16\36\1\u02b0\15\36\17\0\3\36\11\0"+
    "\10\36\1\u0161\23\36\17\0\3\36\11\0\5\36\1\u02b1"+
    "\26\36\17\0\3\36\11\0\13\36\1\u02b2\15\36\1\u02b3"+
    "\2\36\17\0\3\36\11\0\16\36\1\u02b4\15\36\17\0"+
    "\3\36\11\0\16\36\1\u01c0\15\36\17\0\3\36\11\0"+
    "\5\36\1\u0150\26\36\17\0\3\36\11\0\16\36\1\73"+
    "\15\36\17\0\3\36\11\0\13\36\1\u02b5\20\36\17\0"+
    "\3\36\11\0\4\36\1\u027d\27\36\17\0\3\36\11\0"+
    "\14\36\1\u02b6\3\36\1\u013d\13\36\17\0\3\36\17\0"+
    "\1\u02b7\60\0\1\36\1\u02b8\32\36\17\0\3\36\11\0"+
    "\11\36\1\u02b9\5\36\1\u02ba\14\36\17\0\3\36\11\0"+
    "\3\36\1\u013d\30\36\17\0\3\36\11\0\1\36\1\u02bb"+
    "\32\36\17\0\3\36\11\0\5\36\1\u0119\26\36\17\0"+
    "\3\36\11\0\4\36\1\u022d\27\36\17\0\3\36\11\0"+
    "\1\36\1\u02bc\32\36\17\0\3\36\11\0\3\36\1\u02bd"+
    "\30\36\17\0\3\36\11\0\12\36\1\u02be\21\36\17\0"+
    "\3\36\11\0\1\36\1\u02bf\32\36\17\0\3\36\11\0"+
    "\16\36\1\u02c0\15\36\17\0\3\36\11\0\4\36\1\u02c1"+
    "\27\36\17\0\3\36\11\0\14\36\1\u02c2\17\36\17\0"+
    "\3\36\11\0\21\36\1\u02c3\12\36\17\0\3\36\25\0"+
    "\1\u02c4\52\0\3\36\1\u02c5\30\36\17\0\3\36\11\0"+
    "\14\36\1\u02c6\17\36\17\0\3\36\11\0\1\36\1\u02c7"+
    "\32\36\17\0\3\36\11\0\17\36\1\u02c8\14\36\17\0"+
    "\3\36\11\0\15\36\1\u013d\16\36\17\0\3\36\11\0"+
    "\4\36\1\u02c9\27\36\17\0\3\36\11\0\15\36\1\u0191"+
    "\16\36\17\0\3\36\11\0\17\36\1\u02ca\14\36\17\0"+
    "\3\36\11\0\7\36\1\u02cb\24\36\17\0\3\36\11\0"+
    "\1\36\1\u02cc\32\36\17\0\3\36\11\0\12\36\1\u02cd"+
    "\21\36\17\0\3\36\11\0\21\36\1\u02ce\12\36\17\0"+
    "\3\36\23\0\1\u02cf\54\0\13\36\1\u018e\20\36\17\0"+
    "\3\36\11\0\12\36\1\351\21\36\17\0\3\36\11\0"+
    "\3\36\1\u0192\30\36\17\0\3\36\11\0\16\36\1\u02d0"+
    "\15\36\17\0\3\36\11\0\1\36\1\u02d1\32\36\17\0"+
    "\3\36\11\0\1\36\1\u02d2\32\36\17\0\3\36\11\0"+
    "\32\36\1\u02d3\1\36\17\0\3\36\11\0\17\36\1\u015c"+
    "\14\36\17\0\3\36\11\0\6\36\1\u010e\25\36\17\0"+
    "\3\36\11\0\13\36\1\u02d4\20\36\17\0\3\36\43\0"+
    "\1\u02a6\34\0\13\36\1\u01e6\20\36\17\0\3\36\11\0"+
    "\21\36\1\u02d5\12\36\17\0\3\36\11\0\22\36\1\u02d6"+
    "\11\36\17\0\3\36\11\0\11\36\1\u02d7\22\36\17\0"+
    "\3\36\11\0\16\36\1\u015e\15\36\17\0\3\36\11\0"+
    "\1\36\1\u02d8\32\36\17\0\3\36\11\0\5\36\1\u02d9"+
    "\26\36\17\0\3\36\11\0\6\36\1\u02da\25\36\17\0"+
    "\3\36\11\0\16\36\1\u0162\15\36\17\0\3\36\11\0"+
    "\6\36\1\u02db\25\36\17\0\3\36\11\0\5\36\1\u02dc"+
    "\26\36\17\0\3\36\11\0\1\36\1\u02dd\32\36\17\0"+
    "\3\36\11\0\13\36\1\u02de\20\36\17\0\3\36\11\0"+
    "\4\36\1\u02df\27\36\17\0\3\36\11\0\16\36\1\u02e0"+
    "\15\36\17\0\3\36\11\0\7\36\1\u02e1\24\36\17\0"+
    "\3\36\11\0\4\36\1\u02ad\10\36\1\u02e2\16\36\17\0"+
    "\3\36\11\0\16\36\1\u02e3\15\36\17\0\3\36\11\0"+
    "\4\36\1\u02e4\27\36\17\0\3\36\11\0\5\36\1\u02e5"+
    "\26\36\17\0\3\36\11\0\1\36\1\u02e6\32\36\17\0"+
    "\3\36\11\0\22\36\1\u02e7\11\36\17\0\3\36\11\0"+
    "\13\36\1\u02e0\20\36\17\0\3\36\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[39655];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\1\1\1\11\241\1\1\0"+
    "\1\11\1\0\243\1\1\0\152\1\1\0\7\1\1\0"+
    "\1\1\1\0\142\1\1\0\75\1\1\0\47\1\1\0"+
    "\1\1\1\0\27\1\1\11\1\0\17\1\1\0\14\1"+
    "\1\0\12\1\1\0\30\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[743];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;
    public int lin;
    public int col;
    public int len;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2630) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 13: break;
          case 2: 
            { /*Ignore*/
            } 
            // fall through
          case 14: break;
          case 3: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Operador;
            } 
            // fall through
          case 15: break;
          case 4: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 16: break;
          case 5: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Entero;
            } 
            // fall through
          case 17: break;
          case 6: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return IdentificadorError;
            } 
            // fall through
          case 18: break;
          case 7: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return MalComentario;
            } 
            // fall through
          case 19: break;
          case 8: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Reservada;
            } 
            // fall through
          case 20: break;
          case 9: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Flotante;
            } 
            // fall through
          case 21: break;
          case 10: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return Varchar;
            } 
            // fall through
          case 22: break;
          case 11: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return TipoDato;
            } 
            // fall through
          case 23: break;
          case 12: 
            { lin=yyline; col=yycolumn; len=yylength(); lexeme=yytext(); return FlotanteError;
            } 
            // fall through
          case 24: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
